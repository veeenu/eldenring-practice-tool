// **********************************
// *** AUTOGENERATED, DO NOT EDIT ***
// **********************************
use std::collections::HashMap;
use std::ffi::c_void;

use macro_param::ParamStruct;
use once_cell::sync::Lazy;

use crate::prelude::*;

unsafe fn get_lambda<T: ParamStruct>() -> BoxedVisitorLambda {
    Box::new(|ptr, v| {
        if let Some(r) = (ptr as *mut T).as_mut() {
            r.visit(&mut *v);
        }
    })
}

type BoxedVisitorLambda = Box<dyn Fn(*const c_void, &mut dyn ParamVisitor) + Send + Sync>;

pub static PARAM_VTABLE: Lazy<HashMap<String, BoxedVisitorLambda>> = Lazy::new(|| {
    [
        ("ActionButtonParam".to_string(), unsafe { get_lambda::<ActionButtonParam>() }),
        ("AiAnimTblParam".to_string(), unsafe { get_lambda::<AiAnimTblParam>() }),
        ("AIAttackParam".to_string(), unsafe { get_lambda::<AIAttackParam>() }),
        ("AiOddsParam".to_string(), unsafe { get_lambda::<AiOddsParam>() }),
        ("AiSoundParam".to_string(), unsafe { get_lambda::<AiSoundParam>() }),
        ("AiStandardInfo".to_string(), unsafe { get_lambda::<AiStandardInfo>() }),
        ("AssetGeometryParam".to_string(), unsafe { get_lambda::<AssetGeometryParam>() }),
        ("AssetMaterialSfxParam".to_string(), unsafe { get_lambda::<AssetMaterialSfxParam>() }),
        ("AssetModelSfxParam".to_string(), unsafe { get_lambda::<AssetModelSfxParam>() }),
        ("AtkParam".to_string(), unsafe { get_lambda::<AtkParam>() }),
        ("AttackElementCorrectParam".to_string(), unsafe {
            get_lambda::<AttackElementCorrectParam>()
        }),
        ("AutoCreateEnvSoundParam".to_string(), unsafe { get_lambda::<AutoCreateEnvSoundParam>() }),
        ("BaseChrSelectMenuParam".to_string(), unsafe { get_lambda::<BaseChrSelectMenuParam>() }),
        ("BehaviorParam".to_string(), unsafe { get_lambda::<BehaviorParam>() }),
        ("BonfireWarpParam".to_string(), unsafe { get_lambda::<BonfireWarpParam>() }),
        ("BonfireWarpSubCategoryParam".to_string(), unsafe {
            get_lambda::<BonfireWarpSubCategoryParam>()
        }),
        ("BonfireWarpTabParam".to_string(), unsafe { get_lambda::<BonfireWarpTabParam>() }),
        ("BuddyParam".to_string(), unsafe { get_lambda::<BuddyParam>() }),
        ("BuddyStoneParam".to_string(), unsafe { get_lambda::<BuddyStoneParam>() }),
        ("BudgetParam".to_string(), unsafe { get_lambda::<BudgetParam>() }),
        ("BulletCreateLimitParam".to_string(), unsafe { get_lambda::<BulletCreateLimitParam>() }),
        ("BulletParam".to_string(), unsafe { get_lambda::<BulletParam>() }),
        ("CalcCorrectGraph".to_string(), unsafe { get_lambda::<CalcCorrectGraph>() }),
        ("CameraFadeParam".to_string(), unsafe { get_lambda::<CameraFadeParam>() }),
        ("CeremonyParam".to_string(), unsafe { get_lambda::<CeremonyParam>() }),
        ("CharaInitParam".to_string(), unsafe { get_lambda::<CharaInitParam>() }),
        ("CharMakeMenuListItemParam".to_string(), unsafe {
            get_lambda::<CharMakeMenuListItemParam>()
        }),
        ("CharMakeMenuTopParam".to_string(), unsafe { get_lambda::<CharMakeMenuTopParam>() }),
        ("ChrActivateConditionParam".to_string(), unsafe {
            get_lambda::<ChrActivateConditionParam>()
        }),
        ("ChrModelParam".to_string(), unsafe { get_lambda::<ChrModelParam>() }),
        ("ClearCountCorrectParam".to_string(), unsafe { get_lambda::<ClearCountCorrectParam>() }),
        ("CommonSystemParam".to_string(), unsafe { get_lambda::<CommonSystemParam>() }),
        ("CoolTimeParam".to_string(), unsafe { get_lambda::<CoolTimeParam>() }),
        ("CutsceneGparamTimeParam".to_string(), unsafe { get_lambda::<CutsceneGparamTimeParam>() }),
        ("CutsceneGparamWeatherParam".to_string(), unsafe {
            get_lambda::<CutsceneGparamWeatherParam>()
        }),
        ("CutsceneMapIdParam".to_string(), unsafe { get_lambda::<CutsceneMapIdParam>() }),
        ("CutSceneTextureLoadParam".to_string(), unsafe {
            get_lambda::<CutSceneTextureLoadParam>()
        }),
        ("CutsceneTimezoneConvertParam".to_string(), unsafe {
            get_lambda::<CutsceneTimezoneConvertParam>()
        }),
        ("CutsceneWeatherOverrideGparamIdConvertParam".to_string(), unsafe {
            get_lambda::<CutsceneWeatherOverrideGparamIdConvertParam>()
        }),
        ("DecalParam".to_string(), unsafe { get_lambda::<DecalParam>() }),
        ("DirectionCameraParam".to_string(), unsafe { get_lambda::<DirectionCameraParam>() }),
        ("EnemyCommonParam".to_string(), unsafe { get_lambda::<EnemyCommonParam>() }),
        ("EnemyStandardInfo".to_string(), unsafe { get_lambda::<EnemyStandardInfo>() }),
        ("EnvObjLotParam".to_string(), unsafe { get_lambda::<EnvObjLotParam>() }),
        ("EquipMtrlSetParam".to_string(), unsafe { get_lambda::<EquipMtrlSetParam>() }),
        ("EquipParamAccessory".to_string(), unsafe { get_lambda::<EquipParamAccessory>() }),
        ("EquipParamCustomWeapon".to_string(), unsafe { get_lambda::<EquipParamCustomWeapon>() }),
        ("EquipParamGem".to_string(), unsafe { get_lambda::<EquipParamGem>() }),
        ("EquipParamGoods".to_string(), unsafe { get_lambda::<EquipParamGoods>() }),
        ("EquipParamProtector".to_string(), unsafe { get_lambda::<EquipParamProtector>() }),
        ("EquipParamWeapon".to_string(), unsafe { get_lambda::<EquipParamWeapon>() }),
        ("EstusFlaskRecoveryParam".to_string(), unsafe { get_lambda::<EstusFlaskRecoveryParam>() }),
        ("EventFlagUsageParam".to_string(), unsafe { get_lambda::<EventFlagUsageParam>() }),
        ("FaceParam".to_string(), unsafe { get_lambda::<FaceParam>() }),
        ("FaceRangeParam".to_string(), unsafe { get_lambda::<FaceRangeParam>() }),
        ("FeTextEffectParam".to_string(), unsafe { get_lambda::<FeTextEffectParam>() }),
        ("FootSfxParam".to_string(), unsafe { get_lambda::<FootSfxParam>() }),
        ("GameAreaParam".to_string(), unsafe { get_lambda::<GameAreaParam>() }),
        ("GameInfoParam".to_string(), unsafe { get_lambda::<GameInfoParam>() }),
        ("GameSystemCommonParam".to_string(), unsafe { get_lambda::<GameSystemCommonParam>() }),
        ("Gconfig_AAQuality".to_string(), unsafe { get_lambda::<Gconfig_AAQuality>() }),
        ("Gconfig_DecalQuality".to_string(), unsafe { get_lambda::<Gconfig_DecalQuality>() }),
        ("Gconfig_DOFQuality".to_string(), unsafe { get_lambda::<Gconfig_DOFQuality>() }),
        ("Gconfig_EffectQuality".to_string(), unsafe { get_lambda::<Gconfig_EffectQuality>() }),
        ("Gconfig_LightingQuality".to_string(), unsafe { get_lambda::<Gconfig_LightingQuality>() }),
        ("Gconfig_MotionBlurQuality".to_string(), unsafe {
            get_lambda::<Gconfig_MotionBlurQuality>()
        }),
        ("Gconfig_ReflectionQuality".to_string(), unsafe {
            get_lambda::<Gconfig_ReflectionQuality>()
        }),
        ("Gconfig_ShaderQuality".to_string(), unsafe { get_lambda::<Gconfig_ShaderQuality>() }),
        ("Gconfig_ShadowQuality".to_string(), unsafe { get_lambda::<Gconfig_ShadowQuality>() }),
        ("Gconfig_SSAOQuality".to_string(), unsafe { get_lambda::<Gconfig_SSAOQuality>() }),
        ("Gconfig_TextureFilterQuality".to_string(), unsafe {
            get_lambda::<Gconfig_TextureFilterQuality>()
        }),
        ("Gconfig_VolumetricEffectQuality".to_string(), unsafe {
            get_lambda::<Gconfig_VolumetricEffectQuality>()
        }),
        ("Gconfig_WaterQuality".to_string(), unsafe { get_lambda::<Gconfig_WaterQuality>() }),
        ("GestureParam".to_string(), unsafe { get_lambda::<GestureParam>() }),
        ("GparamGridRegionInfo".to_string(), unsafe { get_lambda::<GparamGridRegionInfo>() }),
        ("GparamRefSettingsParam".to_string(), unsafe { get_lambda::<GparamRefSettingsParam>() }),
        ("GraphicsCommonParam".to_string(), unsafe { get_lambda::<GraphicsCommonParam>() }),
        ("GraphicsConfig".to_string(), unsafe { get_lambda::<GraphicsConfig>() }),
        ("GrassLodRangeParam".to_string(), unsafe { get_lambda::<GrassLodRangeParam>() }),
        ("GrassMapSettings".to_string(), unsafe { get_lambda::<GrassMapSettings>() }),
        ("GrassTypeParam".to_string(), unsafe { get_lambda::<GrassTypeParam>() }),
        ("HitEffectSeParam".to_string(), unsafe { get_lambda::<HitEffectSeParam>() }),
        ("HitEffectSfxConceptParam".to_string(), unsafe {
            get_lambda::<HitEffectSfxConceptParam>()
        }),
        ("HitEffectSfxParam".to_string(), unsafe { get_lambda::<HitEffectSfxParam>() }),
        ("HitMtrlParam".to_string(), unsafe { get_lambda::<HitMtrlParam>() }),
        ("ItemLotParam".to_string(), unsafe { get_lambda::<ItemLotParam>() }),
        ("KeyAssignMenuItemParam".to_string(), unsafe { get_lambda::<KeyAssignMenuItemParam>() }),
        ("KeyAssignParam".to_string(), unsafe { get_lambda::<KeyAssignParam>() }),
        ("KnockBackParam".to_string(), unsafe { get_lambda::<KnockBackParam>() }),
        ("KnowledgeLoadScreenItemParam".to_string(), unsafe {
            get_lambda::<KnowledgeLoadScreenItemParam>()
        }),
        ("LegacyDistantViewPartsReplaceParam".to_string(), unsafe {
            get_lambda::<LegacyDistantViewPartsReplaceParam>()
        }),
        ("LoadBalancerDrawDistScaleParam".to_string(), unsafe {
            get_lambda::<LoadBalancerDrawDistScaleParam>()
        }),
        ("LoadBalancerNewDrawDistScaleParam".to_string(), unsafe {
            get_lambda::<LoadBalancerNewDrawDistScaleParam>()
        }),
        ("LoadBalancerParam".to_string(), unsafe { get_lambda::<LoadBalancerParam>() }),
        ("LockCamParam".to_string(), unsafe { get_lambda::<LockCamParam>() }),
        ("MagicParam".to_string(), unsafe { get_lambda::<MagicParam>() }),
        ("MapDefaultInfoParam".to_string(), unsafe { get_lambda::<MapDefaultInfoParam>() }),
        ("MapGdRegionDrawParam".to_string(), unsafe { get_lambda::<MapGdRegionDrawParam>() }),
        ("MapGdRegionInfo".to_string(), unsafe { get_lambda::<MapGdRegionInfo>() }),
        ("MapGridCreateHeightLimitInfo".to_string(), unsafe {
            get_lambda::<MapGridCreateHeightLimitInfo>()
        }),
        ("MapMimicryEstablishmentParam".to_string(), unsafe {
            get_lambda::<MapMimicryEstablishmentParam>()
        }),
        ("MapNameTexParam".to_string(), unsafe { get_lambda::<MapNameTexParam>() }),
        ("MapPieceTexParam".to_string(), unsafe { get_lambda::<MapPieceTexParam>() }),
        ("MaterialEx".to_string(), unsafe { get_lambda::<MaterialEx>() }),
        ("MenuCommonParam".to_string(), unsafe { get_lambda::<MenuCommonParam>() }),
        ("MenuOffscrRendParam".to_string(), unsafe { get_lambda::<MenuOffscrRendParam>() }),
        ("MenuParamColorTable".to_string(), unsafe { get_lambda::<MenuParamColorTable>() }),
        ("MenuPropertyLayoutParam".to_string(), unsafe { get_lambda::<MenuPropertyLayoutParam>() }),
        ("MenuPropertySpecParam".to_string(), unsafe { get_lambda::<MenuPropertySpecParam>() }),
        ("MenuValueTableSpecParam".to_string(), unsafe { get_lambda::<MenuValueTableSpecParam>() }),
        ("MimicryEstablishmentTexParam".to_string(), unsafe {
            get_lambda::<MimicryEstablishmentTexParam>()
        }),
        ("MissileParam".to_string(), unsafe { get_lambda::<MissileParam>() }),
        ("ModelSfxParam".to_string(), unsafe { get_lambda::<ModelSfxParam>() }),
        ("MoveParam".to_string(), unsafe { get_lambda::<MoveParam>() }),
        ("MultiEstusFlaskBonusParam".to_string(), unsafe {
            get_lambda::<MultiEstusFlaskBonusParam>()
        }),
        ("MultiPlayCorrectionParam".to_string(), unsafe {
            get_lambda::<MultiPlayCorrectionParam>()
        }),
        ("MultiSoulBonusRateParam".to_string(), unsafe { get_lambda::<MultiSoulBonusRateParam>() }),
        ("NetworkAreaParam".to_string(), unsafe { get_lambda::<NetworkAreaParam>() }),
        ("NetworkMsgParam".to_string(), unsafe { get_lambda::<NetworkMsgParam>() }),
        ("NetworkParam".to_string(), unsafe { get_lambda::<NetworkParam>() }),
        ("NpcAiActionParam".to_string(), unsafe { get_lambda::<NpcAiActionParam>() }),
        ("NpcAiBehaviorProbabilityParam".to_string(), unsafe {
            get_lambda::<NpcAiBehaviorProbabilityParam>()
        }),
        ("NpcParam".to_string(), unsafe { get_lambda::<NpcParam>() }),
        ("NpcThinkParam".to_string(), unsafe { get_lambda::<NpcThinkParam>() }),
        ("ObjActParam".to_string(), unsafe { get_lambda::<ObjActParam>() }),
        ("ObjectMaterialSfxParam".to_string(), unsafe { get_lambda::<ObjectMaterialSfxParam>() }),
        ("ObjectParam".to_string(), unsafe { get_lambda::<ObjectParam>() }),
        ("PartsDrawParam".to_string(), unsafe { get_lambda::<PartsDrawParam>() }),
        ("PerformanceCheckParam".to_string(), unsafe { get_lambda::<PerformanceCheckParam>() }),
        ("PhantomParam".to_string(), unsafe { get_lambda::<PhantomParam>() }),
        ("PlayerCommonParam".to_string(), unsafe { get_lambda::<PlayerCommonParam>() }),
        ("PlayRegionParam".to_string(), unsafe { get_lambda::<PlayRegionParam>() }),
        ("PostureControlParam_Gender".to_string(), unsafe {
            get_lambda::<PostureControlParam_Gender>()
        }),
        ("PostureControlParam_Pro".to_string(), unsafe { get_lambda::<PostureControlParam_Pro>() }),
        ("PostureControlParam_WepLeft".to_string(), unsafe {
            get_lambda::<PostureControlParam_WepLeft>()
        }),
        ("PostureControlParam_WepRight".to_string(), unsafe {
            get_lambda::<PostureControlParam_WepRight>()
        }),
        ("RandomAppearEditParam".to_string(), unsafe { get_lambda::<RandomAppearEditParam>() }),
        ("RandomAppearParam".to_string(), unsafe { get_lambda::<RandomAppearParam>() }),
        ("ReinforceParamProtector".to_string(), unsafe { get_lambda::<ReinforceParamProtector>() }),
        ("ReinforceParamWeapon".to_string(), unsafe { get_lambda::<ReinforceParamWeapon>() }),
        ("ResistCorrectParam".to_string(), unsafe { get_lambda::<ResistCorrectParam>() }),
        ("ReverbAuxSendBusParam".to_string(), unsafe { get_lambda::<ReverbAuxSendBusParam>() }),
        ("RideParam".to_string(), unsafe { get_lambda::<RideParam>() }),
        ("RoleParam".to_string(), unsafe { get_lambda::<RoleParam>() }),
        ("RollingObjLotParam".to_string(), unsafe { get_lambda::<RollingObjLotParam>() }),
        ("RuntimeBoneControlParam".to_string(), unsafe { get_lambda::<RuntimeBoneControlParam>() }),
        ("SeActivationRangeParam".to_string(), unsafe { get_lambda::<SeActivationRangeParam>() }),
        ("SeMaterialConvertParam".to_string(), unsafe { get_lambda::<SeMaterialConvertParam>() }),
        ("SfxBlockResShareParam".to_string(), unsafe { get_lambda::<SfxBlockResShareParam>() }),
        ("ShopLineupParam".to_string(), unsafe { get_lambda::<ShopLineupParam>() }),
        ("SignPuddleParam".to_string(), unsafe { get_lambda::<SignPuddleParam>() }),
        ("SoundAssetSoundObjEnableDistParam".to_string(), unsafe {
            get_lambda::<SoundAssetSoundObjEnableDistParam>()
        }),
        ("SoundAutoEnvSoundGroupParam".to_string(), unsafe {
            get_lambda::<SoundAutoEnvSoundGroupParam>()
        }),
        ("SoundAutoReverbEvaluationDistParam".to_string(), unsafe {
            get_lambda::<SoundAutoReverbEvaluationDistParam>()
        }),
        ("SoundAutoReverbSelectParam".to_string(), unsafe {
            get_lambda::<SoundAutoReverbSelectParam>()
        }),
        ("SoundChrPhysicsSeParam".to_string(), unsafe { get_lambda::<SoundChrPhysicsSeParam>() }),
        ("SoundCommonIngameParam".to_string(), unsafe { get_lambda::<SoundCommonIngameParam>() }),
        ("SoundCommonSystemParam".to_string(), unsafe { get_lambda::<SoundCommonSystemParam>() }),
        ("SoundCutsceneParam".to_string(), unsafe { get_lambda::<SoundCutsceneParam>() }),
        ("SpeedtreeModel".to_string(), unsafe { get_lambda::<SpeedtreeModel>() }),
        ("SpEffect".to_string(), unsafe { get_lambda::<SpEffect>() }),
        ("SpEffectSetParam".to_string(), unsafe { get_lambda::<SpEffectSetParam>() }),
        ("SpEffectVfx".to_string(), unsafe { get_lambda::<SpEffectVfx>() }),
        ("SwordArtsParam".to_string(), unsafe { get_lambda::<SwordArtsParam>() }),
        ("TalkParam".to_string(), unsafe { get_lambda::<TalkParam>() }),
        ("ThrowDirectionSfxParam".to_string(), unsafe { get_lambda::<ThrowDirectionSfxParam>() }),
        ("ThrowParam".to_string(), unsafe { get_lambda::<ThrowParam>() }),
        ("ToughnessParam".to_string(), unsafe { get_lambda::<ToughnessParam>() }),
        ("TutorialParam".to_string(), unsafe { get_lambda::<TutorialParam>() }),
        ("WaypointParam".to_string(), unsafe { get_lambda::<WaypointParam>() }),
        ("WeatherAssetCreateParam".to_string(), unsafe { get_lambda::<WeatherAssetCreateParam>() }),
        ("WeatherAssetReplaceParam".to_string(), unsafe {
            get_lambda::<WeatherAssetReplaceParam>()
        }),
        ("WeatherLotParam".to_string(), unsafe { get_lambda::<WeatherLotParam>() }),
        ("WeatherLotTexParam".to_string(), unsafe { get_lambda::<WeatherLotTexParam>() }),
        ("WeatherParam".to_string(), unsafe { get_lambda::<WeatherParam>() }),
        ("WepAbsorpPosParam".to_string(), unsafe { get_lambda::<WepAbsorpPosParam>() }),
        ("WetAspectParam".to_string(), unsafe { get_lambda::<WetAspectParam>() }),
        ("WhiteSignCoolTimeParam".to_string(), unsafe { get_lambda::<WhiteSignCoolTimeParam>() }),
        ("WorldMapLegacyConvParam".to_string(), unsafe { get_lambda::<WorldMapLegacyConvParam>() }),
        ("WorldMapPieceParam".to_string(), unsafe { get_lambda::<WorldMapPieceParam>() }),
        ("WorldMapPlaceNameParam".to_string(), unsafe { get_lambda::<WorldMapPlaceNameParam>() }),
        ("WorldMapPointParam".to_string(), unsafe { get_lambda::<WorldMapPointParam>() }),
        ("WwiseValueToStrConvertParamFormat".to_string(), unsafe {
            get_lambda::<WwiseValueToStrConvertParamFormat>()
        }),
    ]
    .into_iter()
    .collect()
});
#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ActionButtonParam {
    pub region_type: u8,
    pub category: u8,
    pub padding1: [u8; 2],
    pub dummy_poly1: i32,
    pub dummy_poly2: i32,
    pub radius: f32,
    pub angle: i32,
    pub depth: f32,
    pub width: f32,
    pub height: f32,
    pub base_height_offset: f32,
    pub angle_check_type: u8,
    pub padding2: [u8; 3],
    pub allow_angle: i32,
    pub spot_dummy_poly: i32,
    pub text_box_type: u8,
    pub padding3: [u8; 2],
    pub text_id: i32,
    pub invalid_flag: u32,
    pub grayout_flag: u32,
    pub override_action_button_id_for_ride: i32,
    pub exec_invalid_time: f32,
    pub padding6: [u8; 28],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AiAnimTblParam {
    pub atk0_ez_state_id: u16,
    pub atk1_ez_state_id: u16,
    pub atk2_ez_state_id: u16,
    pub atk3_ez_state_id: u16,
    pub atk4_ez_state_id: u16,
    pub atk5_ez_state_id: u16,
    pub atk6_ez_state_id: u16,
    pub atk7_ez_state_id: u16,
    pub atk8_ez_state_id: u16,
    pub atk9_ez_state_id: u16,
    pub atk10_ez_state_id: u16,
    pub atk11_ez_state_id: u16,
    pub atk12_ez_state_id: u16,
    pub atk13_ez_state_id: u16,
    pub atk14_ez_state_id: u16,
    pub atk15_ez_state_id: u16,
    pub atk16_ez_state_id: u16,
    pub atk17_ez_state_id: u16,
    pub atk18_ez_state_id: u16,
    pub atk19_ez_state_id: u16,
    pub atk20_ez_state_id: u16,
    pub atk21_ez_state_id: u16,
    pub atk22_ez_state_id: u16,
    pub atk23_ez_state_id: u16,
    pub atk24_ez_state_id: u16,
    pub atk25_ez_state_id: u16,
    pub atk26_ez_state_id: u16,
    pub atk27_ez_state_id: u16,
    pub atk28_ez_state_id: u16,
    pub atk29_ez_state_id: u16,
    pub atk0_min_dist: u16,
    pub atk1_min_dist: u16,
    pub atk2_min_dist: u16,
    pub atk3_min_dist: u16,
    pub atk4_min_dist: u16,
    pub atk5_min_dist: u16,
    pub atk6_min_dist: u16,
    pub atk7_min_dist: u16,
    pub atk8_min_dist: u16,
    pub atk9_min_dist: u16,
    pub atk10_min_dist: u16,
    pub atk11_min_dist: u16,
    pub atk12_min_dist: u16,
    pub atk13_min_dist: u16,
    pub atk14_min_dist: u16,
    pub atk15_min_dist: u16,
    pub atk16_min_dist: u16,
    pub atk17_min_dist: u16,
    pub atk18_min_dist: u16,
    pub atk19_min_dist: u16,
    pub atk20_min_dist: u16,
    pub atk21_min_dist: u16,
    pub atk22_min_dist: u16,
    pub atk23_min_dist: u16,
    pub atk24_min_dist: u16,
    pub atk25_min_dist: u16,
    pub atk26_min_dist: u16,
    pub atk27_min_dist: u16,
    pub atk28_min_dist: u16,
    pub atk29_min_dist: u16,
    pub atk0_max_dist: u16,
    pub atk1_max_dist: u16,
    pub atk2_max_dist: u16,
    pub atk3_max_dist: u16,
    pub atk4_max_dist: u16,
    pub atk5_max_dist: u16,
    pub atk6_max_dist: u16,
    pub atk7_max_dist: u16,
    pub atk8_max_dist: u16,
    pub atk9_max_dist: u16,
    pub atk10_max_dist: u16,
    pub atk11_max_dist: u16,
    pub atk12_max_dist: u16,
    pub atk13_max_dist: u16,
    pub atk14_max_dist: u16,
    pub atk15_max_dist: u16,
    pub atk16_max_dist: u16,
    pub atk17_max_dist: u16,
    pub atk18_max_dist: u16,
    pub atk19_max_dist: u16,
    pub atk20_max_dist: u16,
    pub atk21_max_dist: u16,
    pub atk22_max_dist: u16,
    pub atk23_max_dist: u16,
    pub atk24_max_dist: u16,
    pub atk25_max_dist: u16,
    pub atk26_max_dist: u16,
    pub atk27_max_dist: u16,
    pub atk28_max_dist: u16,
    pub atk29_max_dist: u16,
    #[bitflag(atk0_AtkDistType, 0)]
    #[bitflag(atk1_AtkDistType, 1)]
    #[bitflag(atk2_AtkDistType, 2)]
    #[bitflag(atk3_AtkDistType, 3)]
    #[bitflag(atk4_AtkDistType, 4)]
    #[bitflag(atk5_AtkDistType, 5)]
    #[bitflag(atk6_AtkDistType, 6)]
    #[bitflag(atk7_AtkDistType, 7)]
    pub bitfield0: u8,
    #[bitflag(atk8_AtkDistType, 0)]
    #[bitflag(atk9_AtkDistType, 1)]
    #[bitflag(atk10_AtkDistType, 2)]
    #[bitflag(atk11_AtkDistType, 3)]
    #[bitflag(atk12_AtkDistType, 4)]
    #[bitflag(atk13_AtkDistType, 5)]
    #[bitflag(atk14_AtkDistType, 6)]
    #[bitflag(atk15_AtkDistType, 7)]
    pub bitfield1: u8,
    #[bitflag(atk16_AtkDistType, 0)]
    #[bitflag(atk17_AtkDistType, 1)]
    #[bitflag(atk18_AtkDistType, 2)]
    #[bitflag(atk19_AtkDistType, 3)]
    #[bitflag(atk20_AtkDistType, 4)]
    #[bitflag(atk21_AtkDistType, 5)]
    #[bitflag(atk22_AtkDistType, 6)]
    #[bitflag(atk23_AtkDistType, 7)]
    pub bitfield2: u8,
    pub pad0: [u8; 13],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AIAttackParam {
    pub attack_table_id: i32,
    pub attack_id: i32,
    pub success_distance: f32,
    pub turn_time_before_attack: f32,
    pub front_angle_range: i16,
    pub up_angle_threshold: i16,
    pub down_angle_thershold: i16,
    pub is_first_attack: u8,
    pub does_select_on_out_range: u8,
    pub min_optimal_distance: f32,
    pub max_optimal_distance: f32,
    pub base_direction_for_optimal_angle1: i16,
    pub optimal_attack_angle_range1: i16,
    pub base_direction_for_optimal_angle2: i16,
    pub optimal_attack_angle_range2: i16,
    pub interval_for_exec: f32,
    pub selection_tendency: f32,
    pub short_range_tendency: f32,
    pub middle_range_tendency: f32,
    pub far_range_tendency: f32,
    pub out_range_tendency: f32,
    pub derive_attack_id1: i32,
    pub derive_attack_id2: i32,
    pub derive_attack_id3: i32,
    pub derive_attack_id4: i32,
    pub derive_attack_id5: i32,
    pub derive_attack_id6: i32,
    pub derive_attack_id7: i32,
    pub derive_attack_id8: i32,
    pub derive_attack_id9: i32,
    pub derive_attack_id10: i32,
    pub derive_attack_id11: i32,
    pub derive_attack_id12: i32,
    pub derive_attack_id13: i32,
    pub derive_attack_id14: i32,
    pub derive_attack_id15: i32,
    pub derive_attack_id16: i32,
    pub goal_life_min: f32,
    pub goal_life_max: f32,
    pub does_select_on_inner_range: u8,
    pub enable_attack_on_battle_start: u8,
    pub does_select_on_target_down: u8,
    pub pad1: [u8; 1],
    pub min_arrive_distance: f32,
    pub max_arrive_distance: f32,
    pub combo_exec_distance: f32,
    pub combo_exec_range: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AiOddsParam {
    pub act0: u8,
    pub act1: u8,
    pub act2: u8,
    pub act3: u8,
    pub act4: u8,
    pub act5: u8,
    pub act6: u8,
    pub act7: u8,
    pub act8: u8,
    pub act9: u8,
    pub act10: u8,
    pub act11: u8,
    pub act12: u8,
    pub act13: u8,
    pub act14: u8,
    pub act15: u8,
    pub act16: u8,
    pub act17: u8,
    pub act18: u8,
    pub act19: u8,
    pub act20: u8,
    pub act21: u8,
    pub act22: u8,
    pub act23: u8,
    pub act24: u8,
    pub act25: u8,
    pub act26: u8,
    pub act27: u8,
    pub act28: u8,
    pub act29: u8,
    pub act30: u8,
    pub act31: u8,
    pub act32: u8,
    pub act33: u8,
    pub act34: u8,
    pub act35: u8,
    pub act36: u8,
    pub act37: u8,
    pub act38: u8,
    pub act39: u8,
    pub act40: u8,
    pub act41: u8,
    pub act42: u8,
    pub act43: u8,
    pub act44: u8,
    pub act45: u8,
    pub act46: u8,
    pub act47: u8,
    pub act48: u8,
    pub act49: u8,
    pub act50: u8,
    pub act51: u8,
    pub act52: u8,
    pub act53: u8,
    pub act54: u8,
    pub act55: u8,
    pub act56: u8,
    pub act57: u8,
    pub act58: u8,
    pub act59: u8,
    pub act60: u8,
    pub act61: u8,
    pub act62: u8,
    pub act63: u8,
    pub act64: u8,
    pub act65: u8,
    pub act66: u8,
    pub act67: u8,
    pub act68: u8,
    pub act69: u8,
    pub act70: u8,
    pub act71: u8,
    pub act72: u8,
    pub act73: u8,
    pub act74: u8,
    pub act75: u8,
    pub act76: u8,
    pub act77: u8,
    pub act78: u8,
    pub act79: u8,
    pub act80: u8,
    pub act81: u8,
    pub act82: u8,
    pub act83: u8,
    pub act84: u8,
    pub act85: u8,
    pub act86: u8,
    pub act87: u8,
    pub act88: u8,
    pub act89: u8,
    pub act90: u8,
    pub act91: u8,
    pub act92: u8,
    pub act93: u8,
    pub act94: u8,
    pub act95: u8,
    pub act96: u8,
    pub act97: u8,
    pub act98: u8,
    pub act99: u8,
    pub pad0: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AiSoundParam {
    pub radius: f32,
    pub life_frame: f32,
    pub b_sp_effect_enable: u8,
    pub ty: u8,
    pub rank: u8,
    pub forget_time: f32,
    pub priority: i32,
    pub sound_behavior_id: i32,
    pub ai_sound_level: u8,
    pub replaning_state: u8,
    pub pad1: [u8; 6],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AiStandardInfo {
    pub radar_range: u16,
    pub radar_angle_x: u8,
    pub radar_angle_y: u8,
    pub territory_size: u16,
    pub threat_before_attack_rate: u8,
    pub force_threat_on_first_locked: u8,
    pub reserve0: [u8; 24],
    pub attack1_distance: u16,
    pub attack1_margin: u16,
    pub attack1_rate: u8,
    pub attack1_action_id: u8,
    pub attack1_delay_min: u8,
    pub attack1_delay_max: u8,
    pub attack1_cone_angle: u8,
    pub reserve10: [u8; 7],
    pub attack2_distance: u16,
    pub attack2_margin: u16,
    pub attack2_rate: u8,
    pub attack2_action_id: u8,
    pub attack2_delay_min: u8,
    pub attack2_delay_max: u8,
    pub attack2_cone_angle: u8,
    pub reserve11: [u8; 7],
    pub attack3_distance: u16,
    pub attack3_margin: u16,
    pub attack3_rate: u8,
    pub attack3_action_id: u8,
    pub attack3_delay_min: u8,
    pub attack3_delay_max: u8,
    pub attack3_cone_angle: u8,
    pub reserve12: [u8; 7],
    pub attack4_distance: u16,
    pub attack4_margin: u16,
    pub attack4_rate: u8,
    pub attack4_action_id: u8,
    pub attack4_delay_min: u8,
    pub attack4_delay_max: u8,
    pub attack4_cone_angle: u8,
    pub reserve13: [u8; 7],
    pub reserve_last: [u8; 32],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AssetGeometryParam {
    pub sound_bank_id: i32,
    pub sound_break_seid: i32,
    pub ref_draw_param_id: i32,
    pub hit_create_type: i8,
    pub behavior_type: u8,
    pub collision_type: u8,
    pub rain_blocking_type: u8,
    pub hp: i16,
    pub defense: u16,
    pub break_stop_time: f32,
    pub break_sfx_id: i32,
    pub break_sfx_cp_id: i32,
    pub break_landing_sfx_id: i32,
    pub break_bullet_behavior_id: i32,
    pub break_bullet_cp_id: i32,
    pub fragment_invisible_wait_time: f32,
    pub fragment_invisible_time: f32,
    pub break_ai_sound_id: i32,
    pub break_item_lot_type: i8,
    pub anim_break_id_max: u8,
    pub break_bullet_attribute_damage_type: i8,
    #[bitflag(isBreakByPlayerCollide, 0)]
    #[bitflag(isBreakByEnemyCollide, 1)]
    #[bitflag(isBreak_ByChrRide, 2)]
    #[bitflag(isDisableBreakForFirstAppear, 3)]
    #[bitflag(isAnimBreak, 4)]
    #[bitflag(isDamageCover, 5)]
    #[bitflag(isAttackBacklash, 6)]
    #[bitflag(Reserve_2, 7)]
    pub bitfield0: u8,
    #[bitflag(isLadder, 0)]
    #[bitflag(isMoveObj, 1)]
    #[bitflag(isSkydomeFlag, 2)]
    #[bitflag(isAnimPauseOnRemoPlay, 3)]
    #[bitflag(isBurn, 4)]
    #[bitflag(isEnableRepick, 5)]
    #[bitflag(isBreakOnPickUp, 6)]
    #[bitflag(isBreakByHugeenemyCollide, 7)]
    pub bitfield1: u8,
    pub navimesh_flag: u8,
    pub burn_bullet_interval: u16,
    pub cloth_update_dist: f32,
    pub life_time_for_runtime_create: f32,
    pub contact_se_id: i32,
    pub repick_anim_id_offset: i32,
    pub wind_effect_rate_0: f32,
    pub wind_effect_rate_1: f32,
    pub wind_effect_type_0: u8,
    pub wind_effect_type_1: u8,
    pub override_material_id: i16,
    pub auto_create_offset_height: f32,
    pub burn_time: f32,
    pub burn_braek_rate: f32,
    pub burn_sfx_id: i32,
    pub burn_sfx_id_1: i32,
    pub burn_sfx_id_2: i32,
    pub burn_sfx_id_3: i32,
    pub burn_sfx_delay_time_min: f32,
    pub burn_sfx_delay_time_min_1: f32,
    pub burn_sfx_delay_time_min_2: f32,
    pub burn_sfx_delay_time_min_3: f32,
    pub burn_sfx_delay_time_max: f32,
    pub burn_sfx_delay_time_max_1: f32,
    pub burn_sfx_delay_time_max_2: f32,
    pub burn_sfx_delay_time_max_3: f32,
    pub burn_bullet_behavior_id: i32,
    pub burn_bullet_behavior_id_1: i32,
    pub burn_bullet_behavior_id_2: i32,
    pub burn_bullet_behavior_id_3: i32,
    pub burn_bullet_delay_time: f32,
    pub paint_decal_target_texture_size: u16,
    pub navimesh_flag_after: u8,
    pub cam_near_behavior_type: i8,
    pub break_item_lot_param_id: i32,
    pub pick_up_action_button_param_id: i32,
    pub pick_up_item_lot_param_id: i32,
    pub auto_draw_group_back_face_check: u8,
    pub auto_draw_group_depth_write: u8,
    pub auto_draw_group_shadow_test: u8,
    pub debug_is_height_check_enable: u8,
    pub hit_carver_cancel_area_flag: u8,
    pub asset_navimesh_no_combine: u8,
    pub navimesh_flag_apply: u8,
    pub navimesh_flag_apply_after: u8,
    pub auto_draw_group_pass_pixel_num: f32,
    pub pick_up_replacement_event_flag: u32,
    pub pick_up_replacement_anim_id_offset: i32,
    pub pick_up_replacement_action_button_param_id: i32,
    pub pick_up_replacement_item_lot_param_id: i32,
    pub sliding_bullet_hit_type: u8,
    pub is_bushes_for_damage: u8,
    pub penetration_bullet_type: u8,
    pub reserve_3: [u8; 1],
    pub reserve_4: [u8; 4],
    pub sound_break_secp_id: i32,
    pub debug_height_check_capacity_min: f32,
    pub debug_height_check_capacity_max: f32,
    pub repick_action_button_param_id: i32,
    pub repick_item_lot_param_id: i32,
    pub repick_replacement_anim_id_offset: i32,
    pub repick_replacement_action_button_param_id: i32,
    pub repick_replacement_item_lot_param_id: i32,
    pub no_generate_carver: u8,
    pub no_hit_huge_after_break: u8,
    pub generate_multi_forbidden_region: u8,
    pub resident_se_id0: i32,
    pub resident_se_id1: i32,
    pub resident_se_id2: i32,
    pub resident_se_id3: i32,
    pub resident_se_dmypoly_id0: i16,
    pub resident_se_dmypoly_id1: i16,
    pub resident_se_dmypoly_id2: i16,
    pub resident_se_dmypoly_id3: i16,
    pub exclude_activate_ratio_xboxone_grid: u8,
    pub exclude_activate_ratio_xboxone_legacy: u8,
    pub exclude_activate_ratio_ps4_grid: u8,
    pub exclude_activate_ratio_ps4_legacy: u8,
    pub reserve_0: [u8; 32],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AssetMaterialSfxParam {
    pub sfx_id_00: u32,
    pub sfx_id_01: u32,
    pub sfx_id_02: u32,
    pub sfx_id_03: u32,
    pub sfx_id_04: u32,
    pub sfx_id_05: u32,
    pub sfx_id_06: u32,
    pub sfx_id_07: u32,
    pub sfx_id_08: u32,
    pub sfx_id_09: u32,
    pub sfx_id_10: u32,
    pub sfx_id_11: u32,
    pub sfx_id_12: u32,
    pub sfx_id_13: u32,
    pub sfx_id_14: u32,
    pub sfx_id_15: u32,
    pub sfx_id_16: u32,
    pub sfx_id_17: u32,
    pub sfx_id_18: u32,
    pub sfx_id_19: u32,
    pub sfx_id_20: u32,
    pub sfx_id_21: u32,
    pub sfx_id_22: u32,
    pub sfx_id_23: u32,
    pub sfx_id_24: u32,
    pub sfx_id_25: u32,
    pub sfx_id_26: u32,
    pub sfx_id_27: u32,
    pub sfx_id_28: u32,
    pub sfx_id_29: u32,
    pub sfx_id_30: u32,
    pub sfx_id_31: u32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AssetModelSfxParam {
    pub sfx_id_0: i32,
    pub dmypoly_id_0: i32,
    pub reserve_0: [u8; 8],
    pub sfx_id_1: i32,
    pub dmypoly_id_1: i32,
    pub reserve_1: [u8; 8],
    pub sfx_id_2: i32,
    pub dmypoly_id_2: i32,
    pub reserve_2: [u8; 8],
    pub sfx_id_3: i32,
    pub dmypoly_id_3: i32,
    pub reserve_3: [u8; 8],
    pub sfx_id_4: i32,
    pub dmypoly_id_4: i32,
    pub reserve_4: [u8; 8],
    pub sfx_id_5: i32,
    pub dmypoly_id_5: i32,
    pub reserve_5: [u8; 8],
    pub sfx_id_6: i32,
    pub dmypoly_id_6: i32,
    pub reserve_6: [u8; 8],
    pub sfx_id_7: i32,
    pub dmypoly_id_7: i32,
    pub is_disable_iv: u8,
    pub reserve_7: [u8; 7],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AtkParam {
    pub hit0_radius: f32,
    pub hit1_radius: f32,
    pub hit2_radius: f32,
    pub hit3_radius: f32,
    pub knockback_dist: f32,
    pub hit_stop_time: f32,
    pub sp_effect_id0: i32,
    pub sp_effect_id1: i32,
    pub sp_effect_id2: i32,
    pub sp_effect_id3: i32,
    pub sp_effect_id4: i32,
    pub hit0_dmy_poly1: i16,
    pub hit1_dmy_poly1: i16,
    pub hit2_dmy_poly1: i16,
    pub hit3_dmy_poly1: i16,
    pub hit0_dmy_poly2: i16,
    pub hit1_dmy_poly2: i16,
    pub hit2_dmy_poly2: i16,
    pub hit3_dmy_poly2: i16,
    pub blowing_correction: u16,
    pub atk_phys_correction: u16,
    pub atk_mag_correction: u16,
    pub atk_fire_correction: u16,
    pub atk_thun_correction: u16,
    pub atk_stam_correction: u16,
    pub guard_atk_rate_correction: u16,
    pub guard_break_correction: u16,
    pub atk_throw_escape_correction: u16,
    pub sub_category1: u8,
    pub sub_category2: u8,
    pub atk_phys: u16,
    pub atk_mag: u16,
    pub atk_fire: u16,
    pub atk_thun: u16,
    pub atk_stam: u16,
    pub guard_atk_rate: u16,
    pub guard_break_rate: u16,
    pub pad6: [u8; 1],
    pub is_enable_calc_damage_for_bushes_obj: u8,
    pub atk_throw_escape: u16,
    pub atk_obj: u16,
    pub guard_stamina_cut_rate: i16,
    pub guard_rate: i16,
    pub throw_type_id: u16,
    pub hit0_hit_type: u8,
    pub hit1_hit_type: u8,
    pub hit2_hit_type: u8,
    pub hit3_hit_type: u8,
    pub hti0_priority: u8,
    pub hti1_priority: u8,
    pub hti2_priority: u8,
    pub hti3_priority: u8,
    pub dmg_level: u8,
    pub map_hit_type: u8,
    pub guard_cut_cancel_rate: i8,
    pub atk_attribute: u8,
    pub sp_attribute: u8,
    pub atk_type: u8,
    pub atk_material: u8,
    pub guard_range_type: u8,
    pub def_se_material1: u16,
    pub hit_source_type: u8,
    pub throw_flag: u8,
    #[bitflag(disableGuard, 0)]
    #[bitflag(disableStaminaAttack, 1)]
    #[bitflag(disableHitSpEffect, 2)]
    #[bitflag(IgnoreNotifyMissSwingForAI, 3)]
    #[bitflag(repeatHitSfx, 4)]
    #[bitflag(isArrowAtk, 5)]
    #[bitflag(isGhostAtk, 6)]
    #[bitflag(isDisableNoDamage, 7)]
    pub bitfield0: u8,
    pub atk_pow_for_sfx: i8,
    pub atk_dir_for_sfx: i8,
    #[bitflag(opposeTarget, 0)]
    #[bitflag(friendlyTarget, 1)]
    #[bitflag(selfTarget, 2)]
    #[bitflag(isCheckDoorPenetration, 3)]
    #[bitflag(isVsRideAtk, 4)]
    #[bitflag(isAddBaseAtk, 5)]
    #[bitflag(excludeThreatLvNotify, 6)]
    #[bitflag(pad1, 7)]
    pub bitfield1: u8,
    pub atk_behavior_id: u8,
    pub atk_pow_for_se: i8,
    pub atk_super_armor: f32,
    pub decal_id1: i32,
    pub decal_id2: i32,
    pub appear_ai_sound_id: i32,
    pub hit_ai_sound_id: i32,
    pub hit_rumble_id: i32,
    pub hit_rumble_id_by_normal: i32,
    pub hit_rumble_id_by_middle: i32,
    pub hit_rumble_id_by_root: i32,
    pub trace_sfx_id0: i32,
    pub trace_dmy_id_head0: i32,
    pub trace_dmy_id_tail0: i32,
    pub trace_sfx_id1: i32,
    pub trace_dmy_id_head1: i32,
    pub trace_dmy_id_tail1: i32,
    pub trace_sfx_id2: i32,
    pub trace_dmy_id_head2: i32,
    pub trace_dmy_id_tail2: i32,
    pub trace_sfx_id3: i32,
    pub trace_dmy_id_head3: i32,
    pub trace_dmy_id_tail3: i32,
    pub trace_sfx_id4: i32,
    pub trace_dmy_id_head4: i32,
    pub trace_dmy_id_tail4: i32,
    pub trace_sfx_id5: i32,
    pub trace_dmy_id_head5: i32,
    pub trace_dmy_id_tail5: i32,
    pub trace_sfx_id6: i32,
    pub trace_dmy_id_head6: i32,
    pub trace_dmy_id_tail6: i32,
    pub trace_sfx_id7: i32,
    pub trace_dmy_id_head7: i32,
    pub trace_dmy_id_tail7: i32,
    pub hit4_radius: f32,
    pub hit5_radius: f32,
    pub hit6_radius: f32,
    pub hit7_radius: f32,
    pub hit8_radius: f32,
    pub hit9_radius: f32,
    pub hit10_radius: f32,
    pub hit11_radius: f32,
    pub hit12_radius: f32,
    pub hit13_radius: f32,
    pub hit14_radius: f32,
    pub hit15_radius: f32,
    pub hit4_dmy_poly1: i16,
    pub hit5_dmy_poly1: i16,
    pub hit6_dmy_poly1: i16,
    pub hit7_dmy_poly1: i16,
    pub hit8_dmy_poly1: i16,
    pub hit9_dmy_poly1: i16,
    pub hit10_dmy_poly1: i16,
    pub hit11_dmy_poly1: i16,
    pub hit12_dmy_poly1: i16,
    pub hit13_dmy_poly1: i16,
    pub hit14_dmy_poly1: i16,
    pub hit15_dmy_poly1: i16,
    pub hit4_dmy_poly2: i16,
    pub hit5_dmy_poly2: i16,
    pub hit6_dmy_poly2: i16,
    pub hit7_dmy_poly2: i16,
    pub hit8_dmy_poly2: i16,
    pub hit9_dmy_poly2: i16,
    pub hit10_dmy_poly2: i16,
    pub hit11_dmy_poly2: i16,
    pub hit12_dmy_poly2: i16,
    pub hit13_dmy_poly2: i16,
    pub hit14_dmy_poly2: i16,
    pub hit15_dmy_poly2: i16,
    pub hit4_hit_type: u8,
    pub hit5_hit_type: u8,
    pub hit6_hit_type: u8,
    pub hit7_hit_type: u8,
    pub hit8_hit_type: u8,
    pub hit9_hit_type: u8,
    pub hit10_hit_type: u8,
    pub hit11_hit_type: u8,
    pub hit12_hit_type: u8,
    pub hit13_hit_type: u8,
    pub hit14_hit_type: u8,
    pub hit15_hit_type: u8,
    pub hti4_priority: u8,
    pub hti5_priority: u8,
    pub hti6_priority: u8,
    pub hti7_priority: u8,
    pub hti8_priority: u8,
    pub hti9_priority: u8,
    pub hti10_priority: u8,
    pub hti11_priority: u8,
    pub hti12_priority: u8,
    pub hti13_priority: u8,
    pub hti14_priority: u8,
    pub hti15_priority: u8,
    pub def_sfx_material1: u16,
    pub def_se_material2: u16,
    pub def_sfx_material2: u16,
    pub atk_dark_correction: u16,
    pub atk_dark: u16,
    pub dmg_level_vs_player: i8,
    pub status_ailment_atk_power_correct_rate: u16,
    pub sp_effect_atk_power_correct_rate_by_point: u16,
    pub sp_effect_atk_power_correct_rate_by_rate: u16,
    pub sp_effect_atk_power_correct_rate_by_dmg: u16,
    pub atk_behavior_id_2: u8,
    pub throw_damage_attribute: u8,
    pub status_ailment_atk_power_correct_rate_by_point: u16,
    pub overwrite_attack_element_correct_id: i32,
    pub decal_base_id1: i16,
    pub decal_base_id2: i16,
    pub wep_regain_hp_scale: u16,
    pub atk_regain_hp: u16,
    pub regainable_time_scale: f32,
    pub regainable_hp_rate_scale: f32,
    pub regainable_slot_id: i8,
    pub sp_attribute_variation_value: u8,
    pub parry_forward_offset: i16,
    pub atk_super_armor_correction: f32,
    pub def_sfx_material_variation_value: u8,
    pub pad4: [u8; 19],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AttackElementCorrectParam {
    #[bitflag(isStrengthCorrect_byPhysics, 0)]
    #[bitflag(isDexterityCorrect_byPhysics, 1)]
    #[bitflag(isMagicCorrect_byPhysics, 2)]
    #[bitflag(isFaithCorrect_byPhysics, 3)]
    #[bitflag(isLuckCorrect_byPhysics, 4)]
    #[bitflag(isStrengthCorrect_byMagic, 5)]
    #[bitflag(isDexterityCorrect_byMagic, 6)]
    #[bitflag(isMagicCorrect_byMagic, 7)]
    pub bitfield0: u8,
    #[bitflag(isFaithCorrect_byMagic, 0)]
    #[bitflag(isLuckCorrect_byMagic, 1)]
    #[bitflag(isStrengthCorrect_byFire, 2)]
    #[bitflag(isDexterityCorrect_byFire, 3)]
    #[bitflag(isMagicCorrect_byFire, 4)]
    #[bitflag(isFaithCorrect_byFire, 5)]
    #[bitflag(isLuckCorrect_byFire, 6)]
    #[bitflag(isStrengthCorrect_byThunder, 7)]
    pub bitfield1: u8,
    #[bitflag(isDexterityCorrect_byThunder, 0)]
    #[bitflag(isMagicCorrect_byThunder, 1)]
    #[bitflag(isFaithCorrect_byThunder, 2)]
    #[bitflag(isLuckCorrect_byThunder, 3)]
    #[bitflag(isStrengthCorrect_byDark, 4)]
    #[bitflag(isDexterityCorrect_byDark, 5)]
    #[bitflag(isMagicCorrect_byDark, 6)]
    #[bitflag(isFaithCorrect_byDark, 7)]
    pub bitfield2: u8,
    pub overwrite_strength_correct_rate_by_physics: i16,
    pub overwrite_dexterity_correct_rate_by_physics: i16,
    pub overwrite_magic_correct_rate_by_physics: i16,
    pub overwrite_faith_correct_rate_by_physics: i16,
    pub overwrite_luck_correct_rate_by_physics: i16,
    pub overwrite_strength_correct_rate_by_magic: i16,
    pub overwrite_dexterity_correct_rate_by_magic: i16,
    pub overwrite_magic_correct_rate_by_magic: i16,
    pub overwrite_faith_correct_rate_by_magic: i16,
    pub overwrite_luck_correct_rate_by_magic: i16,
    pub overwrite_strength_correct_rate_by_fire: i16,
    pub overwrite_dexterity_correct_rate_by_fire: i16,
    pub overwrite_magic_correct_rate_by_fire: i16,
    pub overwrite_faith_correct_rate_by_fire: i16,
    pub overwrite_luck_correct_rate_by_fire: i16,
    pub overwrite_strength_correct_rate_by_thunder: i16,
    pub overwrite_dexterity_correct_rate_by_thunder: i16,
    pub overwrite_magic_correct_rate_by_thunder: i16,
    pub overwrite_faith_correct_rate_by_thunder: i16,
    pub overwrite_luck_correct_rate_by_thunder: i16,
    pub overwrite_strength_correct_rate_by_dark: i16,
    pub overwrite_dexterity_correct_rate_by_dark: i16,
    pub overwrite_magic_correct_rate_by_dark: i16,
    pub overwrite_faith_correct_rate_by_dark: i16,
    pub overwrite_luck_correct_rate_by_dark: i16,
    pub influence_strength_correct_rate_by_physics: i16,
    pub influence_dexterity_correct_rate_by_physics: i16,
    pub influence_magic_correct_rate_by_physics: i16,
    pub influence_faith_correct_rate_by_physics: i16,
    pub influence_luck_correct_rate_by_physics: i16,
    pub influence_strength_correct_rate_by_magic: i16,
    pub influence_dexterity_correct_rate_by_magic: i16,
    pub influence_magic_correct_rate_by_magic: i16,
    pub influence_faith_correct_rate_by_magic: i16,
    pub influence_luck_correct_rate_by_magic: i16,
    pub influence_strength_correct_rate_by_fire: i16,
    pub influence_dexterity_correct_rate_by_fire: i16,
    pub influence_magic_correct_rate_by_fire: i16,
    pub influence_faith_correct_rate_by_fire: i16,
    pub influence_luck_correct_rate_by_fire: i16,
    pub influence_strength_correct_rate_by_thunder: i16,
    pub influence_dexterity_correct_rate_by_thunder: i16,
    pub influence_magic_correct_rate_by_thunder: i16,
    pub influence_faith_correct_rate_by_thunder: i16,
    pub influence_luck_correct_rate_by_thunder: i16,
    pub influence_strength_correct_rate_by_dark: i16,
    pub influence_dexterity_correct_rate_by_dark: i16,
    pub influence_magic_correct_rate_by_dark: i16,
    pub influence_faith_correct_rate_by_dark: i16,
    pub influence_luck_correct_rate_by_dark: i16,
    pub pad2: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct AutoCreateEnvSoundParam {
    pub range_min: f32,
    pub range_max: f32,
    pub life_time_min: f32,
    pub life_time_max: f32,
    pub delete_dist: f32,
    pub near_dist: f32,
    pub limite_rotate_min: f32,
    pub limite_rotate_max: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BaseChrSelectMenuParam {
    pub disable_param_reserve2: [u8; 3],
    pub chr_init_param: u32,
    pub origin_chr_init_param: u32,
    pub image_id: i32,
    pub text_id: i32,
    pub reserve: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BehaviorParam {
    pub variation_id: i32,
    pub behavior_judge_id: i32,
    pub ez_state_behavior_type_old: u8,
    pub ref_type: u8,
    pub pad2: [u8; 2],
    pub ref_id: i32,
    pub consume_sa: f32,
    pub stamina: i32,
    pub consume_durability: i32,
    pub category: u8,
    pub hero_point: u8,
    pub pad1: [u8; 2],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BonfireWarpParam {
    pub disable_param_reserve2: [u8; 3],
    pub eventflag_id: u32,
    pub bonfire_entity_id: u32,
    pub pad4: [u8; 2],
    pub bonfire_sub_category_sort_id: u16,
    pub forbidden_icon_id: u16,
    pub disp_min_zoom_step: u8,
    pub select_min_zoom_step: u8,
    pub bonfire_sub_category_id: i32,
    pub cleared_event_flag_id: u32,
    pub icon_id: u16,
    pub pad2: [u8; 1],
    pub area_no: u8,
    pub grid_xno: u8,
    pub grid_zno: u8,
    pub pad3: [u8; 1],
    pub pos_x: f32,
    pub pos_y: f32,
    pub pos_z: f32,
    pub text_id1: i32,
    pub text_enable_flag_id1: u32,
    pub text_disable_flag_id1: u32,
    pub text_id2: i32,
    pub text_enable_flag_id2: u32,
    pub text_disable_flag_id2: u32,
    pub text_id3: i32,
    pub text_enable_flag_id3: u32,
    pub text_disable_flag_id3: u32,
    pub text_id4: i32,
    pub text_enable_flag_id4: u32,
    pub text_disable_flag_id4: u32,
    pub text_id5: i32,
    pub text_enable_flag_id5: u32,
    pub text_disable_flag_id5: u32,
    pub text_id6: i32,
    pub text_enable_flag_id6: u32,
    pub text_disable_flag_id6: u32,
    pub text_id7: i32,
    pub text_enable_flag_id7: u32,
    pub text_disable_flag_id7: u32,
    pub text_id8: i32,
    pub text_enable_flag_id8: u32,
    pub text_disable_flag_id8: u32,
    pub text_type1: u8,
    pub text_type2: u8,
    pub text_type3: u8,
    pub text_type4: u8,
    pub text_type5: u8,
    pub text_type6: u8,
    pub text_type7: u8,
    pub text_type8: u8,
    pub no_ignition_sfx_dmypoly_id_0: i32,
    pub no_ignition_sfx_id_0: i32,
    pub no_ignition_sfx_dmypoly_id_1: i32,
    pub no_ignition_sfx_id_1: i32,
    pub unk_a8: i32,
    pub unk_ac: i32,
    pub unk_b0: i32,
    pub unk_b4: i32,
    pub unk_b8: i32,
    pub unk_bc: i32,
    pub unk_c0: i32,
    pub unk_c4: i32,
    pub unk_c8: i32,
    pub unk_cc: i32,
    pub unk_d0: i32,
    pub unk_d4: i32,
    pub unk_d8: i32,
    pub unk_dc: i32,
    pub unk_e0: i32,
    pub unk_e4: i32,
    pub unk_e8: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BonfireWarpSubCategoryParam {
    pub disable_param_reserve2: [u8; 3],
    pub text_id: i32,
    pub tab_id: u16,
    pub sort_id: u16,
    pub pad: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BonfireWarpTabParam {
    pub disable_param_reserve2: [u8; 3],
    pub text_id: i32,
    pub sort_id: i32,
    pub icon_id: u16,
    pub pad: [u8; 2],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BuddyParam {
    pub disable_param_reserve2: [u8; 3],
    pub trigger_sp_effect_id: i32,
    pub npc_param_id: i32,
    pub npc_think_param_id: i32,
    pub npc_param_id_ridden: i32,
    pub npc_think_param_id_ridden: i32,
    pub x_offset: f32,
    pub z_offset: f32,
    pub y_angle: f32,
    pub appear_on_around_sekihi: u8,
    pub disable_pctarget_share: u8,
    pub pc_follow_type: u8,
    pub reserve: [u8; 1],
    pub doping_sp_effect_lv0: i32,
    pub doping_sp_effect_lv1: i32,
    pub doping_sp_effect_lv2: i32,
    pub doping_sp_effect_lv3: i32,
    pub doping_sp_effect_lv4: i32,
    pub doping_sp_effect_lv5: i32,
    pub doping_sp_effect_lv6: i32,
    pub doping_sp_effect_lv7: i32,
    pub doping_sp_effect_lv8: i32,
    pub doping_sp_effect_lv9: i32,
    pub doping_sp_effect_lv10: i32,
    pub npc_player_init_param_id: i32,
    pub generate_anim_id: i32,
    pub reserve2: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BuddyStoneParam {
    pub disable_param_reserve2: [u8; 3],
    pub talk_chr_entity_id: u32,
    pub eliminate_target_entity_id: u32,
    pub summoned_event_flag_id: u32,
    pub pad2: [u8; 3],
    pub buddy_id: i32,
    pub doping_sp_effect_id: i32,
    pub activate_range: u16,
    pub overwrite_return_range: i16,
    pub overwrite_activate_region_entity_id: u32,
    pub warn_region_entity_id: u32,
    pub pad3: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BudgetParam {
    pub vram_all: f32,
    pub vram_mapobj_tex: f32,
    pub vram_mapobj_mdl: f32,
    pub vram_map: f32,
    pub vram_chr: f32,
    pub vram_parts: f32,
    pub vram_sfx: f32,
    pub vram_chr_tex: f32,
    pub vram_chr_mdl: f32,
    pub vram_parts_tex: f32,
    pub vram_parts_mdl: f32,
    pub vram_sfx_tex: f32,
    pub vram_sfx_mdl: f32,
    pub vram_gi: f32,
    pub vram_menu_tex: f32,
    pub vram_decal_rt: f32,
    pub vram_decal: f32,
    pub reserve_0: [u8; 4],
    pub vram_other_tex: f32,
    pub vram_other_mdl: f32,
    pub havok_anim: f32,
    pub havok_ins: f32,
    pub havok_hit: f32,
    pub vram_other: f32,
    pub vram_detail_all: f32,
    pub vram_chr_and_parts: f32,
    pub havok_navimesh: f32,
    pub reserve_1: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BulletCreateLimitParam {
    pub limit_num_by_group: u8,
    pub pad: [u8; 30],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct BulletParam {
    pub atk_id_bullet: i32,
    pub sfx_id_bullet: i32,
    pub sfx_id_hit: i32,
    pub sfx_id_flick: i32,
    pub life: f32,
    pub dist: f32,
    pub shoot_interval: f32,
    pub gravity_in_range: f32,
    pub gravity_out_range: f32,
    pub horming_stop_range: f32,
    pub init_vellocity: f32,
    pub accel_in_range: f32,
    pub accel_out_range: f32,
    pub max_vellocity: f32,
    pub min_vellocity: f32,
    pub accel_time: f32,
    pub homing_begin_dist: f32,
    pub hit_radius: f32,
    pub hit_radius_max: f32,
    pub spread_time: f32,
    pub exp_delay: f32,
    pub horming_offset_range: f32,
    pub dmg_hit_record_life_time: f32,
    pub external_force: f32,
    pub sp_effect_idfor_shooter: i32,
    pub auto_search_npcthink_id: i32,
    pub hit_bullet_id: i32,
    pub sp_effect_id0: i32,
    pub sp_effect_id1: i32,
    pub sp_effect_id2: i32,
    pub sp_effect_id3: i32,
    pub sp_effect_id4: i32,
    pub num_shoot: u16,
    pub homing_angle: i16,
    pub shoot_angle: i16,
    pub shoot_angle_interval: i16,
    pub shoot_angle_xinterval: i16,
    pub damage_damp: i8,
    pub spel_damage_damp: i8,
    pub fire_damage_damp: i8,
    pub thunder_damage_damp: i8,
    pub stamina_damp: i8,
    pub knockback_damp: i8,
    pub shoot_angle_xz: i8,
    pub lock_shoot_limit_ang: u8,
    pub pad2: [u8; 1],
    pub prev_velocity_dir_rate: u8,
    pub atk_attribute: u8,
    pub sp_attribute: u8,
    pub material_attack_type: u8,
    pub material_attack_material: u8,
    pub launch_condition_type: u8,
    #[bitflag(isPenetrateChr, 0)]
    #[bitflag(isPenetrateObj, 1)]
    #[bitflag(pad, 2)]
    #[bitflag(FollowType, 3)]
    #[bitflag(EmittePosType, 4)]
    #[bitflag(isAttackSFX, 5)]
    #[bitflag(isEndlessHit, 6)]
    #[bitflag(isPenetrateMap, 7)]
    pub bitfield0: u8,
    #[bitflag(isHitBothTeam, 0)]
    #[bitflag(isUseSharedHitList, 1)]
    #[bitflag(isUseMultiDmyPolyIfPlace, 2)]
    #[bitflag(isHitOtherBulletForceEraseA, 3)]
    #[bitflag(isHitOtherBulletForceEraseB, 4)]
    #[bitflag(isHitForceMagic, 5)]
    #[bitflag(isIgnoreSfxIfHitWater, 6)]
    #[bitflag(isIgnoreMoveStateIfHitWater, 7)]
    pub bitfield1: u8,
    pub dark_damage_damp: i8,
    pub bullet_sfx_delete_type_by_hit: i8,
    pub bullet_sfx_delete_type_by_life_dead: i8,
    pub target_yoffset_range: f32,
    pub shoot_angle_ymax_random: f32,
    pub shoot_angle_xmax_random: f32,
    pub interval_create_bullet_id: i32,
    pub interval_create_time_min: f32,
    pub interval_create_time_max: f32,
    pub prediction_shoot_observe_time: f32,
    pub interval_create_wait_time: f32,
    pub sfx_posture_type: u8,
    pub create_limit_group_id: u8,
    pub pad5: [u8; 1],
    #[bitflag(isHitDarkForceMagic, 0)]
    #[bitflag(dmgCalcSide, 1)]
    #[bitflag(isEnableAutoHoming, 2)]
    #[bitflag(isSyncBulletCulcDumypolyPos, 3)]
    #[bitflag(isOwnerOverrideInitAngle, 4)]
    #[bitflag(isInheritSfxToChild, 5)]
    #[bitflag(isInheritSpeedToChild, 6)]
    #[bitflag(isDisableHitSfx_byChrAndObj, 7)]
    pub bitfield2: u8,
    pub random_create_radius: f32,
    pub follow_offset_base_height: f32,
    pub asset_no_hit: i32,
    pub life_random_range: f32,
    pub homing_angle_x: i16,
    pub ballistic_calc_type: u8,
    pub attach_effect_type: u8,
    pub se_id_bullet1: i32,
    pub se_id_bullet2: i32,
    pub se_id_hit: i32,
    pub se_id_flick: i32,
    pub howitzer_shoot_angle_xmin: i16,
    pub howitzer_shoot_angle_xmax: i16,
    pub howitzer_init_min_velocity: f32,
    pub howitzer_init_max_velocity: f32,
    pub sfx_id_force_erase: i32,
    pub bullet_sfx_delete_type_by_force_erase: i8,
    pub pad3: [u8; 1],
    pub follow_dmypoly_for_sfx_pose: i16,
    pub follow_offset_radius: f32,
    pub sp_bullet_dist_up_rate: f32,
    pub nolock_target_dist: f32,
    pub pad4: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CalcCorrectGraph {
    pub stage_max_val0: f32,
    pub stage_max_val1: f32,
    pub stage_max_val2: f32,
    pub stage_max_val3: f32,
    pub stage_max_val4: f32,
    pub stage_max_grow_val0: f32,
    pub stage_max_grow_val1: f32,
    pub stage_max_grow_val2: f32,
    pub stage_max_grow_val3: f32,
    pub stage_max_grow_val4: f32,
    pub adj_pt_max_grow_val0: f32,
    pub adj_pt_max_grow_val1: f32,
    pub adj_pt_max_grow_val2: f32,
    pub adj_pt_max_grow_val3: f32,
    pub adj_pt_max_grow_val4: f32,
    pub init_inclination_soul: f32,
    pub adjustment_value: f32,
    pub boundry_inclination_soul: f32,
    pub boundry_value: f32,
    pub pad: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CameraFadeParam {
    pub near_min_dist: f32,
    pub near_max_dist: f32,
    pub far_min_dist: f32,
    pub far_max_dist: f32,
    pub middle_alpha: f32,
    pub dummy: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CeremonyParam {
    pub event_layer_id: i32,
    pub map_studio_layer_id: i32,
    pub multi_play_area_offset: i32,
    pub override_map_place_name_id: i32,
    pub override_save_map_name_id: i32,
    pub pad2: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CharaInitParam {
    pub base_rec_mp: f32,
    pub base_rec_sp: f32,
    pub red_falldam: f32,
    pub soul: i32,
    pub equip_wep_right: i32,
    pub equip_subwep_right: i32,
    pub equip_wep_left: i32,
    pub equip_subwep_left: i32,
    pub equip_helm: i32,
    pub equip_armer: i32,
    pub equip_gaunt: i32,
    pub equip_leg: i32,
    pub equip_arrow: i32,
    pub equip_bolt: i32,
    pub equip_sub_arrow: i32,
    pub equip_sub_bolt: i32,
    pub equip_accessory01: i32,
    pub equip_accessory02: i32,
    pub equip_accessory03: i32,
    pub equip_accessory04: i32,
    pub pad8: [u8; 4],
    pub elixir_material00: i32,
    pub elixir_material01: i32,
    pub elixir_material02: i32,
    pub equip_spell_01: i32,
    pub equip_spell_02: i32,
    pub equip_spell_03: i32,
    pub equip_spell_04: i32,
    pub equip_spell_05: i32,
    pub equip_spell_06: i32,
    pub equip_spell_07: i32,
    pub item_01: i32,
    pub item_02: i32,
    pub item_03: i32,
    pub item_04: i32,
    pub item_05: i32,
    pub item_06: i32,
    pub item_07: i32,
    pub item_08: i32,
    pub item_09: i32,
    pub item_10: i32,
    pub npc_player_face_gen_id: i32,
    pub npc_player_think_id: i32,
    pub base_hp: u16,
    pub base_mp: u16,
    pub base_sp: u16,
    pub arrow_num: u16,
    pub bolt_num: u16,
    pub sub_arrow_num: u16,
    pub sub_bolt_num: u16,
    pub pad4: [u8; 6],
    pub soul_lv: i16,
    pub base_vit: u8,
    pub base_wil: u8,
    pub base_end: u8,
    pub base_str: u8,
    pub base_dex: u8,
    pub base_mag: u8,
    pub base_fai: u8,
    pub base_luc: u8,
    pub base_hero_point: u8,
    pub base_durability: u8,
    pub item_num_01: u8,
    pub item_num_02: u8,
    pub item_num_03: u8,
    pub item_num_04: u8,
    pub item_num_05: u8,
    pub item_num_06: u8,
    pub item_num_07: u8,
    pub item_num_08: u8,
    pub item_num_09: u8,
    pub item_num_10: u8,
    pub pad5: [u8; 5],
    pub gesture_id0: i8,
    pub gesture_id1: i8,
    pub gesture_id2: i8,
    pub gesture_id3: i8,
    pub gesture_id4: i8,
    pub gesture_id5: i8,
    pub gesture_id6: i8,
    pub npc_player_type: u8,
    pub npc_player_draw_type: i8,
    pub npc_player_sex: u8,
    pub pad6: [u8; 2],
    pub wep_param_type_right1: u8,
    pub wep_param_type_right2: u8,
    pub wep_param_type_right3: u8,
    pub wep_param_type_left1: u8,
    pub wep_param_type_left2: u8,
    pub wep_param_type_left3: u8,
    pub pad2: [u8; 26],
    pub equip_subwep_right3: i32,
    pub equip_subwep_left3: i32,
    pub pad3: [u8; 4],
    pub secondary_item_01: i32,
    pub secondary_item_02: i32,
    pub secondary_item_03: i32,
    pub secondary_item_04: i32,
    pub secondary_item_05: i32,
    pub secondary_item_06: i32,
    pub secondary_item_num_01: u8,
    pub secondary_item_num_02: u8,
    pub secondary_item_num_03: u8,
    pub secondary_item_num_04: u8,
    pub secondary_item_num_05: u8,
    pub secondary_item_num_06: u8,
    pub hp_est_max: i8,
    pub mp_est_max: i8,
    pub pad7: [u8; 5],
    pub voice_type: u8,
    pub reserve: [u8; 6],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CharMakeMenuListItemParam {
    pub value: i32,
    pub caption_id: i32,
    pub icon_id: u8,
    pub reserved: [u8; 7],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CharMakeMenuTopParam {
    pub command_type: i32,
    pub caption_id: i32,
    pub face_param_id: i32,
    pub table_id: i32,
    pub view_condition: i32,
    pub preview_mode: i8,
    pub reserved2: [u8; 3],
    pub table_id2: i32,
    pub ref_face_param_id: i32,
    pub ref_text_id: i32,
    pub help_text_id: i32,
    pub unlock_event_flag_id: u32,
    pub reserved: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ChrActivateConditionParam {
    #[bitflag(weatherSunny, 0)]
    #[bitflag(weatherClearSky, 1)]
    #[bitflag(weatherWeakCloudy, 2)]
    #[bitflag(weatherCloudy, 3)]
    #[bitflag(weatherRain, 4)]
    #[bitflag(weatherHeavyRain, 5)]
    #[bitflag(weatherStorm, 6)]
    #[bitflag(weatherStormForBattle, 7)]
    pub bitfield0: u8,
    pub time_start_hour: u8,
    pub time_start_min: u8,
    pub time_end_hour: u8,
    pub time_end_min: u8,
    pub pad2: [u8; 2],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ChrModelParam {
    pub disable_param_reserve2: [u8; 3],
    pub model_memory_type: u8,
    pub tex_memory_type: u8,
    pub camera_dither_fade_id: i16,
    pub report_anim_mem_size_mb: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ClearCountCorrectParam {
    pub max_hp_rate: f32,
    pub max_mp_rate: f32,
    pub max_stamina_rate: f32,
    pub physics_attack_rate: f32,
    pub slash_attack_rate: f32,
    pub blow_attack_rate: f32,
    pub thrust_attack_rate: f32,
    pub netural_attack_rate: f32,
    pub magic_attack_rate: f32,
    pub fire_attack_rate: f32,
    pub thunder_attack_rate: f32,
    pub dark_attack_rate: f32,
    pub physics_defense_rate: f32,
    pub magic_defense_rate: f32,
    pub fire_defense_rate: f32,
    pub thunder_defense_rate: f32,
    pub dark_defense_rate: f32,
    pub stamina_attack_rate: f32,
    pub soul_rate: f32,
    pub poision_resist_rate: f32,
    pub disease_resist_rate: f32,
    pub blood_resist_rate: f32,
    pub curse_resist_rate: f32,
    pub freeze_resist_rate: f32,
    pub blood_damage_rate: f32,
    pub super_armor_damage_rate: f32,
    pub freeze_damage_rate: f32,
    pub sleep_resist_rate: f32,
    pub madness_resist_rate: f32,
    pub sleep_damage_rate: f32,
    pub madness_damage_rate: f32,
    pub pad1: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CommonSystemParam {
    pub map_save_map_name_id_on_game_start: u32,
    pub reserve0: [u8; 60],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CoolTimeParam {
    pub limitation_time: f32,
    pub observe_time: f32,
    pub limitation_time_0: f32,
    pub observe_time_1: f32,
    pub limitation_time_2: f32,
    pub observe_time_3: f32,
    pub limitation_time_4: f32,
    pub observe_time_5: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CutsceneGparamTimeParam {
    pub disable_param_reserve2: [u8; 3],
    pub dst_timezone_morning: u8,
    pub dst_timezone_noon: u8,
    pub dst_timezone_after_noon: u8,
    pub dst_timezone_evening: u8,
    pub dst_timezone_night: u8,
    pub dst_timezone_deep_night_a: u8,
    pub dst_timezone_deep_night_b: u8,
    pub reserved: [u8; 1],
    pub post_play_ingame_time: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CutsceneGparamWeatherParam {
    pub disable_param_reserve2: [u8; 3],
    pub dst_weather_sunny: i16,
    pub dst_weather_clear_sky: i16,
    pub dst_weather_weak_cloudy: i16,
    pub dst_weather_cloud: i16,
    pub dst_weather_rain: i16,
    pub dst_weather_heavy_rain: i16,
    pub dst_weather_storm: i16,
    pub dst_weather_storm_for_battle: i16,
    pub dst_weather_snow: i16,
    pub dst_weather_heavy_snow: i16,
    pub dst_weather_fog: i16,
    pub dst_weather_heavy_fog: i16,
    pub dst_weather_sand_storm: i16,
    pub dst_weather_heavy_fog_rain: i16,
    pub post_play_ingame_weather: i16,
    pub indoor_outdoor_type: u8,
    pub take_over_dst_weather_sunny: u8,
    pub take_over_dst_weather_clear_sky: u8,
    pub take_over_dst_weather_weak_cloudy: u8,
    pub take_over_dst_weather_cloud: u8,
    pub take_over_dst_weather_rain: u8,
    pub take_over_dst_weather_heavy_rain: u8,
    pub take_over_dst_weather_storm: u8,
    pub take_over_dst_weather_storm_for_battle: u8,
    pub take_over_dst_weather_snow: u8,
    pub take_over_dst_weather_heavy_snow: u8,
    pub take_over_dst_weather_fog: u8,
    pub take_over_dst_weather_heavy_fog: u8,
    pub take_over_dst_weather_sand_storm: u8,
    pub take_over_dst_weather_heavy_fog_rain: u8,
    pub reserved: [u8; 7],
    pub dst_weather_snowstorm: i16,
    pub dst_weather_lightning_storm: i16,
    pub dst_weather_reserved3: i16,
    pub dst_weather_reserved4: i16,
    pub dst_weather_reserved5: i16,
    pub dst_weather_reserved6: i16,
    pub dst_weather_reserved7: i16,
    pub dst_weather_reserved8: i16,
    pub take_over_dst_weather_snowstorm: u8,
    pub take_over_dst_weather_lightning_storm: u8,
    pub take_over_dst_weather_reserved3: u8,
    pub take_over_dst_weather_reserved4: u8,
    pub take_over_dst_weather_reserved5: u8,
    pub take_over_dst_weather_reserved6: u8,
    pub take_over_dst_weather_reserved7: u8,
    pub take_over_dst_weather_reserved8: u8,
    pub is_enable_apply_map_gd_region_id_for_gparam: u8,
    pub reserved2: [u8; 1],
    pub override_map_gd_region_id: i16,
    pub reserved1: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CutsceneMapIdParam {
    pub disable_param_reserve2: [u8; 3],
    pub play_map_id: u32,
    pub require_map_id0: u32,
    pub require_map_id1: u32,
    pub require_map_id2: u32,
    pub ref_cam_pos_hit_parts_id: i32,
    pub reserved_2: [u8; 12],
    pub client_disable_view_time_for_progress: u16,
    pub reserved: [u8; 2],
    pub hit_parts_0: i32,
    pub hit_parts_1: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CutSceneTextureLoadParam {
    pub disable_param_reserve2: [u8; 3],
    pub tex_name_00: [u8; 16],
    pub tex_name_01: [u8; 16],
    pub tex_name_02: [u8; 16],
    pub tex_name_03: [u8; 16],
    pub tex_name_04: [u8; 16],
    pub tex_name_05: [u8; 16],
    pub tex_name_06: [u8; 16],
    pub tex_name_07: [u8; 16],
    pub tex_name_08: [u8; 16],
    pub tex_name_09: [u8; 16],
    pub tex_name_10: [u8; 16],
    pub tex_name_11: [u8; 16],
    pub tex_name_12: [u8; 16],
    pub tex_name_13: [u8; 16],
    pub tex_name_14: [u8; 16],
    pub tex_name_15: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CutsceneTimezoneConvertParam {
    pub src_timezone_start: f32,
    pub dst_cutscen_time: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct CutsceneWeatherOverrideGparamIdConvertParam {
    pub weather_override_gparam_id: u32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct DecalParam {
    pub texture_id: i32,
    pub dmypoly_id: i32,
    pub pitch_angle: f32,
    pub yaw_angle: f32,
    pub near_distance: f32,
    pub far_distance: f32,
    pub near_size: f32,
    pub far_size: f32,
    pub mask_speffect_id: i32,
    pub random_size_min: i16,
    pub random_size_max: i16,
    pub random_roll_min: f32,
    pub random_roll_max: f32,
    pub random_pitch_min: f32,
    pub random_pitch_max: f32,
    pub random_yaw_min: f32,
    pub random_yaw_max: f32,
    pub pom_hight_scale: f32,
    pub pom_sample_min: u8,
    pub pom_sample_max: u8,
    pub blend_mode: i8,
    pub appear_dir_type: i8,
    pub emissive_value_begin: f32,
    pub emissive_value_end: f32,
    pub emissive_time: f32,
    pub b_intp_enable: u8,
    pub pad_01: [u8; 3],
    pub intp_interval_dist: f32,
    pub begin_intp_texture_id: i32,
    pub end_intp_texture_id: i32,
    pub appear_sfx_id: i32,
    pub appear_sfx_offset_pos: f32,
    pub mask_texture_id: i32,
    pub diffuse_texture_id: i32,
    pub reflec_texture_id: i32,
    pub mask_scale: f32,
    pub normal_texture_id: i32,
    pub height_texture_id: i32,
    pub emissive_texture_id: i32,
    pub diffuse_color_r: u8,
    pub diffuse_color_g: u8,
    pub diffuse_color_b: u8,
    pub pad_03: [u8; 1],
    pub reflec_color_r: u8,
    pub reflec_color_g: u8,
    pub reflec_color_b: u8,
    pub b_life_enable: u8,
    pub sini_scale: f32,
    pub life_time_sec: f32,
    pub fade_out_time_sec: f32,
    pub priority: i16,
    pub b_dist_thin_out_enable: u8,
    pub b_aligned_tex_random_variation_enable: u8,
    pub dist_thin_out_check_dist: f32,
    pub dist_thin_out_check_angle_deg: f32,
    pub dist_thin_out_max_num: u8,
    pub dist_thin_out_check_num: u8,
    pub delay_appear_frame: i16,
    pub fade_in_time_sec: f32,
    pub thin_out_overlap_multi_radius: f32,
    pub thin_out_neighbor_add_radius: f32,
    pub thin_out_overlap_limit_num: u32,
    pub thin_out_neighbor_limit_num: u32,
    pub thin_out_mode: i8,
    pub emissive_color_r: u8,
    pub emissive_color_g: u8,
    pub emissive_color_b: u8,
    pub max_decal_sfx_creatable_slope_angle_deg: f32,
    pub pad_02: [u8; 40],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct DirectionCameraParam {
    pub pad1: [u8; 15],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EnemyCommonParam {
    pub reserved0: [u8; 8],
    pub sound_target_try_approach_time: i32,
    pub search_target_try_approach_time: i32,
    pub memory_target_try_approach_time: i32,
    pub reserved5: [u8; 40],
    pub activate_chr_by_time_phantom_id: i32,
    pub find_unfavorable_failed_point_dist: f32,
    pub find_unfavorable_failed_point_height: f32,
    pub reserved18: [u8; 184],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EnemyStandardInfo {
    pub enemy_behavior_id: i32,
    pub h_p: u16,
    pub attack_power: u16,
    pub chr_type: i32,
    pub hit_height: f32,
    pub hit_radius: f32,
    pub weight: f32,
    pub dynamic_friction: f32,
    pub static_friction: f32,
    pub upper_def_state: i32,
    pub action_def_state: i32,
    pub rot_y_per_second: f32,
    pub reserve0: [u8; 20],
    pub rot_y_per_second_old: u8,
    pub enable_side_step: u8,
    pub use_ragdoll_hit: u8,
    pub reserve_last: [u8; 5],
    pub stamina: u16,
    pub stamina_recover: u16,
    pub stamina_consumption: u16,
    pub deffenct_phys: u16,
    pub reserve_last2: [u8; 48],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EnvObjLotParam {
    pub asset_id_0: i32,
    pub asset_id_1: i32,
    pub asset_id_2: i32,
    pub asset_id_3: i32,
    pub asset_id_4: i32,
    pub asset_id_5: i32,
    pub asset_id_6: i32,
    pub asset_id_7: i32,
    pub create_weight_0: u8,
    pub create_weight_1: u8,
    pub create_weight_2: u8,
    pub create_weight_3: u8,
    pub create_weight_4: u8,
    pub create_weight_5: u8,
    pub create_weight_6: u8,
    pub create_weight_7: u8,
    pub reserve_0: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EquipMtrlSetParam {
    pub material_id01: i32,
    pub material_id02: i32,
    pub material_id03: i32,
    pub material_id04: i32,
    pub material_id05: i32,
    pub material_id06: i32,
    pub pad_id: [u8; 8],
    pub item_num01: i8,
    pub item_num02: i8,
    pub item_num03: i8,
    pub item_num04: i8,
    pub item_num05: i8,
    pub item_num06: i8,
    pub pad_num: [u8; 2],
    pub material_cate01: u8,
    pub material_cate02: u8,
    pub material_cate03: u8,
    pub material_cate04: u8,
    pub material_cate05: u8,
    pub material_cate06: u8,
    pub pad_cate: [u8; 2],
    pub pad: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EquipParamAccessory {
    pub disable_param_reserve2: [u8; 3],
    pub ref_id: i32,
    pub sfx_variation_id: i32,
    pub weight: f32,
    pub behavior_id: i32,
    pub basic_price: i32,
    pub sell_value: i32,
    pub sort_id: i32,
    pub qwc_id: i32,
    pub equip_model_id: u16,
    pub icon_id: u16,
    pub shop_lv: i16,
    pub trophy_sgrade_id: i16,
    pub trophy_seq_id: i16,
    pub equip_model_category: u8,
    pub equip_model_gender: u8,
    pub accessory_category: u8,
    pub ref_category: u8,
    pub sp_effect_category: u8,
    pub sort_group_id: u8,
    pub vagrant_item_lot_id: i32,
    pub vagrant_bonus_ene_drop_item_lot_id: i32,
    pub vagrant_item_ene_drop_item_lot_id: i32,
    #[bitflag(disableParam_NT, 0)]
    #[bitflag(disableParamReserve1, 1)]
    #[bitflag(isDeposit, 2)]
    #[bitflag(isEquipOutBrake, 3)]
    #[bitflag(disableMultiDropShare, 4)]
    #[bitflag(isDiscard, 5)]
    #[bitflag(isDrop, 6)]
    #[bitflag(showLogCondType, 7)]
    pub bitfield0: u8,
    pub rarity: u8,
    pub pad2: [u8; 2],
    pub sale_value: i32,
    pub accessory_group: i16,
    pub pad3: [u8; 1],
    pub comp_trophy_sed_id: i8,
    pub resident_sp_effect_id1: i32,
    pub resident_sp_effect_id2: i32,
    pub resident_sp_effect_id3: i32,
    pub resident_sp_effect_id4: i32,
    pub pad1: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EquipParamCustomWeapon {
    pub base_wep_id: i32,
    pub gem_id: i32,
    pub reinforce_lv: u8,
    pub pad: [u8; 7],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EquipParamGem {
    pub disable_param_reserve2: [u8; 3],
    pub icon_id: u16,
    pub rank: i8,
    pub sort_group_id: u8,
    pub sp_effect_id0: i32,
    pub sp_effect_id1: i32,
    pub sp_effect_id2: i32,
    pub item_get_tutorial_flag_id: u32,
    pub sword_arts_param_id: i32,
    pub mount_value: i32,
    pub sell_value: i32,
    pub sale_value: i32,
    pub sort_id: i32,
    pub comp_trophy_sed_id: i16,
    pub trophy_seq_id: i16,
    #[bitflag(disableParam_NT, 0)]
    #[bitflag(disableParamReserve1, 1)]
    #[bitflag(configurableWepAttr00, 2)]
    #[bitflag(configurableWepAttr01, 3)]
    #[bitflag(configurableWepAttr02, 4)]
    #[bitflag(configurableWepAttr03, 5)]
    #[bitflag(configurableWepAttr04, 6)]
    #[bitflag(configurableWepAttr05, 7)]
    pub bitfield0: u8,
    #[bitflag(configurableWepAttr06, 0)]
    #[bitflag(configurableWepAttr07, 1)]
    #[bitflag(configurableWepAttr08, 2)]
    #[bitflag(configurableWepAttr09, 3)]
    #[bitflag(configurableWepAttr10, 4)]
    #[bitflag(configurableWepAttr11, 5)]
    #[bitflag(configurableWepAttr12, 6)]
    #[bitflag(configurableWepAttr13, 7)]
    pub bitfield1: u8,
    pub rarity: u8,
    #[bitflag(configurableWepAttr14, 0)]
    #[bitflag(configurableWepAttr15, 1)]
    #[bitflag(configurableWepAttr16, 2)]
    #[bitflag(configurableWepAttr17, 3)]
    #[bitflag(configurableWepAttr18, 4)]
    #[bitflag(configurableWepAttr19, 5)]
    #[bitflag(configurableWepAttr20, 6)]
    #[bitflag(configurableWepAttr21, 7)]
    pub bitfield2: u8,
    #[bitflag(configurableWepAttr22, 0)]
    #[bitflag(configurableWepAttr23, 1)]
    #[bitflag(isDiscard, 2)]
    #[bitflag(isDrop, 3)]
    #[bitflag(isDeposit, 4)]
    #[bitflag(disableMultiDropShare, 5)]
    #[bitflag(showDialogCondType, 6)]
    #[bitflag(showLogCondType, 7)]
    pub bitfield3: u8,
    pub default_wep_attr: u8,
    pub pad2: [u8; 2],
    #[bitflag(pad, 0)]
    #[bitflag(canMountWep_Dagger, 1)]
    #[bitflag(canMountWep_SwordNormal, 2)]
    #[bitflag(canMountWep_SwordLarge, 3)]
    #[bitflag(canMountWep_SwordGigantic, 4)]
    #[bitflag(canMountWep_SaberNormal, 5)]
    #[bitflag(canMountWep_SaberLarge, 6)]
    #[bitflag(canMountWep_katana, 7)]
    pub bitfield4: u8,
    #[bitflag(canMountWep_SwordDoubleEdge, 0)]
    #[bitflag(canMountWep_SwordPierce, 1)]
    #[bitflag(canMountWep_RapierHeavy, 2)]
    #[bitflag(canMountWep_AxeNormal, 3)]
    #[bitflag(canMountWep_AxeLarge, 4)]
    #[bitflag(canMountWep_HammerNormal, 5)]
    #[bitflag(canMountWep_HammerLarge, 6)]
    #[bitflag(canMountWep_Flail, 7)]
    pub bitfield5: u8,
    #[bitflag(canMountWep_SpearNormal, 0)]
    #[bitflag(canMountWep_SpearLarge, 1)]
    #[bitflag(canMountWep_SpearHeavy, 2)]
    #[bitflag(canMountWep_SpearAxe, 3)]
    #[bitflag(canMountWep_Sickle, 4)]
    #[bitflag(canMountWep_Knuckle, 5)]
    #[bitflag(canMountWep_Claw, 6)]
    #[bitflag(canMountWep_Whip, 7)]
    pub bitfield6: u8,
    #[bitflag(canMountWep_AxhammerLarge, 0)]
    #[bitflag(canMountWep_BowSmall, 1)]
    #[bitflag(canMountWep_BowNormal, 2)]
    #[bitflag(canMountWep_BowLarge, 3)]
    #[bitflag(canMountWep_ClossBow, 4)]
    #[bitflag(canMountWep_Ballista, 5)]
    #[bitflag(canMountWep_Staff, 6)]
    #[bitflag(canMountWep_Sorcery, 7)]
    pub bitfield7: u8,
    pub reserved2_can_mount_wep: [u8; 3],
    pub sp_effect_msg_id0: i32,
    pub sp_effect_msg_id1: i32,
    pub sp_effect_id_for_atk0: i32,
    pub sp_effect_id_for_atk1: i32,
    pub sp_effect_id_for_atk2: i32,
    pub mount_wep_text_id: i32,
    pub pad6: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EquipParamGoods {
    pub disable_param_reserve2: [u8; 3],
    pub ref_id_default: i32,
    pub sfx_variation_id: i32,
    pub weight: f32,
    pub basic_price: i32,
    pub sell_value: i32,
    pub behavior_id: i32,
    pub replace_item_id: i32,
    pub sort_id: i32,
    pub appearance_replace_item_id: i32,
    pub yes_no_dialog_message_id: i32,
    pub use_enable_sp_effect_type: u16,
    pub pot_group_id: i8,
    pub pad: [u8; 1],
    pub icon_id: u16,
    pub model_id: u16,
    pub shop_lv: i16,
    pub comp_trophy_sed_id: i16,
    pub trophy_seq_id: i16,
    pub max_num: i16,
    pub consume_hero_point: u8,
    pub over_dexterity: u8,
    pub goods_type: u8,
    pub ref_category: u8,
    pub sp_effect_category: u8,
    pub pad3: [u8; 1],
    pub goods_use_anim: u8,
    pub opme_menu_type: u8,
    pub use_limit_category: u8,
    pub replace_category: u8,
    pub reserve4: [u8; 2],
    #[bitflag(disableParam_NT, 0)]
    #[bitflag(disableParamReserve1, 1)]
    #[bitflag(enable_live, 2)]
    #[bitflag(enable_gray, 3)]
    #[bitflag(enable_white, 4)]
    #[bitflag(enable_black, 5)]
    #[bitflag(enable_multi, 6)]
    #[bitflag(disable_offline, 7)]
    pub bitfield0: u8,
    #[bitflag(isEquip, 0)]
    #[bitflag(isConsume, 1)]
    #[bitflag(isAutoEquip, 2)]
    #[bitflag(isEstablishment, 3)]
    #[bitflag(isOnlyOne, 4)]
    #[bitflag(isDiscard, 5)]
    #[bitflag(isDeposit, 6)]
    #[bitflag(isDisableHand, 7)]
    pub bitfield1: u8,
    #[bitflag(isRemoveItem_forGameClear, 0)]
    #[bitflag(isSuppleItem, 1)]
    #[bitflag(isFullSuppleItem, 2)]
    #[bitflag(isEnhance, 3)]
    #[bitflag(isFixItem, 4)]
    #[bitflag(disableMultiDropShare, 5)]
    #[bitflag(disableUseAtColiseum, 6)]
    #[bitflag(disableUseAtOutOfColiseum, 7)]
    pub bitfield2: u8,
    pub sync_num_vary_id: u8,
    pub ref_id_1: i32,
    pub ref_virtual_wep_id: i32,
    pub vagrant_item_lot_id: i32,
    pub vagrant_bonus_ene_drop_item_lot_id: i32,
    pub vagrant_item_ene_drop_item_lot_id: i32,
    pub cast_sfx_id: i32,
    pub fire_sfx_id: i32,
    pub effect_sfx_id: i32,
    #[bitflag(isEnableFastUseItem, 0)]
    #[bitflag(isApplySpecialEffect, 1)]
    #[bitflag(enable_ActiveBigRune, 2)]
    #[bitflag(isBonfireWarpItem, 3)]
    #[bitflag(enable_Ladder, 4)]
    #[bitflag(isUseMultiPlayPreparation, 5)]
    #[bitflag(canMultiUse, 6)]
    #[bitflag(isShieldEnchant, 7)]
    pub bitfield3: u8,
    pub supple_type: u8,
    pub auto_replenish_type: u8,
    #[bitflag(isWarpProhibited, 0)]
    #[bitflag(isUseMultiPenaltyOnly, 1)]
    #[bitflag(isDrop, 2)]
    #[bitflag(showLogCondType, 3)]
    #[bitflag(isSummonHorse, 4)]
    #[bitflag(showDialogCondType, 5)]
    #[bitflag(isSleepCollectionItem, 6)]
    #[bitflag(enableRiding, 7)]
    pub bitfield4: u8,
    pub max_repository_num: i16,
    pub sort_group_id: u8,
    pub sale_value: i32,
    pub rarity: u8,
    pub use_limit_summon_buddy: u8,
    pub use_limit_sp_effect_type: u16,
    pub ai_use_judge_id: i32,
    pub consume_mp: i16,
    pub consume_hp: i16,
    pub reinforce_goods_id: i32,
    pub reinforce_material_id: i32,
    pub reinforce_price: i32,
    pub use_level_vow_type0: i8,
    pub use_level_vow_type1: i8,
    pub use_level_vow_type2: i8,
    pub use_level_vow_type3: i8,
    pub use_level_vow_type4: i8,
    pub use_level_vow_type5: i8,
    pub use_level_vow_type6: i8,
    pub use_level_vow_type7: i8,
    pub use_level_vow_type8: i8,
    pub use_level_vow_type9: i8,
    pub use_level_vow_type10: i8,
    pub use_level_vow_type11: i8,
    pub use_level_vow_type12: i8,
    pub use_level_vow_type13: i8,
    pub use_level_vow_type14: i8,
    pub use_level_vow_type15: i8,
    pub use_level: u16,
    pub reserve5: [u8; 2],
    pub item_get_tutorial_flag_id: u32,
    pub reserve3: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EquipParamProtector {
    pub disable_param_reserve2: [u8; 3],
    pub sort_id: i32,
    pub wandering_equip_id: u32,
    pub resist_sleep: u16,
    pub resist_madness: u16,
    pub sa_durability: f32,
    pub toughness_correct_rate: f32,
    pub fix_price: i32,
    pub basic_price: i32,
    pub sell_value: i32,
    pub weight: f32,
    pub resident_sp_effect_id: i32,
    pub resident_sp_effect_id2: i32,
    pub resident_sp_effect_id3: i32,
    pub material_set_id: i32,
    pub parts_damage_rate: f32,
    pub corect_sarecover: f32,
    pub origin_equip_pro: i32,
    pub origin_equip_pro1: i32,
    pub origin_equip_pro2: i32,
    pub origin_equip_pro3: i32,
    pub origin_equip_pro4: i32,
    pub origin_equip_pro5: i32,
    pub origin_equip_pro6: i32,
    pub origin_equip_pro7: i32,
    pub origin_equip_pro8: i32,
    pub origin_equip_pro9: i32,
    pub origin_equip_pro10: i32,
    pub origin_equip_pro11: i32,
    pub origin_equip_pro12: i32,
    pub origin_equip_pro13: i32,
    pub origin_equip_pro14: i32,
    pub origin_equip_pro15: i32,
    pub face_scale_m_scale_x: f32,
    pub face_scale_m_scale_z: f32,
    pub face_scale_m_max_x: f32,
    pub face_scale_m_max_z: f32,
    pub face_scale_f_scale_x: f32,
    pub face_scale_f_scale_z: f32,
    pub face_scale_f_max_x: f32,
    pub face_scale_f_max_z: f32,
    pub qwc_id: i32,
    pub equip_model_id: u16,
    pub icon_id_m: u16,
    pub icon_id_f: u16,
    pub knock_back: u16,
    pub knockback_bounce_rate: u16,
    pub durability: u16,
    pub durability_max: u16,
    pub pad03: [u8; 2],
    pub def_flick_power: u16,
    pub defense_physics: u16,
    pub defense_magic: u16,
    pub defense_fire: u16,
    pub defense_thunder: u16,
    pub defense_slash: i16,
    pub defense_blow: i16,
    pub defense_thrust: i16,
    pub resist_poison: u16,
    pub resist_disease: u16,
    pub resist_blood: u16,
    pub resist_curse: u16,
    pub reinforce_type_id: i16,
    pub trophy_sgrade_id: i16,
    pub shop_lv: i16,
    pub knockback_param_id: u8,
    pub flick_damage_cut_rate: u8,
    pub equip_model_category: u8,
    pub equip_model_gender: u8,
    pub protector_category: u8,
    pub rarity: u8,
    pub sort_group_id: u8,
    pub parts_dmg_type: u8,
    pub pad04: [u8; 2],
    #[bitflag(disableParam_NT, 0)]
    #[bitflag(disableParamReserve1, 1)]
    #[bitflag(isDeposit, 2)]
    #[bitflag(headEquip, 3)]
    #[bitflag(bodyEquip, 4)]
    #[bitflag(armEquip, 5)]
    #[bitflag(legEquip, 6)]
    #[bitflag(useFaceScale, 7)]
    pub bitfield0: u8,
    pub defense_material_variation_value_weak: u8,
    pub auto_foot_effect_decal_base_id2: i16,
    pub auto_foot_effect_decal_base_id3: i16,
    pub defense_material_variation_value: u8,
    #[bitflag(isSkipWeakDamageAnim, 0)]
    #[bitflag(pad06, 1)]
    #[bitflag(isDiscard, 2)]
    #[bitflag(isDrop, 3)]
    #[bitflag(disableMultiDropShare, 4)]
    #[bitflag(simpleModelForDlc, 5)]
    #[bitflag(showLogCondType, 6)]
    #[bitflag(showDialogCondType, 7)]
    pub bitfield1: u8,
    pub neutral_damage_cut_rate: f32,
    pub slash_damage_cut_rate: f32,
    pub blow_damage_cut_rate: f32,
    pub thrust_damage_cut_rate: f32,
    pub magic_damage_cut_rate: f32,
    pub fire_damage_cut_rate: f32,
    pub thunder_damage_cut_rate: f32,
    pub defense_material_sfx1: u16,
    pub defense_material_sfx_weak1: u16,
    pub defense_material1: u16,
    pub defense_material_weak1: u16,
    pub defense_material_sfx2: u16,
    pub defense_material_sfx_weak2: u16,
    pub foot_material_se: u16,
    pub defense_material_weak2: u16,
    pub auto_foot_effect_decal_base_id1: i32,
    pub toughness_damage_cut_rate: f32,
    pub toughness_recover_correction: f32,
    pub dark_damage_cut_rate: f32,
    pub defense_dark: u16,
    #[bitflag(pad, 0)]
    #[bitflag(invisibleFlag48, 1)]
    #[bitflag(invisibleFlag49, 2)]
    #[bitflag(invisibleFlag50, 3)]
    #[bitflag(invisibleFlag51, 4)]
    #[bitflag(invisibleFlag52, 5)]
    #[bitflag(invisibleFlag53, 6)]
    #[bitflag(invisibleFlag54, 7)]
    pub bitfield2: u8,
    #[bitflag(invisibleFlag55, 0)]
    #[bitflag(invisibleFlag56, 1)]
    #[bitflag(invisibleFlag57, 2)]
    #[bitflag(invisibleFlag58, 3)]
    #[bitflag(invisibleFlag59, 4)]
    #[bitflag(invisibleFlag60, 5)]
    #[bitflag(invisibleFlag61, 6)]
    #[bitflag(invisibleFlag62, 7)]
    pub bitfield3: u8,
    #[bitflag(invisibleFlag63, 0)]
    #[bitflag(invisibleFlag64, 1)]
    #[bitflag(invisibleFlag65, 2)]
    #[bitflag(invisibleFlag66, 3)]
    #[bitflag(invisibleFlag67, 4)]
    #[bitflag(invisibleFlag68, 5)]
    #[bitflag(invisibleFlag69, 6)]
    #[bitflag(invisibleFlag70, 7)]
    pub bitfield4: u8,
    #[bitflag(invisibleFlag71, 0)]
    #[bitflag(invisibleFlag72, 1)]
    #[bitflag(invisibleFlag73, 2)]
    #[bitflag(invisibleFlag74, 3)]
    #[bitflag(invisibleFlag75, 4)]
    #[bitflag(invisibleFlag76, 5)]
    #[bitflag(invisibleFlag77, 6)]
    #[bitflag(invisibleFlag78, 7)]
    pub bitfield5: u8,
    pub posture_control_id: u8,
    pub pad2: [u8; 4],
    pub sale_value: i32,
    pub resist_freeze: u16,
    pub invisible_flag_sex_ver00: u8,
    pub invisible_flag_sex_ver01: u8,
    pub invisible_flag_sex_ver02: u8,
    pub invisible_flag_sex_ver03: u8,
    pub invisible_flag_sex_ver04: u8,
    pub invisible_flag_sex_ver05: u8,
    pub invisible_flag_sex_ver06: u8,
    pub invisible_flag_sex_ver07: u8,
    pub invisible_flag_sex_ver08: u8,
    pub invisible_flag_sex_ver09: u8,
    pub invisible_flag_sex_ver10: u8,
    pub invisible_flag_sex_ver11: u8,
    pub invisible_flag_sex_ver12: u8,
    pub invisible_flag_sex_ver13: u8,
    pub invisible_flag_sex_ver14: u8,
    pub invisible_flag_sex_ver15: u8,
    pub invisible_flag_sex_ver16: u8,
    pub invisible_flag_sex_ver17: u8,
    pub invisible_flag_sex_ver18: u8,
    pub invisible_flag_sex_ver19: u8,
    pub invisible_flag_sex_ver20: u8,
    pub invisible_flag_sex_ver21: u8,
    pub invisible_flag_sex_ver22: u8,
    pub invisible_flag_sex_ver23: u8,
    pub invisible_flag_sex_ver24: u8,
    pub invisible_flag_sex_ver25: u8,
    pub invisible_flag_sex_ver26: u8,
    pub invisible_flag_sex_ver27: u8,
    pub invisible_flag_sex_ver28: u8,
    pub invisible_flag_sex_ver29: u8,
    pub invisible_flag_sex_ver30: u8,
    pub invisible_flag_sex_ver31: u8,
    pub invisible_flag_sex_ver32: u8,
    pub invisible_flag_sex_ver33: u8,
    pub invisible_flag_sex_ver34: u8,
    pub invisible_flag_sex_ver35: u8,
    pub invisible_flag_sex_ver36: u8,
    pub invisible_flag_sex_ver37: u8,
    pub invisible_flag_sex_ver38: u8,
    pub invisible_flag_sex_ver39: u8,
    pub invisible_flag_sex_ver40: u8,
    pub invisible_flag_sex_ver41: u8,
    pub invisible_flag_sex_ver42: u8,
    pub invisible_flag_sex_ver43: u8,
    pub invisible_flag_sex_ver44: u8,
    pub invisible_flag_sex_ver45: u8,
    pub invisible_flag_sex_ver46: u8,
    pub invisible_flag_sex_ver47: u8,
    pub invisible_flag_sex_ver48: u8,
    pub invisible_flag_sex_ver49: u8,
    pub invisible_flag_sex_ver50: u8,
    pub invisible_flag_sex_ver51: u8,
    pub invisible_flag_sex_ver52: u8,
    pub invisible_flag_sex_ver53: u8,
    pub invisible_flag_sex_ver54: u8,
    pub invisible_flag_sex_ver55: u8,
    pub invisible_flag_sex_ver56: u8,
    pub invisible_flag_sex_ver57: u8,
    pub invisible_flag_sex_ver58: u8,
    pub invisible_flag_sex_ver59: u8,
    pub invisible_flag_sex_ver60: u8,
    pub invisible_flag_sex_ver61: u8,
    pub invisible_flag_sex_ver62: u8,
    pub invisible_flag_sex_ver63: u8,
    pub invisible_flag_sex_ver64: u8,
    pub invisible_flag_sex_ver65: u8,
    pub invisible_flag_sex_ver66: u8,
    pub invisible_flag_sex_ver67: u8,
    pub invisible_flag_sex_ver68: u8,
    pub invisible_flag_sex_ver69: u8,
    pub invisible_flag_sex_ver70: u8,
    pub invisible_flag_sex_ver71: u8,
    pub invisible_flag_sex_ver72: u8,
    pub invisible_flag_sex_ver73: u8,
    pub invisible_flag_sex_ver74: u8,
    pub invisible_flag_sex_ver75: u8,
    pub invisible_flag_sex_ver76: u8,
    pub invisible_flag_sex_ver77: u8,
    pub invisible_flag_sex_ver78: u8,
    pub invisible_flag_sex_ver79: u8,
    pub invisible_flag_sex_ver80: u8,
    pub invisible_flag_sex_ver81: u8,
    pub invisible_flag_sex_ver82: u8,
    pub invisible_flag_sex_ver83: u8,
    pub invisible_flag_sex_ver84: u8,
    pub invisible_flag_sex_ver85: u8,
    pub invisible_flag_sex_ver86: u8,
    pub invisible_flag_sex_ver87: u8,
    pub invisible_flag_sex_ver88: u8,
    pub invisible_flag_sex_ver89: u8,
    pub invisible_flag_sex_ver90: u8,
    pub invisible_flag_sex_ver91: u8,
    pub invisible_flag_sex_ver92: u8,
    pub invisible_flag_sex_ver93: u8,
    pub invisible_flag_sex_ver94: u8,
    pub invisible_flag_sex_ver95: u8,
    pub pad404: [u8; 14],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EquipParamWeapon {
    pub disable_param_reserve2: [u8; 3],
    pub behavior_variation_id: i32,
    pub sort_id: i32,
    pub wandering_equip_id: u32,
    pub weight: f32,
    pub weapon_weight_rate: f32,
    pub fix_price: i32,
    pub reinforce_price: i32,
    pub sell_value: i32,
    pub correct_strength: f32,
    pub correct_agility: f32,
    pub correct_magic: f32,
    pub correct_faith: f32,
    pub phys_guard_cut_rate: f32,
    pub mag_guard_cut_rate: f32,
    pub fire_guard_cut_rate: f32,
    pub thun_guard_cut_rate: f32,
    pub sp_effect_behavior_id0: i32,
    pub sp_effect_behavior_id1: i32,
    pub sp_effect_behavior_id2: i32,
    pub resident_sp_effect_id: i32,
    pub resident_sp_effect_id1: i32,
    pub resident_sp_effect_id2: i32,
    pub material_set_id: i32,
    pub origin_equip_wep: i32,
    pub origin_equip_wep1: i32,
    pub origin_equip_wep2: i32,
    pub origin_equip_wep3: i32,
    pub origin_equip_wep4: i32,
    pub origin_equip_wep5: i32,
    pub origin_equip_wep6: i32,
    pub origin_equip_wep7: i32,
    pub origin_equip_wep8: i32,
    pub origin_equip_wep9: i32,
    pub origin_equip_wep10: i32,
    pub origin_equip_wep11: i32,
    pub origin_equip_wep12: i32,
    pub origin_equip_wep13: i32,
    pub origin_equip_wep14: i32,
    pub origin_equip_wep15: i32,
    pub weak_a_damage_rate: f32,
    pub weak_b_damage_rate: f32,
    pub weak_c_damage_rate: f32,
    pub weak_d_damage_rate: f32,
    pub sleep_guard_resist_max_correct: f32,
    pub madness_guard_resist_max_correct: f32,
    pub sa_weapon_damage: f32,
    pub equip_model_id: u16,
    pub icon_id: u16,
    pub durability: u16,
    pub durability_max: u16,
    pub attack_throw_escape: u16,
    pub parry_damage_life: i16,
    pub attack_base_physics: u16,
    pub attack_base_magic: u16,
    pub attack_base_fire: u16,
    pub attack_base_thunder: u16,
    pub attack_base_stamina: u16,
    pub guard_angle: i16,
    pub sa_durability: f32,
    pub stamina_guard_def: i16,
    pub reinforce_type_id: i16,
    pub trophy_sgrade_id: i16,
    pub trophy_seq_id: i16,
    pub throw_atk_rate: i16,
    pub bow_dist_rate: i16,
    pub equip_model_category: u8,
    pub equip_model_gender: u8,
    pub weapon_category: u8,
    pub wepmotion_category: u8,
    pub guardmotion_category: u8,
    pub atk_material: u8,
    pub def_se_material1: u16,
    pub correct_type_physics: u8,
    pub sp_attribute: u8,
    pub sp_atkcategory: u16,
    pub wepmotion_one_hand_id: u8,
    pub wepmotion_both_hand_id: u8,
    pub proper_strength: u8,
    pub proper_agility: u8,
    pub proper_magic: u8,
    pub proper_faith: u8,
    pub over_strength: u8,
    pub attack_base_parry: u8,
    pub defense_base_parry: u8,
    pub guard_base_repel: u8,
    pub attack_base_repel: u8,
    pub guard_cut_cancel_rate: i8,
    pub guard_level: i8,
    pub slash_guard_cut_rate: i8,
    pub blow_guard_cut_rate: i8,
    pub thrust_guard_cut_rate: i8,
    pub poison_guard_resist: i8,
    pub disease_guard_resist: i8,
    pub blood_guard_resist: i8,
    pub curse_guard_resist: i8,
    pub atk_attribute: u8,
    #[bitflag(disableParam_NT, 0)]
    #[bitflag(disableParamReserve1, 1)]
    #[bitflag(rightHandEquipable, 2)]
    #[bitflag(leftHandEquipable, 3)]
    #[bitflag(bothHandEquipable, 4)]
    #[bitflag(arrowSlotEquipable, 5)]
    #[bitflag(boltSlotEquipable, 6)]
    #[bitflag(enableGuard, 7)]
    pub bitfield0: u8,
    #[bitflag(enableParry, 0)]
    #[bitflag(enableMagic, 1)]
    #[bitflag(enableSorcery, 2)]
    #[bitflag(enableMiracle, 3)]
    #[bitflag(enableVowMagic, 4)]
    #[bitflag(isNormalAttackType, 5)]
    #[bitflag(isBlowAttackType, 6)]
    #[bitflag(isSlashAttackType, 7)]
    pub bitfield1: u8,
    #[bitflag(isThrustAttackType, 0)]
    #[bitflag(isEnhance, 1)]
    #[bitflag(isHeroPointCorrect, 2)]
    #[bitflag(isCustom, 3)]
    #[bitflag(disableBaseChangeReset, 4)]
    #[bitflag(disableRepair, 5)]
    #[bitflag(isDarkHand, 6)]
    #[bitflag(simpleModelForDlc, 7)]
    pub bitfield2: u8,
    #[bitflag(lanternWep, 0)]
    #[bitflag(isVersusGhostWep, 1)]
    #[bitflag(baseChangeCategory, 2)]
    #[bitflag(isDragonSlayer, 3)]
    #[bitflag(isDeposit, 4)]
    #[bitflag(disableMultiDropShare, 5)]
    #[bitflag(isDiscard, 6)]
    #[bitflag(isDrop, 7)]
    pub bitfield3: u8,
    pub def_sfx_material1: u16,
    pub wep_collidable_type0: u8,
    pub wep_collidable_type1: u8,
    pub posture_control_id_right: u8,
    pub posture_control_id_left: u8,
    pub trace_sfx_id0: i32,
    pub trace_dmy_id_head0: i32,
    pub trace_dmy_id_tail0: i32,
    pub trace_sfx_id1: i32,
    pub trace_dmy_id_head1: i32,
    pub trace_dmy_id_tail1: i32,
    pub trace_sfx_id2: i32,
    pub trace_dmy_id_head2: i32,
    pub trace_dmy_id_tail2: i32,
    pub trace_sfx_id3: i32,
    pub trace_dmy_id_head3: i32,
    pub trace_dmy_id_tail3: i32,
    pub trace_sfx_id4: i32,
    pub trace_dmy_id_head4: i32,
    pub trace_dmy_id_tail4: i32,
    pub trace_sfx_id5: i32,
    pub trace_dmy_id_head5: i32,
    pub trace_dmy_id_tail5: i32,
    pub trace_sfx_id6: i32,
    pub trace_dmy_id_head6: i32,
    pub trace_dmy_id_tail6: i32,
    pub trace_sfx_id7: i32,
    pub trace_dmy_id_head7: i32,
    pub trace_dmy_id_tail7: i32,
    pub def_sfx_material2: u16,
    pub def_se_material2: u16,
    pub absorp_param_id: i32,
    pub toughness_correct_rate: f32,
    #[bitflag(showLogCondType, 0)]
    #[bitflag(enableThrow, 1)]
    #[bitflag(showDialogCondType, 2)]
    #[bitflag(disableGemAttr, 3)]
    #[bitflag(isValidTough_ProtSADmg, 4)]
    #[bitflag(isDualBlade, 5)]
    #[bitflag(isAutoEquip, 6)]
    #[bitflag(isEnableEmergencyStep, 7)]
    pub bitfield4: u8,
    pub correct_type_magic: u8,
    pub correct_type_fire: u8,
    pub correct_type_thunder: u8,
    pub weak_e_damage_rate: f32,
    pub weak_f_damage_rate: f32,
    pub dark_guard_cut_rate: f32,
    pub attack_base_dark: u16,
    pub correct_type_dark: u8,
    pub correct_type_poison: u8,
    pub sort_group_id: u8,
    pub atk_attribute2: u8,
    pub sleep_guard_resist: i8,
    pub madness_guard_resist: i8,
    pub correct_type_blood: u8,
    pub proper_luck: u8,
    pub freeze_guard_resist: i8,
    pub auto_replenish_type: u8,
    pub sword_arts_param_id: i32,
    pub correct_luck: f32,
    pub arrow_bolt_equip_id: u32,
    pub derivation_level_type: u8,
    pub enchant_sfx_size: u8,
    pub wep_type: u16,
    pub phys_guard_cut_rate_max_correct: f32,
    pub mag_guard_cut_rate_max_correct: f32,
    pub fire_guard_cut_rate_max_correct: f32,
    pub thun_guard_cut_rate_max_correct: f32,
    pub dark_guard_cut_rate_max_correct: f32,
    pub poison_guard_resist_max_correct: f32,
    pub disease_guard_resist_max_correct: f32,
    pub blood_guard_resist_max_correct: f32,
    pub curse_guard_resist_max_correct: f32,
    pub freeze_guard_resist_max_correct: f32,
    pub stamina_guard_def_max_correct: f32,
    pub resident_sfx_id_1: i32,
    pub resident_sfx_id_2: i32,
    pub resident_sfx_id_3: i32,
    pub resident_sfx_id_4: i32,
    pub resident_sfx_dmy_id_1: i32,
    pub resident_sfx_dmy_id_2: i32,
    pub resident_sfx_dmy_id_3: i32,
    pub resident_sfx_dmy_id_4: i32,
    pub stamina_consumption_rate: f32,
    pub vs_player_dmg_correct_rate_physics: f32,
    pub vs_player_dmg_correct_rate_magic: f32,
    pub vs_player_dmg_correct_rate_fire: f32,
    pub vs_player_dmg_correct_rate_thunder: f32,
    pub vs_player_dmg_correct_rate_dark: f32,
    pub vs_player_dmg_correct_rate_poison: f32,
    pub vs_player_dmg_correct_rate_blood: f32,
    pub vs_player_dmg_correct_rate_freeze: f32,
    pub attainment_wep_status_str: i32,
    pub attainment_wep_status_dex: i32,
    pub attainment_wep_status_mag: i32,
    pub attainment_wep_status_fai: i32,
    pub attainment_wep_status_luc: i32,
    pub attack_element_correct_id: i32,
    pub sale_value: i32,
    pub reinforce_shop_category: u8,
    pub max_arrow_quantity: u8,
    #[bitflag(invisibleOnRemo, 0)]
    #[bitflag(pad2, 1)]
    #[bitflag(residentSfx_1_IsVisibleForHang, 2)]
    #[bitflag(residentSfx_2_IsVisibleForHang, 3)]
    #[bitflag(residentSfx_3_IsVisibleForHang, 4)]
    #[bitflag(residentSfx_4_IsVisibleForHang, 5)]
    #[bitflag(isSoulParamIdChange_model0, 6)]
    #[bitflag(isSoulParamIdChange_model1, 7)]
    pub bitfield5: u8,
    pub wep_se_id_offset: i8,
    pub base_change_price: i32,
    pub level_sync_correct_id: i16,
    pub correct_type_sleep: u8,
    pub correct_type_madness: u8,
    pub rarity: u8,
    pub gem_mount_type: u8,
    pub wep_regain_hp: u16,
    pub sp_effect_msg_id0: i32,
    pub sp_effect_msg_id1: i32,
    pub sp_effect_msg_id2: i32,
    pub origin_equip_wep16: i32,
    pub origin_equip_wep17: i32,
    pub origin_equip_wep18: i32,
    pub origin_equip_wep19: i32,
    pub origin_equip_wep20: i32,
    pub origin_equip_wep21: i32,
    pub origin_equip_wep22: i32,
    pub origin_equip_wep23: i32,
    pub origin_equip_wep24: i32,
    pub origin_equip_wep25: i32,
    pub vs_player_dmg_correct_rate_sleep: f32,
    pub vs_player_dmg_correct_rate_madness: f32,
    pub sa_guard_cut_rate: f32,
    pub def_material_variation_value: u8,
    pub sp_attribute_variation_value: u8,
    pub stealth_atk_rate: i16,
    pub vs_player_dmg_correct_rate_disease: f32,
    pub vs_player_dmg_correct_rate_curse: f32,
    pub pad: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EstusFlaskRecoveryParam {
    pub host: u8,
    pub invade_orb_none: u8,
    pub invade_orb_umbasa: u8,
    pub invade_orb_berserker: u8,
    pub invade_orb_sinners: u8,
    pub invade_sign_none: u8,
    pub invade_sign_umbasa: u8,
    pub invade_sign_berserker: u8,
    pub invade_sign_sinners: u8,
    pub invade_ring_sinners: u8,
    pub invade_ring_rosalia: u8,
    pub invade_ring_forest: u8,
    pub coop_sign_none: u8,
    pub coop_sign_umbasa: u8,
    pub coop_sign_berserker: u8,
    pub coop_sign_sinners: u8,
    pub coop_ring_red_hunter: u8,
    pub invade_ring_anor: u8,
    pub param_replace_rate: u16,
    pub param_replace_id: i32,
    pub pad: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct EventFlagUsageParam {
    pub usage_type: u8,
    pub playlog_category: u8,
    pub padding1: [u8; 2],
    pub flag_num: i32,
    pub padding2: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct FaceParam {
    pub face_parts_id: u8,
    pub skin_color_r: u8,
    pub skin_color_g: u8,
    pub skin_color_b: u8,
    pub skin_gloss: u8,
    pub skin_pores: u8,
    pub face_beard: u8,
    pub face_around_eye: u8,
    pub face_around_eye_color_r: u8,
    pub face_around_eye_color_g: u8,
    pub face_around_eye_color_b: u8,
    pub face_cheek: u8,
    pub face_cheek_color_r: u8,
    pub face_cheek_color_g: u8,
    pub face_cheek_color_b: u8,
    pub face_eye_line: u8,
    pub face_eye_line_color_r: u8,
    pub face_eye_line_color_g: u8,
    pub face_eye_line_color_b: u8,
    pub face_eye_shadow_down: u8,
    pub face_eye_shadow_down_color_r: u8,
    pub face_eye_shadow_down_color_g: u8,
    pub face_eye_shadow_down_color_b: u8,
    pub face_eye_shadow_up: u8,
    pub face_eye_shadow_up_color_r: u8,
    pub face_eye_shadow_up_color_g: u8,
    pub face_eye_shadow_up_color_b: u8,
    pub face_lip: u8,
    pub face_lip_color_r: u8,
    pub face_lip_color_g: u8,
    pub face_lip_color_b: u8,
    pub body_hair: u8,
    pub body_hair_color_r: u8,
    pub body_hair_color_g: u8,
    pub body_hair_color_b: u8,
    pub eye_parts_id: u8,
    pub eye_r_iris_color_r: u8,
    pub eye_r_iris_color_g: u8,
    pub eye_r_iris_color_b: u8,
    pub eye_r_iris_scale: u8,
    pub eye_r_cataract: u8,
    pub eye_r_cataract_color_r: u8,
    pub eye_r_cataract_color_g: u8,
    pub eye_r_cataract_color_b: u8,
    pub eye_r_sclera_color_r: u8,
    pub eye_r_sclera_color_g: u8,
    pub eye_r_sclera_color_b: u8,
    pub eye_r_iris_distance: u8,
    pub eye_l_iris_color_r: u8,
    pub eye_l_iris_color_g: u8,
    pub eye_l_iris_color_b: u8,
    pub eye_l_iris_scale: u8,
    pub eye_l_cataract: u8,
    pub eye_l_cataract_color_r: u8,
    pub eye_l_cataract_color_g: u8,
    pub eye_l_cataract_color_b: u8,
    pub eye_l_sclera_color_r: u8,
    pub eye_l_sclera_color_g: u8,
    pub eye_l_sclera_color_b: u8,
    pub eye_l_iris_distance: u8,
    pub hair_parts_id: u8,
    pub hair_color_r: u8,
    pub hair_color_g: u8,
    pub hair_color_b: u8,
    pub hair_shininess: u8,
    pub hair_root_black: u8,
    pub hair_white_density: u8,
    pub beard_parts_id: u8,
    pub beard_color_r: u8,
    pub beard_color_g: u8,
    pub beard_color_b: u8,
    pub beard_shininess: u8,
    pub beard_root_black: u8,
    pub beard_white_density: u8,
    pub eyebrow_parts_id: u8,
    pub eyebrow_color_r: u8,
    pub eyebrow_color_g: u8,
    pub eyebrow_color_b: u8,
    pub eyebrow_shininess: u8,
    pub eyebrow_root_black: u8,
    pub eyebrow_white_density: u8,
    pub eyelash_parts_id: u8,
    pub eyelash_color_r: u8,
    pub eyelash_color_g: u8,
    pub eyelash_color_b: u8,
    pub accessories_parts_id: u8,
    pub accessories_color_r: u8,
    pub accessories_color_g: u8,
    pub accessories_color_b: u8,
    pub decal_parts_id: u8,
    pub decal_pos_x: u8,
    pub decal_pos_y: u8,
    pub decal_angle: u8,
    pub decal_scale: u8,
    pub decal_color_r: u8,
    pub decal_color_g: u8,
    pub decal_color_b: u8,
    pub decal_gloss: u8,
    pub decal_mirror: u8,
    pub chr_body_scale_head: u8,
    pub chr_body_scale_breast: u8,
    pub chr_body_scale_abdomen: u8,
    pub chr_body_scale_rarm: u8,
    pub chr_body_scale_rleg: u8,
    pub chr_body_scale_larm: u8,
    pub chr_body_scale_lleg: u8,
    pub burn_scar: u8,
    pub pad: [u8; 5],
    pub age: u8,
    pub gender: u8,
    pub caricature_geometry: u8,
    pub caricature_texture: u8,
    pub face_geo_data00: u8,
    pub face_geo_data01: u8,
    pub face_geo_data02: u8,
    pub face_geo_data03: u8,
    pub face_geo_data04: u8,
    pub face_geo_data05: u8,
    pub face_geo_data06: u8,
    pub face_geo_data07: u8,
    pub face_geo_data08: u8,
    pub face_geo_data09: u8,
    pub face_geo_data10: u8,
    pub face_geo_data11: u8,
    pub face_geo_data12: u8,
    pub face_geo_data13: u8,
    pub face_geo_data14: u8,
    pub face_geo_data15: u8,
    pub face_geo_data16: u8,
    pub face_geo_data17: u8,
    pub face_geo_data18: u8,
    pub face_geo_data19: u8,
    pub face_geo_data20: u8,
    pub face_geo_data21: u8,
    pub face_geo_data22: u8,
    pub face_geo_data23: u8,
    pub face_geo_data24: u8,
    pub face_geo_data25: u8,
    pub face_geo_data26: u8,
    pub face_geo_data27: u8,
    pub face_geo_data28: u8,
    pub face_geo_data29: u8,
    pub face_geo_data30: u8,
    pub face_geo_data31: u8,
    pub face_geo_data32: u8,
    pub face_geo_data33: u8,
    pub face_geo_data34: u8,
    pub face_geo_data35: u8,
    pub face_geo_data36: u8,
    pub face_geo_data37: u8,
    pub face_geo_data38: u8,
    pub face_geo_data39: u8,
    pub face_geo_data40: u8,
    pub face_geo_data41: u8,
    pub face_geo_data42: u8,
    pub face_geo_data43: u8,
    pub face_geo_data44: u8,
    pub face_geo_data45: u8,
    pub face_geo_data46: u8,
    pub face_geo_data47: u8,
    pub face_geo_data48: u8,
    pub face_geo_data49: u8,
    pub face_geo_data50: u8,
    pub face_geo_data51: u8,
    pub face_geo_data52: u8,
    pub face_geo_data53: u8,
    pub face_geo_data54: u8,
    pub face_geo_data55: u8,
    pub face_geo_data56: u8,
    pub face_geo_data57: u8,
    pub face_geo_data58: u8,
    pub face_geo_data59: u8,
    pub face_geo_data60: u8,
    pub face_tex_data00: u8,
    pub face_tex_data01: u8,
    pub face_tex_data02: u8,
    pub face_tex_data03: u8,
    pub face_tex_data04: u8,
    pub face_tex_data05: u8,
    pub face_tex_data06: u8,
    pub face_tex_data07: u8,
    pub face_tex_data08: u8,
    pub face_tex_data09: u8,
    pub face_tex_data10: u8,
    pub face_tex_data11: u8,
    pub face_tex_data12: u8,
    pub face_tex_data13: u8,
    pub face_tex_data14: u8,
    pub face_tex_data15: u8,
    pub face_tex_data16: u8,
    pub face_tex_data17: u8,
    pub face_tex_data18: u8,
    pub face_tex_data19: u8,
    pub face_tex_data20: u8,
    pub face_tex_data21: u8,
    pub face_tex_data22: u8,
    pub face_tex_data23: u8,
    pub face_tex_data24: u8,
    pub face_tex_data25: u8,
    pub face_tex_data26: u8,
    pub face_tex_data27: u8,
    pub face_tex_data28: u8,
    pub face_tex_data29: u8,
    pub face_tex_data30: u8,
    pub face_tex_data31: u8,
    pub face_tex_data32: u8,
    pub face_tex_data33: u8,
    pub face_tex_data34: u8,
    pub face_tex_data35: u8,
    pub face_geo_asym_data00: u8,
    pub face_geo_asym_data01: u8,
    pub face_geo_asym_data02: u8,
    pub face_geo_asym_data03: u8,
    pub face_geo_asym_data04: u8,
    pub face_geo_asym_data05: u8,
    pub face_geo_asym_data06: u8,
    pub face_geo_asym_data07: u8,
    pub face_geo_asym_data08: u8,
    pub face_geo_asym_data09: u8,
    pub face_geo_asym_data10: u8,
    pub face_geo_asym_data11: u8,
    pub face_geo_asym_data12: u8,
    pub face_geo_asym_data13: u8,
    pub face_geo_asym_data14: u8,
    pub face_geo_asym_data15: u8,
    pub face_geo_asym_data16: u8,
    pub face_geo_asym_data17: u8,
    pub face_geo_asym_data18: u8,
    pub face_geo_asym_data19: u8,
    pub face_geo_asym_data20: u8,
    pub face_geo_asym_data21: u8,
    pub face_geo_asym_data22: u8,
    pub face_geo_asym_data23: u8,
    pub face_geo_asym_data24: u8,
    pub face_geo_asym_data25: u8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct FaceRangeParam {
    pub face_parts_id: f32,
    pub skin_color_r: f32,
    pub skin_color_g: f32,
    pub skin_color_b: f32,
    pub skin_gloss: f32,
    pub skin_pores: f32,
    pub face_beard: f32,
    pub face_around_eye: f32,
    pub face_around_eye_color_r: f32,
    pub face_around_eye_color_g: f32,
    pub face_around_eye_color_b: f32,
    pub face_cheek: f32,
    pub face_cheek_color_r: f32,
    pub face_cheek_color_g: f32,
    pub face_cheek_color_b: f32,
    pub face_eye_line: f32,
    pub face_eye_line_color_r: f32,
    pub face_eye_line_color_g: f32,
    pub face_eye_line_color_b: f32,
    pub face_eye_shadow_down: f32,
    pub face_eye_shadow_down_color_r: f32,
    pub face_eye_shadow_down_color_g: f32,
    pub face_eye_shadow_down_color_b: f32,
    pub face_eye_shadow_up: f32,
    pub face_eye_shadow_up_color_r: f32,
    pub face_eye_shadow_up_color_g: f32,
    pub face_eye_shadow_up_color_b: f32,
    pub face_lip: f32,
    pub face_lip_color_r: f32,
    pub face_lip_color_g: f32,
    pub face_lip_color_b: f32,
    pub body_hair: f32,
    pub body_hair_color_r: f32,
    pub body_hair_color_g: f32,
    pub body_hair_color_b: f32,
    pub eye_parts_id: f32,
    pub eye_r_iris_color_r: f32,
    pub eye_r_iris_color_g: f32,
    pub eye_r_iris_color_b: f32,
    pub eye_r_iris_scale: f32,
    pub eye_r_cataract: f32,
    pub eye_r_cataract_color_r: f32,
    pub eye_r_cataract_color_g: f32,
    pub eye_r_cataract_color_b: f32,
    pub eye_r_sclera_color_r: f32,
    pub eye_r_sclera_color_g: f32,
    pub eye_r_sclera_color_b: f32,
    pub eye_r_iris_distance: f32,
    pub eye_l_iris_color_r: f32,
    pub eye_l_iris_color_g: f32,
    pub eye_l_iris_color_b: f32,
    pub eye_l_iris_scale: f32,
    pub eye_l_cataract: f32,
    pub eye_l_cataract_color_r: f32,
    pub eye_l_cataract_color_g: f32,
    pub eye_l_cataract_color_b: f32,
    pub eye_l_sclera_color_r: f32,
    pub eye_l_sclera_color_g: f32,
    pub eye_l_sclera_color_b: f32,
    pub eye_l_iris_distance: f32,
    pub hair_parts_id: f32,
    pub hair_color_r: f32,
    pub hair_color_g: f32,
    pub hair_color_b: f32,
    pub hair_shininess: f32,
    pub hair_root_black: f32,
    pub hair_white_density: f32,
    pub beard_parts_id: f32,
    pub beard_color_r: f32,
    pub beard_color_g: f32,
    pub beard_color_b: f32,
    pub beard_shininess: f32,
    pub beard_root_black: f32,
    pub beard_white_density: f32,
    pub eyebrow_parts_id: f32,
    pub eyebrow_color_r: f32,
    pub eyebrow_color_g: f32,
    pub eyebrow_color_b: f32,
    pub eyebrow_shininess: f32,
    pub eyebrow_root_black: f32,
    pub eyebrow_white_density: f32,
    pub eyelash_parts_id: f32,
    pub eyelash_color_r: f32,
    pub eyelash_color_g: f32,
    pub eyelash_color_b: f32,
    pub accessories_parts_id: f32,
    pub accessories_color_r: f32,
    pub accessories_color_g: f32,
    pub accessories_color_b: f32,
    pub decal_parts_id: f32,
    pub decal_pos_x: f32,
    pub decal_pos_y: f32,
    pub decal_angle: f32,
    pub decal_scale: f32,
    pub decal_color_r: f32,
    pub decal_color_g: f32,
    pub decal_color_b: f32,
    pub decal_gloss: f32,
    pub decal_mirror: f32,
    pub chr_body_scale_head: f32,
    pub chr_body_scale_breast: f32,
    pub chr_body_scale_abdomen: f32,
    pub chr_body_scale_arm: f32,
    pub chr_body_scale_leg: f32,
    pub age: f32,
    pub gender: f32,
    pub caricature_geometry: f32,
    pub caricature_texture: f32,
    pub face_geo_data00: f32,
    pub face_geo_data01: f32,
    pub face_geo_data02: f32,
    pub face_geo_data03: f32,
    pub face_geo_data04: f32,
    pub face_geo_data05: f32,
    pub face_geo_data06: f32,
    pub face_geo_data07: f32,
    pub face_geo_data08: f32,
    pub face_geo_data09: f32,
    pub face_geo_data10: f32,
    pub face_geo_data11: f32,
    pub face_geo_data12: f32,
    pub face_geo_data13: f32,
    pub face_geo_data14: f32,
    pub face_geo_data15: f32,
    pub face_geo_data16: f32,
    pub face_geo_data17: f32,
    pub face_geo_data18: f32,
    pub face_geo_data19: f32,
    pub face_geo_data20: f32,
    pub face_geo_data21: f32,
    pub face_geo_data22: f32,
    pub face_geo_data23: f32,
    pub face_geo_data24: f32,
    pub face_geo_data25: f32,
    pub face_geo_data26: f32,
    pub face_geo_data27: f32,
    pub face_geo_data28: f32,
    pub face_geo_data29: f32,
    pub face_geo_data30: f32,
    pub face_geo_data31: f32,
    pub face_geo_data32: f32,
    pub face_geo_data33: f32,
    pub face_geo_data34: f32,
    pub face_geo_data35: f32,
    pub face_geo_data36: f32,
    pub face_geo_data37: f32,
    pub face_geo_data38: f32,
    pub face_geo_data39: f32,
    pub face_geo_data40: f32,
    pub face_geo_data41: f32,
    pub face_geo_data42: f32,
    pub face_geo_data43: f32,
    pub face_geo_data44: f32,
    pub face_geo_data45: f32,
    pub face_geo_data46: f32,
    pub face_geo_data47: f32,
    pub face_geo_data48: f32,
    pub face_geo_data49: f32,
    pub face_geo_data50: f32,
    pub face_geo_data51: f32,
    pub face_geo_data52: f32,
    pub face_geo_data53: f32,
    pub face_geo_data54: f32,
    pub face_geo_data55: f32,
    pub face_geo_data56: f32,
    pub face_geo_data57: f32,
    pub face_geo_data58: f32,
    pub face_geo_data59: f32,
    pub face_geo_data60: f32,
    pub face_tex_data00: f32,
    pub face_tex_data01: f32,
    pub face_tex_data02: f32,
    pub face_tex_data03: f32,
    pub face_tex_data04: f32,
    pub face_tex_data05: f32,
    pub face_tex_data06: f32,
    pub face_tex_data07: f32,
    pub face_tex_data08: f32,
    pub face_tex_data09: f32,
    pub face_tex_data10: f32,
    pub face_tex_data11: f32,
    pub face_tex_data12: f32,
    pub face_tex_data13: f32,
    pub face_tex_data14: f32,
    pub face_tex_data15: f32,
    pub face_tex_data16: f32,
    pub face_tex_data17: f32,
    pub face_tex_data18: f32,
    pub face_tex_data19: f32,
    pub face_tex_data20: f32,
    pub face_tex_data21: f32,
    pub face_tex_data22: f32,
    pub face_tex_data23: f32,
    pub face_tex_data24: f32,
    pub face_tex_data25: f32,
    pub face_tex_data26: f32,
    pub face_tex_data27: f32,
    pub face_tex_data28: f32,
    pub face_tex_data29: f32,
    pub face_tex_data30: f32,
    pub face_tex_data31: f32,
    pub face_tex_data32: f32,
    pub face_tex_data33: f32,
    pub face_tex_data34: f32,
    pub face_tex_data35: f32,
    pub burn_scar: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct FeTextEffectParam {
    pub res_id: i16,
    pub pad1: [u8; 2],
    pub text_id: i32,
    pub se_id: i32,
    pub pad2: [u8; 19],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct FootSfxParam {
    pub sfx_id_00: u32,
    pub sfx_id_01: u32,
    pub sfx_id_02: u32,
    pub sfx_id_03: u32,
    pub sfx_id_04: u32,
    pub sfx_id_05: u32,
    pub sfx_id_06: u32,
    pub sfx_id_07: u32,
    pub sfx_id_08: u32,
    pub sfx_id_09: u32,
    pub sfx_id_10: u32,
    pub sfx_id_11: u32,
    pub sfx_id_12: u32,
    pub sfx_id_13: u32,
    pub sfx_id_14: u32,
    pub sfx_id_15: u32,
    pub sfx_id_16: u32,
    pub sfx_id_17: u32,
    pub sfx_id_18: u32,
    pub sfx_id_19: u32,
    pub sfx_id_20: u32,
    pub sfx_id_21: u32,
    pub sfx_id_22: u32,
    pub sfx_id_23: u32,
    pub sfx_id_24: u32,
    pub sfx_id_25: u32,
    pub sfx_id_26: u32,
    pub sfx_id_27: u32,
    pub sfx_id_28: u32,
    pub sfx_id_29: u32,
    pub sfx_id_30: u32,
    pub sfx_id_31: u32,
    pub sfx_id_32: u32,
    pub sfx_id_33: u32,
    pub sfx_id_34: u32,
    pub sfx_id_35: u32,
    pub sfx_id_36: u32,
    pub sfx_id_37: u32,
    pub sfx_id_38: u32,
    pub sfx_id_39: u32,
    pub sfx_id_40: u32,
    pub sfx_id_41: u32,
    pub sfx_id_42: u32,
    pub sfx_id_43: u32,
    pub sfx_id_44: u32,
    pub sfx_id_45: u32,
    pub sfx_id_46: u32,
    pub sfx_id_47: u32,
    pub sfx_id_48: u32,
    pub sfx_id_49: u32,
    pub sfx_id_50: u32,
    pub sfx_id_51: u32,
    pub sfx_id_52: u32,
    pub sfx_id_53: u32,
    pub sfx_id_54: u32,
    pub sfx_id_55: u32,
    pub sfx_id_56: u32,
    pub sfx_id_57: u32,
    pub sfx_id_58: u32,
    pub sfx_id_59: u32,
    pub sfx_id_60: u32,
    pub sfx_id_61: u32,
    pub sfx_id_62: u32,
    pub sfx_id_63: u32,
    pub sfx_id_64: u32,
    pub sfx_id_65: u32,
    pub sfx_id_66: u32,
    pub sfx_id_67: u32,
    pub sfx_id_68: u32,
    pub sfx_id_69: u32,
    pub sfx_id_70: u32,
    pub sfx_id_71: u32,
    pub sfx_id_72: u32,
    pub sfx_id_73: u32,
    pub sfx_id_74: u32,
    pub sfx_id_75: u32,
    pub sfx_id_76: u32,
    pub sfx_id_77: u32,
    pub sfx_id_78: u32,
    pub sfx_id_79: u32,
    pub sfx_id_80: u32,
    pub sfx_id_81: u32,
    pub sfx_id_82: u32,
    pub sfx_id_83: u32,
    pub sfx_id_84: u32,
    pub sfx_id_85: u32,
    pub sfx_id_86: u32,
    pub sfx_id_87: u32,
    pub sfx_id_88: u32,
    pub sfx_id_89: u32,
    pub sfx_id_90: u32,
    pub sfx_id_91: u32,
    pub sfx_id_92: u32,
    pub sfx_id_93: u32,
    pub sfx_id_94: u32,
    pub sfx_id_95: u32,
    pub sfx_id_96: u32,
    pub sfx_id_97: u32,
    pub sfx_id_98: u32,
    pub sfx_id_99: u32,
    pub sfx_id_100: u32,
    pub sfx_id_101: u32,
    pub sfx_id_102: u32,
    pub sfx_id_103: u32,
    pub sfx_id_104: u32,
    pub sfx_id_105: u32,
    pub sfx_id_106: u32,
    pub sfx_id_107: u32,
    pub sfx_id_108: u32,
    pub sfx_id_109: u32,
    pub sfx_id_110: u32,
    pub sfx_id_111: u32,
    pub sfx_id_112: u32,
    pub sfx_id_113: u32,
    pub sfx_id_114: u32,
    pub sfx_id_115: u32,
    pub sfx_id_116: u32,
    pub sfx_id_117: u32,
    pub sfx_id_118: u32,
    pub sfx_id_119: u32,
    pub sfx_id_120: u32,
    pub sfx_id_121: u32,
    pub sfx_id_122: u32,
    pub sfx_id_123: u32,
    pub sfx_id_124: u32,
    pub sfx_id_125: u32,
    pub sfx_id_126: u32,
    pub sfx_id_127: u32,
    pub sfx_id_128: u32,
    pub sfx_id_129: u32,
    pub sfx_id_130: u32,
    pub sfx_id_131: u32,
    pub sfx_id_132: u32,
    pub sfx_id_133: u32,
    pub sfx_id_134: u32,
    pub sfx_id_135: u32,
    pub sfx_id_136: u32,
    pub sfx_id_137: u32,
    pub sfx_id_138: u32,
    pub sfx_id_139: u32,
    pub sfx_id_140: u32,
    pub sfx_id_141: u32,
    pub sfx_id_142: u32,
    pub sfx_id_143: u32,
    pub sfx_id_144: u32,
    pub sfx_id_145: u32,
    pub sfx_id_146: u32,
    pub sfx_id_147: u32,
    pub sfx_id_148: u32,
    pub sfx_id_149: u32,
    pub sfx_id_150: u32,
    pub sfx_id_151: u32,
    pub sfx_id_152: u32,
    pub sfx_id_153: u32,
    pub sfx_id_154: u32,
    pub sfx_id_155: u32,
    pub sfx_id_156: u32,
    pub sfx_id_157: u32,
    pub sfx_id_158: u32,
    pub sfx_id_159: u32,
    pub sfx_id_160: u32,
    pub sfx_id_161: u32,
    pub sfx_id_162: u32,
    pub sfx_id_163: u32,
    pub sfx_id_164: u32,
    pub sfx_id_165: u32,
    pub sfx_id_166: u32,
    pub sfx_id_167: u32,
    pub sfx_id_168: u32,
    pub sfx_id_169: u32,
    pub sfx_id_170: u32,
    pub sfx_id_171: u32,
    pub sfx_id_172: u32,
    pub sfx_id_173: u32,
    pub sfx_id_174: u32,
    pub sfx_id_175: u32,
    pub sfx_id_176: u32,
    pub sfx_id_177: u32,
    pub sfx_id_178: u32,
    pub sfx_id_179: u32,
    pub sfx_id_180: u32,
    pub sfx_id_181: u32,
    pub sfx_id_182: u32,
    pub sfx_id_183: u32,
    pub sfx_id_184: u32,
    pub sfx_id_185: u32,
    pub sfx_id_186: u32,
    pub sfx_id_187: u32,
    pub sfx_id_188: u32,
    pub sfx_id_189: u32,
    pub sfx_id_190: u32,
    pub sfx_id_191: u32,
    pub sfx_id_192: u32,
    pub sfx_id_193: u32,
    pub sfx_id_194: u32,
    pub sfx_id_195: u32,
    pub sfx_id_196: u32,
    pub sfx_id_197: u32,
    pub sfx_id_198: u32,
    pub sfx_id_199: u32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GameAreaParam {
    pub disable_param_reserve2: [u8; 3],
    pub bonus_soul_single: u32,
    pub bonus_soul_multi: u32,
    pub humanity_point_count_flag_id_top: u32,
    pub humanity_drop_point1: u16,
    pub humanity_drop_point2: u16,
    pub humanity_drop_point3: u16,
    pub humanity_drop_point4: u16,
    pub humanity_drop_point5: u16,
    pub humanity_drop_point6: u16,
    pub humanity_drop_point7: u16,
    pub humanity_drop_point8: u16,
    pub humanity_drop_point9: u16,
    pub humanity_drop_point10: u16,
    pub solo_break_in_point_min: u32,
    pub solo_break_in_point_max: u32,
    pub defeat_boss_flag_id_for_sign_aim_list: u32,
    pub display_aim_flag_id: u32,
    pub found_boss_flag_id: u32,
    pub found_boss_text_id: i32,
    pub not_find_boss_text_id: i32,
    pub boss_challenge_flag_id: u32,
    pub defeat_boss_flag_id: u32,
    pub boss_pos_x: f32,
    pub boss_pos_y: f32,
    pub boss_pos_z: f32,
    pub boss_map_area_no: u8,
    pub boss_map_block_no: u8,
    pub boss_map_map_no: u8,
    pub reserve: [u8; 9],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GameInfoParam {
    pub title_msg_id: i32,
    pub content_msg_id: i32,
    pub value: i32,
    pub sort_id: i32,
    pub event_id: i32,
    pub pad: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GameSystemCommonParam {
    pub base_toughness_recover_time: f32,
    pub chr_event_trun_by_left90: i32,
    pub chr_event_trun_by_right90: i32,
    pub chr_event_trun_by_left180: i32,
    pub chr_event_trun_by_right180: i32,
    pub chr_event_trun_90_turn_start_angle: i16,
    pub chr_event_trun_180_turn_start_angle: i16,
    pub stealth_atk_damage_rate: f32,
    pub flick_damage_cut_rate_success_gurad: f32,
    pub npc_talk_anim_begin_diff_angle: f32,
    pub npc_talk_anim_end_diff_angle: f32,
    pub sleep_collector_item_action_button_param_id: i32,
    pub allow_use_buddy_item_sfx_interval: f32,
    pub allow_use_buddy_item_sfx_dmy_poly_id: i32,
    pub allow_use_buddy_item_sfx_dmy_poly_id_horse: i32,
    pub allow_use_buddy_item_sfx_id: i32,
    pub on_buddy_summon_in_activate_range_sfx_interval: f32,
    pub on_buddy_summon_in_activate_range_sfx_dmy_poly_id: i32,
    pub on_buddy_summon_in_activate_range_sfx_dmy_poly_id_horse: i32,
    pub on_buddy_summon_in_activate_range_sfx_id: i32,
    pub on_buddy_summon_in_activate_range_sp_effect_id_pc: i32,
    pub on_buddy_summon_in_warn_range_sp_effect_id_pc: i32,
    pub on_buddy_summon_at_buddy_unsummon_sp_effect_id_pc: i32,
    pub on_buddy_summon_in_warn_range_sp_effect_id_buddy: i32,
    pub morning_ingame_hour: u8,
    pub morning_ingame_minute: u8,
    pub morning_ingame_second: u8,
    pub noon_ingame_hour: u8,
    pub noon_ingame_minute: u8,
    pub noon_ingame_second: u8,
    pub night_ingame_hour: u8,
    pub night_ingame_minute: u8,
    pub night_ingame_second: u8,
    pub ai_sight_rate_start_morning_hour: u8,
    pub ai_sight_rate_start_morning_minute: u8,
    pub ai_sight_rate_start_noon_hour: u8,
    pub ai_sight_rate_start_noon_minute: u8,
    pub ai_sight_rate_start_evening_hour: u8,
    pub ai_sight_rate_start_evening_minute: u8,
    pub ai_sight_rate_start_night_hour: u8,
    pub ai_sight_rate_start_night_minute: u8,
    pub ai_sight_rate_start_midnight_hour: u8,
    pub ai_sight_rate_start_midnight_minute: u8,
    pub sa_large_damage_hit_sfx_threshold: u8,
    pub sa_large_damage_hit_sfx_sfx_id: i32,
    pub sign_creatable_dist_from_safe_pos: f32,
    pub guest_resummon_dist: f32,
    pub guest_leaving_message_dist_max: f32,
    pub guest_leaving_message_dist_min: f32,
    pub guest_leave_session_dist: f32,
    pub retry_point_area_radius: f32,
    pub sleep_collector_sp_effect_id: i32,
    pub recover_below_max_hp_completion_notice_sp_effect_id: i32,
    pub estus_flask_recovery_absorption_production_sfx_id_by_hp: i32,
    pub estus_flask_recovery_absorption_production_sfx_id_by_mp: i32,
    pub respawn_special_effect_active_checker_sp_effect_id: i32,
    pub on_buddy_summon_in_activate_range_sp_effect_id_buddy: i32,
    pub estus_flask_recovery_add_estus_time: f32,
    pub defeat_multi_mode_enemy_of_soul_correct_rate_by_host: f32,
    pub defeat_multi_mode_enemy_of_soul_correct_rate_by_team_ghost: f32,
    pub defeat_multi_mode_boss_of_soul_correct_rate_by_host: f32,
    pub defeat_multi_mode_boss_of_soul_correct_rate_by_team_ghost: f32,
    pub enemy_hp_gauge_screen_offset_by_up: u16,
    pub play_region_collect_dist: u16,
    pub enemy_detection_sp_effect_shoot_bullet_dummypoly_id: u16,
    pub big_rune_greater_demon_break_in_goods_num: u16,
    pub big_rune_greater_demon_break_in_goods_id: i32,
    pub ride_jump_region_default_sfx_id: i32,
    pub sa_attack_rate_for_vs_ride_atk: f32,
    pub enemy_sp_effect_id_after_sleep_collector_item_lot: i32,
    pub after_ending_map_uid: i32,
    pub after_ending_return_point_entity_id: u32,
    pub enemy_detection_sp_effect_bullet_id_by_coop_ring_red_hunter: i32,
    pub enemy_detection_sp_effect_bullet_id_by_invade_orb_none: i32,
    pub tutorial_flag_on_access_dist_view: u32,
    pub tutorial_flag_on_access_retry_point: u32,
    pub tutorial_flag_on_get_group_reward: u32,
    pub tutorial_flag_on_enter_ride_jump_region: u32,
    pub tutorial_check_ride_jump_region_expand_range: f32,
    pub retry_point_activated_pc_anim_id: i32,
    pub retry_point_activated_dialog_delay_time: f32,
    pub retry_point_activated_dialog_text_id: i32,
    pub sign_puddle_open_pc_anim_id: i32,
    pub sign_puddle_open_dialog_delay_time: f32,
    pub activity_of_dead_sp_effect_bullet_id: i32,
    pub activity_of_dead_sp_effect_shoot_bullet_dummypoly_id: i32,
    pub activity_of_dead_sp_effect_dead_fade_out_time: f32,
    pub ignor_net_state_sync_time_for_throw: f32,
    pub net_penalty_point_lan_disconnect: u16,
    pub net_penalty_point_profile_signout: u16,
    pub net_penalty_point_reboot: u16,
    pub net_pnalty_point_suspend: u16,
    pub net_penalty_forgive_item_limit_time: f32,
    pub net_penalty_point_threshold: u16,
    pub uncontrolled_move_threshold_time: u16,
    pub enemy_detection_sp_effect_bullet_id_by_npc_enemy: i32,
    pub activity_of_dead_target_search_sp_effect_on_hit_sp_effect: i32,
    pub activity_of_dead_target_search_sp_effect_max_length: f32,
    pub sight_range_lower_promise_rate: f32,
    pub sa_large_damage_hit_sfx_min_damage: i16,
    pub sa_large_damage_hit_sfx_force_damage: i16,
    pub solo_break_in_max_point: u32,
    pub npc_talk_time_out_threshold: f32,
    pub send_play_log_interval_time: f32,
    pub item370_max_sfx_num: u8,
    pub chr_activate_dist_for_leave_pc: u8,
    pub summon_data_coop_matching_level_upper_abs: i16,
    pub summon_data_coop_matching_level_upper_rel: i16,
    pub summon_data_coop_matching_wep_level_mul: i16,
    pub pick_up_berserker_sign_sp_effect_bullet_id: i32,
    pub succeed_berserker_self_killing_effect_id: i32,
    pub maching_level_white_sign_upper_rel: u8,
    pub maching_level_white_sign_upper_abs: u8,
    pub maching_level_red_sign_upper_rel: u8,
    pub maching_level_red_sign_upper_abs: u8,
    pub maching_weapon_level_upper_white_sign_0: u8,
    pub maching_weapon_level_upper_white_sign_1: u8,
    pub maching_weapon_level_upper_white_sign_2: u8,
    pub maching_weapon_level_upper_white_sign_3: u8,
    pub maching_weapon_level_upper_white_sign_4: u8,
    pub maching_weapon_level_upper_white_sign_5: u8,
    pub maching_weapon_level_upper_white_sign_6: u8,
    pub maching_weapon_level_upper_white_sign_7: u8,
    pub maching_weapon_level_upper_white_sign_8: u8,
    pub maching_weapon_level_upper_white_sign_9: u8,
    pub maching_weapon_level_upper_white_sign_10: u8,
    pub maching_weapon_level_upper_red_sign_0: u8,
    pub maching_weapon_level_upper_red_sign_1: u8,
    pub maching_weapon_level_upper_red_sign_2: u8,
    pub maching_weapon_level_upper_red_sign_3: u8,
    pub maching_weapon_level_upper_red_sign_4: u8,
    pub maching_weapon_level_upper_red_sign_5: u8,
    pub maching_weapon_level_upper_red_sign_6: u8,
    pub maching_weapon_level_upper_red_sign_7: u8,
    pub maching_weapon_level_upper_red_sign_8: u8,
    pub maching_weapon_level_upper_red_sign_9: u8,
    pub maching_weapon_level_upper_red_sign_10: u8,
    pub auto_invade_point_generate_dist: u8,
    pub auto_invade_point_cancel_dist: u8,
    pub send_global_event_log_interval_time: f32,
    pub add_solo_break_in_point_white: u16,
    pub add_solo_break_in_point_black: u16,
    pub add_solo_break_in_point_force_join: u16,
    pub add_solo_break_in_point_visitor_guardian: u16,
    pub add_solo_break_in_point_visitor_red_hunter: u16,
    pub invincible_timer_for_net_pc_init_sync: u8,
    pub invincible_timer_for_net_pc: u8,
    pub red_hunter_host_boss_area_get_soul_rate: f32,
    pub ghost_footprint_decal_param_id: i32,
    pub leave_around_host_warning_time: f32,
    pub host_mode_cost_item_id: i32,
    pub a_ijump_decelerate_param: f32,
    pub buddy_disappear_delay_sec: f32,
    pub a_ijump_anim_ymove_correct_rate_on_jump_off: f32,
    pub stealth_system_sight_rate_not_in_stealth_rigid_not_sight_hide_stealth_mode: f32,
    pub stealth_system_sight_rate_not_in_stealth_rigid_sight_hide_not_stealth_mode: f32,
    pub stealth_system_sight_rate_not_in_stealth_rigid_sight_hide_stealth_mode: f32,
    pub stealth_system_sight_rate_in_stealth_rigid_not_sight_hide_not_stealth_mode: f32,
    pub stealth_system_sight_rate_in_stealth_rigid_not_sight_hide_stealth_mode: f32,
    pub stealth_system_sight_rate_in_stealth_rigid_sight_hide_not_stealth_mode: f32,
    pub stealth_system_sight_rate_in_stealth_rigid_sight_hide_stealth_mode: f32,
    pub msb_event_geom_treasure_info_action_button_param_id_corpse: i32,
    pub msb_event_geom_treasure_info_item_get_anim_id_corpse: i32,
    pub msb_event_geom_treasure_info_action_button_param_id_box: i32,
    pub msb_event_geom_treasure_info_item_get_anim_id_box: i32,
    pub msb_event_geom_treasure_info_action_button_param_id_shine: i32,
    pub msb_event_geom_treasure_info_item_get_anim_id_shine: i32,
    pub sign_puddle_asset_id: i32,
    pub sign_puddle_appear_dmypoly_id0: i32,
    pub sign_puddle_appear_dmypoly_id1: i32,
    pub sign_puddle_appear_dmypoly_id2: i32,
    pub sign_puddle_appear_dmypoly_id3: i32,
    pub fall_damage_rate_for_ride_pc: f32,
    pub fall_damage_rate_for_ride_npc: f32,
    pub old_monk_of_yellow_create_sign_sp_effect_id: i32,
    pub straggler_activate_dist: f32,
    pub sp_effect_id_enable_use_item_straggler_activate: i32,
    pub sp_effect_id_straggler_wake_up: i32,
    pub sp_effect_id_straggler_target: i32,
    pub sp_effect_id_straggler_oppose: i32,
    pub buddy_warp_trigger_time_ray_blocked: f32,
    pub buddy_warp_trigger_dist_to_player: f32,
    pub buddy_warp_threshold_time_path_stacked: f32,
    pub buddy_warp_threshold_range_path_stacked: f32,
    pub ai_sight_rate_morning: f32,
    pub ai_sight_rate_noon_a: f32,
    pub buddy_pass_through_trigger_time: f32,
    pub ai_sight_rate_evening: f32,
    pub ai_sight_rate_night: f32,
    pub ai_sight_rate_midnight_a: f32,
    pub reserve4_2: [u8; 4],
    pub ai_sight_rate_sunloss_light: f32,
    pub ai_sight_rate_sunloss_dark: f32,
    pub ai_sight_rate_sunloss_very_dark: f32,
    pub stealth_system_sight_angle_reduce_rate_not_in_stealth_rigid_not_sight_hide_stealth_mode:
        f32,
    pub stealth_system_sight_angle_reduce_rate_not_in_stealth_rigid_sight_hide_not_stealth_mode:
        f32,
    pub stealth_system_sight_angle_reduce_rate_not_in_stealth_rigid_sight_hide_stealth_mode: f32,
    pub stealth_system_sight_angle_reduce_rate_in_stealth_rigid_not_sight_hide_not_stealth_mode:
        f32,
    pub stealth_system_sight_angle_reduce_rate_in_stealth_rigid_not_sight_hide_stealth_mode: f32,
    pub stealth_system_sight_angle_reduce_rate_in_stealth_rigid_sight_hide_not_stealth_mode: f32,
    pub stealth_system_sight_angle_reduce_rate_in_stealth_rigid_sight_hide_stealth_mode: f32,
    pub weather_lot_condition_start_morning_hour: u8,
    pub weather_lot_condition_start_morning_minute: u8,
    pub weather_lot_condition_start_day_hour: u8,
    pub weather_lot_condition_start_day_minute: u8,
    pub weather_lot_condition_start_evening_hour: u8,
    pub weather_lot_condition_start_evening_minute: u8,
    pub weather_lot_condition_start_night_hour: u8,
    pub weather_lot_condition_start_night_minute: u8,
    pub weather_lot_condition_start_day_break_hour: u8,
    pub weather_lot_condition_start_day_break_minute: u8,
    pub weather_lot_condition_reserved: [u8; 2],
    pub pclight_scale_change_start_hour: u8,
    pub pclight_scale_change_start_minute: u8,
    pub pclight_scale_change_end_hour: u8,
    pub pclight_scale_change_end_minute: u8,
    pub pclight_scale_by_timezone: f32,
    pub big_rune_greater_demon_summon_buddy_special_effect_id_buddy: i32,
    pub big_rune_greater_demon_summon_buddy_special_effect_id_pc: i32,
    pub home_bonfire_param_id: i32,
    pub maching_weapon_level_upper_white_sign_11: u8,
    pub maching_weapon_level_upper_white_sign_12: u8,
    pub maching_weapon_level_upper_white_sign_13: u8,
    pub maching_weapon_level_upper_white_sign_14: u8,
    pub maching_weapon_level_upper_white_sign_15: u8,
    pub maching_weapon_level_upper_white_sign_16: u8,
    pub maching_weapon_level_upper_white_sign_17: u8,
    pub maching_weapon_level_upper_white_sign_18: u8,
    pub maching_weapon_level_upper_white_sign_19: u8,
    pub maching_weapon_level_upper_white_sign_20: u8,
    pub maching_weapon_level_upper_white_sign_21: u8,
    pub maching_weapon_level_upper_white_sign_22: u8,
    pub maching_weapon_level_upper_white_sign_23: u8,
    pub maching_weapon_level_upper_white_sign_24: u8,
    pub maching_weapon_level_upper_white_sign_25: u8,
    pub maching_weapon_level_upper_red_sign_11: u8,
    pub maching_weapon_level_upper_red_sign_12: u8,
    pub maching_weapon_level_upper_red_sign_13: u8,
    pub maching_weapon_level_upper_red_sign_14: u8,
    pub maching_weapon_level_upper_red_sign_15: u8,
    pub maching_weapon_level_upper_red_sign_16: u8,
    pub maching_weapon_level_upper_red_sign_17: u8,
    pub maching_weapon_level_upper_red_sign_18: u8,
    pub maching_weapon_level_upper_red_sign_19: u8,
    pub maching_weapon_level_upper_red_sign_20: u8,
    pub maching_weapon_level_upper_red_sign_21: u8,
    pub maching_weapon_level_upper_red_sign_22: u8,
    pub maching_weapon_level_upper_red_sign_23: u8,
    pub maching_weapon_level_upper_red_sign_24: u8,
    pub maching_weapon_level_upper_red_sign_25: u8,
    pub menu_timezone_start_morning_hour: u8,
    pub menu_timezone_start_morning_minute: u8,
    pub menu_timezone_start_day1_hour: u8,
    pub menu_timezone_start_day1_minute: u8,
    pub menu_timezone_start_day2_hour: u8,
    pub menu_timezone_start_day2_minute: u8,
    pub menu_timezone_start_evening_hour: u8,
    pub menu_timezone_start_evening_minute: u8,
    pub menu_timezone_start_night_hour: u8,
    pub menu_timezone_start_night_minute: u8,
    pub menu_timezone_start_midnight_hour: u8,
    pub menu_timezone_start_midnight_minute: u8,
    pub remote_player_threat_lv_notify_threat_lv: u16,
    pub remote_player_threat_lv_notify_notify_dist: f32,
    pub remote_player_threat_lv_notify_end_notify_dist: f32,
    pub world_map_point_discovery_expand_range: f32,
    pub world_map_point_reentry_expand_range: f32,
    pub remote_player_threat_lv_notify_notify_time: u16,
    pub break_in_a_rebreak_in_goods_num: u16,
    pub break_in_a_rebreak_in_goods_id: i32,
    pub ride_jumpoff_sfx_id: i32,
    pub ride_jumpoff_sfx_height_offset: f32,
    pub ride_jumpoff_sp_effect_id: i32,
    pub ride_jumpoff_sp_effect_id_pc: i32,
    pub unlock_exchange_menu_event_flag_id: u32,
    pub unlock_message_menu_event_flag_id: u32,
    pub break_in_once_a_rebreak_in_goods_num: u16,
    pub break_in_b_rebreak_in_goods_num: u16,
    pub break_in_once_a_rebreak_in_goods_id: i32,
    pub break_in_b_rebreak_in_goods_id: i32,
    pub action_button_input_cancel_time: f32,
    pub block_clear_bonus_delay_time: f32,
    pub bonfire_check_enemy_range: f32,
    pub reserved_124: [u8; 48],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_AAQuality {
    pub enabled: u8,
    pub force_fxaa2: u8,
    pub dmy: [u8; 2],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_DecalQuality {
    pub enabled: u8,
    pub dmy: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_DOFQuality {
    pub enabled: u8,
    pub dmy: [u8; 3],
    pub force_hi_reso_blur: i32,
    pub max_blur_level: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_EffectQuality {
    pub soft_particle_enabled: u8,
    pub glow_enabled: u8,
    pub distortion_enable: u8,
    pub cs_up_scale_enabled_type: u8,
    pub f_num_once_emits_scale: f32,
    pub f_emit_span_scale: f32,
    pub f_lod_distance1_scale: f32,
    pub f_lod_distance2_scale: f32,
    pub f_lod_distance3_scale: f32,
    pub f_lod_distance4_scale: f32,
    pub f_scale_render_distance_scale: f32,
    pub dmy: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_LightingQuality {
    pub local_light_dist_factor: f32,
    pub local_light_shadow_enabled: u8,
    pub forward_pass_lighting_enabled: u8,
    pub local_light_shadow_spec_level_max: u8,
    pub dmy: [u8; 1],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_MotionBlurQuality {
    pub enabled: u8,
    pub omb_enabled: u8,
    pub force_scale_velocity_buffer: u8,
    pub cheap_filter_mode: u8,
    pub sample_count_bias: i32,
    pub recurrence_count_bias: i32,
    pub blur_max_length_scale: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_ReflectionQuality {
    pub enabled: u8,
    pub local_light_enabled: u8,
    pub local_light_force_enabled: u8,
    pub dmy: [u8; 1],
    pub resolution_divider: u32,
    pub ssr_enabled: u8,
    pub ssr_gaussian_blur_enabled: u8,
    pub dmy2: [u8; 2],
    pub ssr_depth_reject_threshold_scale: f32,
    pub ssr_ray_trace_step_scale: f32,
    pub ssr_fade_to_viewer_bias: f32,
    pub ssr_fresnel_reject_bias: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_ShaderQuality {
    pub sss_enabled: u8,
    pub tessellation_enabled: u8,
    pub high_precision_normal_enabled: u8,
    pub dmy: [u8; 1],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_ShadowQuality {
    pub enabled: u8,
    pub max_filter_level: u8,
    pub dmy: [u8; 2],
    pub texture_size_scaler: u32,
    pub texture_size_divider: u32,
    pub texture_min_size: u32,
    pub texture_max_size: u32,
    pub blur_count_bias: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_SSAOQuality {
    pub enabled: u8,
    pub cs_reproj_enabled_type: u8,
    pub cs_up_scale_enabled_type: u8,
    pub cs_use_normal_enabled_type: u8,
    pub dmy: [u8; 1],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_TextureFilterQuality {
    pub filter: u8,
    pub dmy: [u8; 3],
    pub max_aniso_level: u32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_VolumetricEffectQuality {
    pub fog_enabled: u8,
    pub fog_shadow_enabled: u8,
    pub dmy: [u8; 2],
    pub fog_shadow_sample_count_bias: i32,
    pub fog_local_light_dist_scale: f32,
    pub fog_volue_size_scaler: u32,
    pub fog_volue_size_divider: u32,
    pub fog_volume_depth_scaler: u32,
    pub fog_volume_depth_divider: u32,
    pub fog_volume_enabled: u8,
    pub fog_volume_up_scale_type: u8,
    pub fog_volume_edge_correction_level: u8,
    pub fog_volume_ray_marcing_sample_count_offset: i8,
    pub fog_volume_shadow_enabled: u8,
    pub fog_volume_force_shadowing: u8,
    pub fog_volume_resolution: u8,
    pub pad2: [u8; 1],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct Gconfig_WaterQuality {
    pub interaction_enabled: u8,
    pub dmy: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GestureParam {
    pub disable_param_reserve2: [u8; 3],
    pub item_id: i32,
    pub msg_anim_id: i32,
    pub pad1: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GparamGridRegionInfo {
    pub gparam_grid_region_id: u32,
    pub reserve: [u8; 28],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GparamRefSettingsParam {
    pub disable_param_reserve2: [u8; 3],
    pub ref_target_map_id: i32,
    pub reserve: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GraphicsCommonParam {
    pub hit_bullet_decal_offset_hit_ins: f32,
    pub reserved02: [u8; 8],
    pub chara_wet_decal_fade_range: f32,
    pub reserved04: [u8; 240],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GraphicsConfig {
    pub m_texture_filter_quality: u8,
    pub m_aa_quality: u8,
    pub m_ssao_quality: u8,
    pub m_dof_quality: u8,
    pub m_motion_blur_quality: u8,
    pub m_shadow_quality: u8,
    pub m_lighting_quality: u8,
    pub m_effect_quality: u8,
    pub m_decal_quality: u8,
    pub m_reflection_quality: u8,
    pub m_water_quality: u8,
    pub m_shader_quality: u8,
    pub m_volumetric_effect_quality: u8,
    pub m_dummy: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GrassLodRangeParam {
    pub l_od0_range: f32,
    pub l_od0_play: f32,
    pub l_od1_range: f32,
    pub l_od1_play: f32,
    pub l_od2_range: f32,
    pub l_od2_play: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GrassMapSettings {
    pub grass_type0: u32,
    pub grass_type1: u32,
    pub grass_type2: u32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct GrassTypeParam {
    pub lod_range: u16,
    pub lod0_cluster_type: u8,
    pub lod1_cluster_type: u8,
    pub lod2_cluster_type: u8,
    pub pad0: [u8; 2],
    pub distribution_type: u8,
    pub base_density: f32,
    pub model0_name: [u16; 16],
    pub flat_texture_name: [u16; 32],
    pub billboard_texture_name: [u16; 32],
    pub normal_influence: u8,
    pub inclination_max: u8,
    pub inclination_jitter: u8,
    pub scale_base_min: u8,
    pub scale_base_max: u8,
    pub scale_height_min: u8,
    pub scale_height_max: u8,
    pub color_shade1_r: u8,
    pub color_shade1_g: u8,
    pub color_shade1_b: u8,
    pub color_shade2_r: u8,
    pub color_shade2_g: u8,
    pub color_shade2_b: u8,
    pub flat_split_type: u8,
    pub flat_blade_count: u8,
    pub flat_slant: i8,
    pub flat_radius: f32,
    pub cast_shadow: u8,
    pub wind_amplitude: u8,
    pub pad1: [u8; 1],
    pub wind_cycle: u8,
    pub orientation_angle: f32,
    pub orientation_range: f32,
    pub spacing: f32,
    pub dithering: u8,
    pub pad: [u8; 3],
    pub simple_model_name: [u16; 16],
    pub model1_name: [u16; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct HitEffectSeParam {
    pub iron_slash_s: i32,
    pub iron_slash_l: i32,
    pub iron_slash_ll: i32,
    pub iron_thrust_s: i32,
    pub iron_thrust_l: i32,
    pub iron_thrust_ll: i32,
    pub iron_blow_s: i32,
    pub iron_blow_l: i32,
    pub iron_blow_ll: i32,
    pub fire_slash_s: i32,
    pub fire_slash_l: i32,
    pub fire_slash_ll: i32,
    pub fire_thrust_s: i32,
    pub fire_thrust_l: i32,
    pub fire_thrust_ll: i32,
    pub fire_blow_s: i32,
    pub fire_blow_l: i32,
    pub fire_blow_ll: i32,
    pub wood_slash_s: i32,
    pub wood_slash_l: i32,
    pub wood_slash_ll: i32,
    pub wood_thrust_s: i32,
    pub wood_thrust_l: i32,
    pub wood_thrust_ll: i32,
    pub wood_blow_s: i32,
    pub wood_blow_l: i32,
    pub wood_blow_ll: i32,
    pub body_slash_s: i32,
    pub body_slash_l: i32,
    pub body_slash_ll: i32,
    pub body_thrust_s: i32,
    pub body_thrust_l: i32,
    pub body_thrust_ll: i32,
    pub body_blow_s: i32,
    pub body_blow_l: i32,
    pub body_blow_ll: i32,
    pub eclipse_slash_s: i32,
    pub eclipse_slash_l: i32,
    pub eclipse_slash_ll: i32,
    pub eclipse_thrust_s: i32,
    pub eclipse_thrust_l: i32,
    pub eclipse_thrust_ll: i32,
    pub eclipse_blow_s: i32,
    pub eclipse_blow_l: i32,
    pub eclipse_blow_ll: i32,
    pub energy_slash_s: i32,
    pub energy_slash_l: i32,
    pub energy_slash_ll: i32,
    pub energy_thrust_s: i32,
    pub energy_thrust_l: i32,
    pub energy_thrust_ll: i32,
    pub energy_blow_s: i32,
    pub energy_blow_l: i32,
    pub energy_blow_ll: i32,
    pub none_slash_s: i32,
    pub none_slash_l: i32,
    pub none_slash_ll: i32,
    pub none_thrust_s: i32,
    pub none_thrust_l: i32,
    pub none_thrust_ll: i32,
    pub none_blow_s: i32,
    pub none_blow_l: i32,
    pub none_blow_ll: i32,
    pub dmy1_slash_s: i32,
    pub dmy1_slash_l: i32,
    pub dmy1_slash_ll: i32,
    pub dmy1_thrust_s: i32,
    pub dmy1_thrust_l: i32,
    pub dmy1_thrust_ll: i32,
    pub dmy1_blow_s: i32,
    pub dmy1_blow_l: i32,
    pub dmy1_blow_ll: i32,
    pub dmy2_slash_s: i32,
    pub dmy2_slash_l: i32,
    pub dmy2_slash_ll: i32,
    pub dmy2_thrust_s: i32,
    pub dmy2_thrust_l: i32,
    pub dmy2_thrust_ll: i32,
    pub dmy2_blow_s: i32,
    pub dmy2_blow_l: i32,
    pub dmy2_blow_ll: i32,
    pub dmy3_slash_s: i32,
    pub dmy3_slash_l: i32,
    pub dmy3_slash_ll: i32,
    pub dmy3_thrust_s: i32,
    pub dmy3_thrust_l: i32,
    pub dmy3_thrust_ll: i32,
    pub dmy3_blow_s: i32,
    pub dmy3_blow_l: i32,
    pub dmy3_blow_ll: i32,
    pub maggot_slash_s: i32,
    pub maggot_slash_l: i32,
    pub maggot_slash_ll: i32,
    pub maggot_thrust_s: i32,
    pub maggot_thrust_l: i32,
    pub maggot_thrust_ll: i32,
    pub maggot_blow_s: i32,
    pub maggot_blow_l: i32,
    pub maggot_blow_ll: i32,
    pub wax_slash_s: i32,
    pub wax_slash_l: i32,
    pub wax_slash_ll: i32,
    pub wax_thrust_s: i32,
    pub wax_thrust_l: i32,
    pub wax_thrust_ll: i32,
    pub wax_blow_s: i32,
    pub wax_blow_l: i32,
    pub wax_blow_ll: i32,
    pub fire_flame_slash_s: i32,
    pub fire_flame_slash_l: i32,
    pub fire_flame_slash_ll: i32,
    pub fire_flame_thrust_s: i32,
    pub fire_flame_thrust_l: i32,
    pub fire_flame_thrust_ll: i32,
    pub fire_flame_blow_s: i32,
    pub fire_flame_blow_l: i32,
    pub fire_flame_blow_ll: i32,
    pub eclipse_gas_slash_s: i32,
    pub eclipse_gas_slash_l: i32,
    pub eclipse_gas_slash_ll: i32,
    pub eclipse_gas_thrust_s: i32,
    pub eclipse_gas_thrust_l: i32,
    pub eclipse_gas_thrust_ll: i32,
    pub eclipse_gas_blow_s: i32,
    pub eclipse_gas_blow_l: i32,
    pub eclipse_gas_blow_ll: i32,
    pub energy_strong_slash_s: i32,
    pub energy_strong_slash_l: i32,
    pub energy_strong_slash_ll: i32,
    pub energy_strong_thrust_s: i32,
    pub energy_strong_thrust_l: i32,
    pub energy_strong_thrust_ll: i32,
    pub energy_strong_blow_s: i32,
    pub energy_strong_blow_l: i32,
    pub energy_strong_blow_ll: i32,
    pub reserve: [u8; 100],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct HitEffectSfxConceptParam {
    pub atk_iron_1: i16,
    pub atk_iron_2: i16,
    pub atk_leather_1: i16,
    pub atk_leather_2: i16,
    pub atk_wood_1: i16,
    pub atk_wood_2: i16,
    pub atk_body_1: i16,
    pub atk_body_2: i16,
    pub atk_stone_1: i16,
    pub atk_stone_2: i16,
    pub pad: [u8; 4],
    pub atk_none_1: i16,
    pub atk_none_2: i16,
    pub reserve: [u8; 52],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct HitEffectSfxParam {
    pub slash_normal: i32,
    pub slash_s: i32,
    pub slash_l: i32,
    pub slash_specific1: i32,
    pub slash_specific2: i32,
    pub blow_normal: i32,
    pub blow_s: i32,
    pub blow_l: i32,
    pub blow_specific1: i32,
    pub blow_specific2: i32,
    pub thrust_normal: i32,
    pub thrust_s: i32,
    pub thrust_l: i32,
    pub thrust_specific1: i32,
    pub thrust_specific2: i32,
    pub neutral_normal: i32,
    pub neutral_s: i32,
    pub neutral_l: i32,
    pub neutral_specific1: i32,
    pub neutral_specific2: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct HitMtrlParam {
    pub ai_volume_rate: f32,
    pub sp_effect_id_on_hit0: i32,
    pub sp_effect_id_on_hit1: i32,
    pub hardness_type: u8,
    pub pad2: [u8; 6],
    pub sp_effect_id_on_hit0_clear_count_2: i32,
    pub sp_effect_id_on_hit0_clear_count_3: i32,
    pub sp_effect_id_on_hit0_clear_count_4: i32,
    pub sp_effect_id_on_hit0_clear_count_5: i32,
    pub sp_effect_id_on_hit0_clear_count_6: i32,
    pub sp_effect_id_on_hit0_clear_count_7: i32,
    pub sp_effect_id_on_hit0_clear_count_8: i32,
    pub sp_effect_id_on_hit1_clear_count_2: i32,
    pub sp_effect_id_on_hit1_clear_count_3: i32,
    pub sp_effect_id_on_hit1_clear_count_4: i32,
    pub sp_effect_id_on_hit1_clear_count_5: i32,
    pub sp_effect_id_on_hit1_clear_count_6: i32,
    pub sp_effect_id_on_hit1_clear_count_7: i32,
    pub sp_effect_id_on_hit1_clear_count_8: i32,
    pub replace_mateiral_id_rain: i16,
    pub pad4: [u8; 2],
    pub sp_effect_id_for_wet00: i32,
    pub sp_effect_id_for_wet01: i32,
    pub sp_effect_id_for_wet02: i32,
    pub sp_effect_id_for_wet03: i32,
    pub sp_effect_id_for_wet04: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ItemLotParam {
    pub lot_item_id01: i32,
    pub lot_item_id02: i32,
    pub lot_item_id03: i32,
    pub lot_item_id04: i32,
    pub lot_item_id05: i32,
    pub lot_item_id06: i32,
    pub lot_item_id07: i32,
    pub lot_item_id08: i32,
    pub lot_item_category01: i32,
    pub lot_item_category02: i32,
    pub lot_item_category03: i32,
    pub lot_item_category04: i32,
    pub lot_item_category05: i32,
    pub lot_item_category06: i32,
    pub lot_item_category07: i32,
    pub lot_item_category08: i32,
    pub lot_item_base_point01: u16,
    pub lot_item_base_point02: u16,
    pub lot_item_base_point03: u16,
    pub lot_item_base_point04: u16,
    pub lot_item_base_point05: u16,
    pub lot_item_base_point06: u16,
    pub lot_item_base_point07: u16,
    pub lot_item_base_point08: u16,
    pub cumulate_lot_point01: u16,
    pub cumulate_lot_point02: u16,
    pub cumulate_lot_point03: u16,
    pub cumulate_lot_point04: u16,
    pub cumulate_lot_point05: u16,
    pub cumulate_lot_point06: u16,
    pub cumulate_lot_point07: u16,
    pub cumulate_lot_point08: u16,
    pub get_item_flag_id01: u32,
    pub get_item_flag_id02: u32,
    pub get_item_flag_id03: u32,
    pub get_item_flag_id04: u32,
    pub get_item_flag_id05: u32,
    pub get_item_flag_id06: u32,
    pub get_item_flag_id07: u32,
    pub get_item_flag_id08: u32,
    pub get_item_flag_id: u32,
    pub cumulate_num_flag_id: u32,
    pub cumulate_num_max: u8,
    pub lot_item_rarity: i8,
    pub lot_item_num01: u8,
    pub lot_item_num02: u8,
    pub lot_item_num03: u8,
    pub lot_item_num04: u8,
    pub lot_item_num05: u8,
    pub lot_item_num06: u8,
    pub lot_item_num07: u8,
    pub lot_item_num08: u8,
    #[bitflag(enableLuck01, 0)]
    #[bitflag(enableLuck02, 1)]
    #[bitflag(enableLuck03, 2)]
    #[bitflag(enableLuck04, 3)]
    #[bitflag(enableLuck05, 4)]
    #[bitflag(enableLuck06, 5)]
    #[bitflag(enableLuck07, 6)]
    #[bitflag(enableLuck08, 7)]
    #[bitflag(cumulateReset01, 8)]
    #[bitflag(cumulateReset02, 9)]
    #[bitflag(cumulateReset03, 10)]
    #[bitflag(cumulateReset04, 11)]
    #[bitflag(cumulateReset05, 12)]
    #[bitflag(cumulateReset06, 13)]
    #[bitflag(cumulateReset07, 14)]
    #[bitflag(cumulateReset08, 15)]
    pub bitfield0: u16,
    pub game_clear_offset: i8,
    pub p_ad2: u16,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct KeyAssignMenuItemParam {
    pub text_id: i32,
    pub key: i32,
    pub enable_unassign: u8,
    pub enable_pad_config: u8,
    pub enable_mouse_config: u8,
    pub group: u8,
    pub mapping_text_id: i32,
    pub view_pad: u8,
    pub view_keyboard_mouse: u8,
    pub padding: [u8; 6],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct KeyAssignParam {
    pub pad_key_id: i32,
    pub keyboard_modify_key: i32,
    pub keyboard_key_id: i32,
    pub mouse_modify_key: i32,
    pub mouse_key_id: i32,
    pub reserved: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct KnockBackParam {
    pub damage_min_cont_time: f32,
    pub damage_s_cont_time: f32,
    pub damage_m_cont_time: f32,
    pub damage_l_cont_time: f32,
    pub damage_blow_s_cont_time: f32,
    pub damage_blow_m_cont_time: f32,
    pub damage_strike_cont_time: f32,
    pub damage_uppercut_cont_time: f32,
    pub damage_push_cont_time: f32,
    pub damage_breath_cont_time: f32,
    pub damage_head_shot_cont_time: f32,
    pub guard_s_cont_time: f32,
    pub guard_l_cont_time: f32,
    pub guard_ll_cont_time: f32,
    pub guard_brake_cont_time: f32,
    pub damage_min_dec_time: f32,
    pub damage_s_dec_time: f32,
    pub damage_m_dec_time: f32,
    pub damage_l_dec_time: f32,
    pub damage_blow_s_dec_time: f32,
    pub damage_blow_m_dec_time: f32,
    pub damage_strike_dec_time: f32,
    pub damage_uppercut_dec_time: f32,
    pub damage_push_dec_time: f32,
    pub damage_breath_dec_time: f32,
    pub damage_head_shot_dec_time: f32,
    pub guard_s_dec_time: f32,
    pub guard_l_dec_time: f32,
    pub guard_ll_dec_time: f32,
    pub guard_brake_dec_time: f32,
    pub pad: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct KnowledgeLoadScreenItemParam {
    pub disable_param_reserve2: [u8; 3],
    pub unlock_flag_id: u32,
    pub invalid_flag_id: u32,
    pub msg_id: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct LegacyDistantViewPartsReplaceParam {
    pub target_map_id: i32,
    pub target_event_id: u32,
    pub src_asset_id: i32,
    pub src_asset_parts_no: i32,
    pub dst_asset_id: i32,
    pub dst_asset_parts_no: i32,
    pub src_asset_id_range_min: i32,
    pub src_asset_id_range_max: i32,
    pub dst_asset_id_range_min: i32,
    pub dst_asset_id_range_max: i32,
    pub limited_map_region_id0: i8,
    pub limited_map_region_id1: i8,
    pub limited_map_region_id2: i8,
    pub limited_map_region_id3: i8,
    pub reserve: [u8; 4],
    pub limited_map_region_asset_id: i32,
    pub limited_map_regio_asset_parts_no: i32,
    pub limited_map_regio_asset_id_range_min: i32,
    pub limited_map_regio_asset_id_range_max: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct LoadBalancerDrawDistScaleParam {
    pub lv00: f32,
    pub lv01: f32,
    pub lv02: f32,
    pub lv03: f32,
    pub lv04: f32,
    pub lv05: f32,
    pub lv06: f32,
    pub lv07: f32,
    pub lv08: f32,
    pub lv09: f32,
    pub lv10: f32,
    pub lv11: f32,
    pub lv12: f32,
    pub lv13: f32,
    pub lv14: f32,
    pub lv15: f32,
    pub lv16: f32,
    pub lv17: f32,
    pub lv18: f32,
    pub lv19: f32,
    pub lv20: f32,
    pub reserve: [u8; 44],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct LoadBalancerNewDrawDistScaleParam {
    pub draw_dist_lv_begin: u8,
    pub draw_dist_lv_end: u8,
    pub reserve0: [u8; 2],
    pub draw_dist_scale_begin: f32,
    pub draw_dist_scale_end: f32,
    pub shadw_draw_dist_lv_begin: u8,
    pub shadw_draw_dist_lv_end: u8,
    pub reserve1: [u8; 2],
    pub shadw_draw_dist_scale_begin: f32,
    pub shadw_draw_dist_scale_end: f32,
    pub reserve2: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct LoadBalancerParam {
    pub lower_fps_threshold: f32,
    pub upper_fps_threshold: f32,
    pub lower_fps_continous_count: u32,
    pub upper_fps_continous_count: u32,
    pub down_after_change_sleep: u32,
    pub up_after_change_sleep: u32,
    pub post_process_light_shaft: u8,
    pub post_process_bloom: u8,
    pub post_process_glow: u8,
    pub post_process_aa: u8,
    pub post_process_ssao: u8,
    pub post_process_dof: u8,
    pub post_process_motion_blur: u8,
    pub post_process_motion_blur_iteration: u8,
    pub reserve0: [u8; 1],
    pub shadow_blur: u8,
    pub sfx_particle_half: u8,
    pub sfx_reflection: u8,
    pub sfx_water_interaction: u8,
    pub sfx_glow: u8,
    pub sfx_distortion: u8,
    pub sft_soft_sprite: u8,
    pub sfx_light_shaft: u8,
    pub sfx_scale_render_distance_scale: u8,
    pub dynamic_resolution: u8,
    pub shadow_cascade0_resolution_half: u8,
    pub shadow_cascade1_resolution_half: u8,
    pub chr_wet_disable_player: u8,
    pub chr_wet_disable_remote_player: u8,
    pub chr_wet_disable_enemy: u8,
    pub dynamic_resolution_percentage_min: u8,
    pub dynamic_resolution_percentage_max: u8,
    pub reserve1: [u8; 30],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct LockCamParam {
    pub cam_dist_target: f32,
    pub rot_range_min_x: f32,
    pub lock_rot_xshift_ratio: f32,
    pub chr_org_offset_y: f32,
    pub chr_lock_range_max_radius: f32,
    pub cam_fov_y: f32,
    pub chr_lock_range_max_radius_for_d: f32,
    pub chr_lock_range_max_radius_for_pd: f32,
    pub close_max_height: f32,
    pub close_min_height: f32,
    pub close_ang_range: f32,
    pub close_max_radius: f32,
    pub close_max_radius_for_d: f32,
    pub close_max_radius_for_pd: f32,
    pub bullet_max_radius: f32,
    pub bullet_max_radius_for_d: f32,
    pub bullet_max_radius_for_pd: f32,
    pub bullet_ang_range: f32,
    pub lock_tgt_keep_time: f32,
    pub chr_trans_chase_rate_for_normal: f32,
    pub pad: [u8; 48],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MagicParam {
    pub disable_param_reserve2: [u8; 3],
    pub yes_no_dialog_message_id: i32,
    pub limit_cancel_sp_effect_id: i32,
    pub sort_id: i16,
    pub requirement_luck: u8,
    pub ai_notify_type: u8,
    pub mp: i16,
    pub stamina: i16,
    pub icon_id: i16,
    pub behavior_id: i16,
    pub mtrl_item_id: i16,
    pub replace_magic_id: i16,
    pub max_quantity: i16,
    pub ref_category1: u8,
    pub over_dexterity: u8,
    pub ref_category2: u8,
    pub slot_length: u8,
    pub requirement_intellect: u8,
    pub requirement_faith: u8,
    pub analog_dexterity_min: u8,
    pub analog_dexterity_max: u8,
    pub ez_state_behavior_type: u8,
    pub ref_category3: u8,
    pub sp_effect_category: u8,
    pub ref_type: u8,
    pub opme_menu_type: u8,
    pub ref_category4: u8,
    pub has_sp_effect_type: u16,
    pub replace_category: u8,
    pub use_limit_category: u8,
    #[bitflag(disableParam_NT, 0)]
    #[bitflag(disableParamReserve1, 1)]
    #[bitflag(vowType0, 2)]
    #[bitflag(vowType1, 3)]
    #[bitflag(vowType2, 4)]
    #[bitflag(vowType3, 5)]
    #[bitflag(vowType4, 6)]
    #[bitflag(vowType5, 7)]
    pub bitfield0: u8,
    #[bitflag(vowType6, 0)]
    #[bitflag(vowType7, 1)]
    #[bitflag(enable_multi, 2)]
    #[bitflag(enable_multi_only, 3)]
    #[bitflag(isEnchant, 4)]
    #[bitflag(isShieldEnchant, 5)]
    #[bitflag(enable_live, 6)]
    #[bitflag(enable_gray, 7)]
    pub bitfield1: u8,
    #[bitflag(enable_white, 0)]
    #[bitflag(enable_black, 1)]
    #[bitflag(disableOffline, 2)]
    #[bitflag(castResonanceMagic, 3)]
    #[bitflag(isValidTough_ProtSADmg, 4)]
    #[bitflag(isWarpMagic, 5)]
    #[bitflag(enableRiding, 6)]
    #[bitflag(disableRiding, 7)]
    pub bitfield2: u8,
    #[bitflag(isUseNoAttackRegion, 0)]
    #[bitflag(pad_1, 1)]
    #[bitflag(vowType8, 2)]
    #[bitflag(vowType9, 3)]
    #[bitflag(vowType10, 4)]
    #[bitflag(vowType11, 5)]
    #[bitflag(vowType12, 6)]
    #[bitflag(vowType13, 7)]
    pub bitfield3: u8,
    pub cast_sfx_id: i32,
    pub fire_sfx_id: i32,
    pub effect_sfx_id: i32,
    pub toughness_correct_rate: f32,
    pub replacement_status_type: u8,
    pub replacement_status1: i8,
    pub replacement_status2: i8,
    pub replacement_status3: i8,
    pub replacement_status4: i8,
    pub ref_category5: u8,
    pub consume_sa: i16,
    pub replacement_magic1: i32,
    pub replacement_magic2: i32,
    pub replacement_magic3: i32,
    pub replacement_magic4: i32,
    pub mp_charge: i16,
    pub stamina_charge: i16,
    pub create_limit_group_id: u8,
    pub ref_category6: u8,
    pub sub_category1: u8,
    pub sub_category2: u8,
    pub ref_category7: u8,
    pub ref_category8: u8,
    pub ref_category9: u8,
    pub ref_category10: u8,
    pub ref_id1: i32,
    pub ref_id2: i32,
    pub ref_id3: i32,
    pub ai_use_judge_id: i32,
    pub ref_id4: i32,
    pub ref_id5: i32,
    pub ref_id6: i32,
    pub ref_id7: i32,
    pub ref_id8: i32,
    pub ref_id9: i32,
    pub ref_id10: i32,
    pub consume_type1: u8,
    pub consume_type2: u8,
    pub consume_type3: u8,
    pub consume_type4: u8,
    pub consume_type5: u8,
    pub consume_type6: u8,
    pub consume_type7: u8,
    pub consume_type8: u8,
    pub consume_type9: u8,
    pub consume_type10: u8,
    pub consume_loop_mp_for_menu: i16,
    pub pad: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MapDefaultInfoParam {
    pub disable_param_reserve2: [u8; 3],
    pub enable_fast_travel_event_flag_id: u32,
    pub weather_lot_time_offset_ingame_seconds: i32,
    pub weather_create_asset_limit_id: i8,
    pub map_ai_sight_type: u8,
    pub sound_indoor_type: u8,
    pub reverb_default_type: i8,
    pub bgm_place_info: i16,
    pub env_place_info: i16,
    pub map_additional_sound_bank_id: i32,
    pub map_height_for_sound: i16,
    pub is_enable_blend_timezone_envmap: u8,
    pub override_giresolution_xss: i8,
    pub map_lo_hi_change_border_dist_xz: f32,
    pub map_lo_hi_change_border_dist_y: f32,
    pub map_lo_hi_change_play_dist: f32,
    pub map_auto_draw_group_back_face_pixel_num: u32,
    pub player_lignt_scale: f32,
    pub is_enable_timezonne_player_lignt_scale: u8,
    pub is_disable_auto_cliff_wind: u8,
    pub open_chr_activate_threshold: i16,
    pub map_mimicry_establishment_param_id: i32,
    pub override_giresolution_xsx: i8,
    pub reserve: [u8; 7],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MapGdRegionDrawParam {
    pub disable_param_reserve2: [u8; 3],
    pub override_ivlocal_light_scale: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MapGdRegionInfo {
    pub disable_param_reserve2: [u8; 3],
    pub map_region_id: u32,
    pub reserve: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MapGridCreateHeightLimitInfo {
    pub grid_enable_create_height_min: f32,
    pub grid_enable_create_height_max: f32,
    pub reserve: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MapMimicryEstablishmentParam {
    pub mimicry_establishment0: f32,
    pub mimicry_establishment1: f32,
    pub mimicry_establishment2: f32,
    pub mimicry_begin_sfx_id0: i32,
    pub mimicry_sfx_id0: i32,
    pub mimicry_end_sfx_id0: i32,
    pub mimicry_begin_sfx_id1: i32,
    pub mimicry_sfx_id1: i32,
    pub mimicry_end_sfx_id1: i32,
    pub mimicry_begin_sfx_id2: i32,
    pub mimicry_sfx_id2: i32,
    pub mimicry_end_sfx_id2: i32,
    pub pad1: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MapNameTexParam {
    pub disable_param_reserve2: [u8; 3],
    pub src_r: u8,
    pub src_g: u8,
    pub src_b: u8,
    pub pad1: [u8; 1],
    pub map_name_id: i32,
    pub pad2: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MapPieceTexParam {
    pub disable_param_reserve2: [u8; 3],
    pub src_r: u8,
    pub src_g: u8,
    pub src_b: u8,
    pub pad1: [u8; 1],
    pub save_map_name_id: i32,
    pub multi_play_area_id: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MaterialEx {
    pub param_name: [u16; 32],
    pub material_id: i32,
    pub material_param_value0: f32,
    pub material_param_value1: f32,
    pub material_param_value2: f32,
    pub material_param_value3: f32,
    pub material_param_value4: f32,
    pub pad: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MenuCommonParam {
    pub solo_play_death_to_fade_out_time: f32,
    pub party_ghost_death_to_fade_out_time: f32,
    pub player_max_hp_limit: i32,
    pub player_max_mp_limit: i32,
    pub player_max_sp_limit: i32,
    pub action_panel_change_threshold_vel: f32,
    pub action_panel_change_threshold_pass_time: f32,
    pub kg_icon_vspace: i32,
    pub world_map_cursor_select_radius: f32,
    pub reserved8: [u8; 4],
    pub decal_pos_offset_x: i32,
    pub decal_pos_offset_y: i32,
    pub target_state_search_duration_time: f32,
    pub target_state_battle_duration_time: f32,
    pub world_map_cursor_speed: f32,
    pub world_map_cursor_first_distance: f32,
    pub world_map_cursor_first_delay: f32,
    pub world_map_cursor_wait_time: f32,
    pub world_map_cursor_snap_radius: f32,
    pub world_map_cursor_snap_time: f32,
    pub item_get_log_alive_time: f32,
    pub player_max_sa_limit: i32,
    pub world_map_is_changeable_layer_event_flag_id: u32,
    pub world_map_travel_margin: f32,
    pub system_announce_scroll_buffer_time: f32,
    pub system_announce_scroll_speed: i32,
    pub system_announce_no_scroll_wait_time: f32,
    pub system_announce_scroll_count: u8,
    pub reserved17: [u8; 3],
    pub compass_memo_disp_distance: f32,
    pub compass_bonfire_disp_distance: f32,
    pub marker_goal_threshold: f32,
    pub sv_slider_step: f32,
    pub pre_opening_movie_wait_sec: f32,
    pub kg_icon_scale: f32,
    pub kg_icon_scale_for_table: f32,
    pub kg_icon_vspace_for_table: i32,
    pub kg_icon_scale_for_config: f32,
    pub kg_icon_vspace_for_config: i32,
    pub world_map_search_radius: f32,
    pub tutorial_display_time: f32,
    pub compass_friend_host_inner_distance: f32,
    pub compass_enemy_host_inner_distance: f32,
    pub compass_friend_guest_inner_distance: f32,
    pub cutscene_key_guide_alive_time: f32,
    pub auto_hide_hp_threshold_ratio: f32,
    pub auto_hide_hp_threshold_value: i32,
    pub auto_hide_mp_threshold_ratio: f32,
    pub auto_hide_mp_threshold_value: i32,
    pub auto_hide_sp_threshold_ratio: f32,
    pub auto_hide_sp_threshold_value: i32,
    pub world_map_zoom_animation_time: f32,
    pub world_map_icon_scale_min: f32,
    pub world_map_travel_margin_point: f32,
    pub enemy_tag_safe_left: u16,
    pub enemy_tag_safe_right: u16,
    pub enemy_tag_safe_top: u16,
    pub enemy_tag_safe_bottom: u16,
    pub pc_horse_hp_recover_disp_threshold: u32,
    pub reserved33: [u8; 32],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MenuOffscrRendParam {
    pub cam_at_pos_x: f32,
    pub cam_at_pos_y: f32,
    pub cam_at_pos_z: f32,
    pub cam_dist: f32,
    pub cam_rot_x: f32,
    pub cam_rot_y: f32,
    pub cam_fov: f32,
    pub cam_dist_min: f32,
    pub cam_dist_max: f32,
    pub cam_rot_xmin: f32,
    pub cam_rot_xmax: f32,
    pub gparam_id: u32,
    pub env_tex_id: u32,
    pub grapm_id_for_ps4: u32,
    pub grapm_id_for_xb1: u32,
    pub pad: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MenuParamColorTable {
    pub lerp_mode: u8,
    pub pad1: [u8; 3],
    pub h: u16,
    pub pad2: [u8; 2],
    pub s1: f32,
    pub v1: f32,
    pub s2: f32,
    pub v2: f32,
    pub s3: f32,
    pub v3: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MenuPropertyLayoutParam {
    pub layout_path: [u8; 16],
    pub property_id: i32,
    pub caption_text_id: i32,
    pub help_text_id: i32,
    pub reserved: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MenuPropertySpecParam {
    pub caption_text_id: i32,
    pub icon_id: i32,
    pub required_property_id: u32,
    pub compare_type: i8,
    pub pad2: [u8; 1],
    pub format_type: u16,
    pub pad: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MenuValueTableSpecParam {
    pub value: i32,
    pub text_id: i32,
    pub compare_type: i8,
    pub padding: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MimicryEstablishmentTexParam {
    pub disable_param_reserve2: [u8; 3],
    pub src_r: u8,
    pub src_g: u8,
    pub src_b: u8,
    pub pad1: [u8; 1],
    pub mimicry_establishment_param_id: i32,
    pub pad2: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MissileParam {
    pub f_fxid: i32,
    pub life_time: u16,
    pub hit_sphere_radius: u16,
    pub hit_damage: u16,
    pub reserve0: [u8; 6],
    pub init_velocity: f32,
    pub distance: f32,
    pub gravity_in_range: f32,
    pub gravity_out_range: f32,
    pub mp: i32,
    pub accel_in_range: f32,
    pub accel_out_range: f32,
    pub reserve1: [u8; 20],
    pub hit_missile_id: u16,
    pub died_naturaly: u8,
    pub explosion_die: u8,
    pub behavior_id: i32,
    pub reserve_last: [u8; 56],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ModelSfxParam {
    pub sfx_id_0: i32,
    pub dmypoly_id_0: i32,
    pub reserve_0: [u8; 8],
    pub sfx_id_1: i32,
    pub dmypoly_id_1: i32,
    pub reserve_1: [u8; 8],
    pub sfx_id_2: i32,
    pub dmypoly_id_2: i32,
    pub reserve_2: [u8; 8],
    pub sfx_id_3: i32,
    pub dmypoly_id_3: i32,
    pub reserve_3: [u8; 8],
    pub sfx_id_4: i32,
    pub dmypoly_id_4: i32,
    pub reserve_4: [u8; 8],
    pub sfx_id_5: i32,
    pub dmypoly_id_5: i32,
    pub reserve_5: [u8; 8],
    pub sfx_id_6: i32,
    pub dmypoly_id_6: i32,
    pub reserve_6: [u8; 8],
    pub sfx_id_7: i32,
    pub dmypoly_id_7: i32,
    pub reserve_7: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MoveParam {
    pub stay_id: i32,
    pub walk_f: i32,
    pub walk_b: i32,
    pub walk_l: i32,
    pub walk_r: i32,
    pub dash_f: i32,
    pub dash_b: i32,
    pub dash_l: i32,
    pub dash_r: i32,
    pub super_dash: i32,
    pub escape_f: i32,
    pub escape_b: i32,
    pub escape_l: i32,
    pub escape_r: i32,
    pub turn_l: i32,
    pub trun_r: i32,
    pub large_turn_l: i32,
    pub large_turn_r: i32,
    pub step_move: i32,
    pub fly_stay: i32,
    pub fly_walk_f: i32,
    pub fly_walk_fl: i32,
    pub fly_walk_fr: i32,
    pub fly_walk_fl2: i32,
    pub fly_walk_fr2: i32,
    pub fly_dash_f: i32,
    pub fly_dash_fl: i32,
    pub fly_dash_fr: i32,
    pub fly_dash_fl2: i32,
    pub fly_dash_fr2: i32,
    pub dash_escape_f: i32,
    pub dash_escape_b: i32,
    pub dash_escape_l: i32,
    pub dash_escape_r: i32,
    pub analog_move_param_id: i32,
    pub turn_no_anim_angle: u8,
    pub turn45_angle: u8,
    pub turn90_angle: u8,
    pub turn_wait_no_anim_angle: u8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MultiEstusFlaskBonusParam {
    pub host: u8,
    pub white_ghost_none: u8,
    pub white_ghost_umbasa: u8,
    pub white_ghost_berserker: u8,
    pub black_ghost_none_sign: u8,
    pub black_ghost_umbasa_sign: u8,
    pub black_ghost_berserker_sign: u8,
    pub black_ghost_none_invade: u8,
    pub black_ghost_umbasa_invade: u8,
    pub black_ghost_berserker_invade: u8,
    pub red_hunter1: u8,
    pub red_hunter2: u8,
    pub guardian_of_forest: u8,
    pub guardian_of_anor: u8,
    pub battle_royal: u8,
    pub yellow_monk: u8,
    pub pad1: [u8; 48],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MultiPlayCorrectionParam {
    pub disable_param_reserve2: [u8; 3],
    pub client1_sp_effect_id: i32,
    pub client2_sp_effect_id: i32,
    pub client3_sp_effect_id: i32,
    pub b_override_sp_effect: u8,
    pub pad3: [u8; 15],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct MultiSoulBonusRateParam {
    pub host: f32,
    pub white_ghost_none: f32,
    pub white_ghost_umbasa: f32,
    pub white_ghost_berserker: f32,
    pub black_ghost_none_sign: f32,
    pub black_ghost_umbasa_sign: f32,
    pub black_ghost_berserker_sign: f32,
    pub black_ghost_none_invade: f32,
    pub black_ghost_umbasa_invade: f32,
    pub black_ghost_berserker_invade: f32,
    pub red_hunter1: f32,
    pub red_hunter2: f32,
    pub guardian_of_forest: f32,
    pub guardian_of_anor: f32,
    pub battle_royal: f32,
    pub yellow_monk: f32,
    pub pad1: [u8; 64],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NetworkAreaParam {
    pub cell_size_x: f32,
    pub cell_size_y: f32,
    pub cell_size_z: f32,
    pub cell_offset_x: f32,
    pub cell_offset_y: f32,
    pub cell_offset_z: f32,
    pub dummy: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NetworkMsgParam {
    pub priority: u16,
    pub force_play: u8,
    pub pad1: [u8; 1],
    pub normal_white: i32,
    pub umbasa_white: i32,
    pub berserker_white: i32,
    pub sinner_hero_white: i32,
    pub normal_black: i32,
    pub umbasa_black: i32,
    pub berserker_black: i32,
    pub force_join_black: i32,
    pub force_join_umbasa_black: i32,
    pub force_join_berserker_black: i32,
    pub sinner_hunter_visitor: i32,
    pub red_hunter_visitor: i32,
    pub guardian_of_boss_visitor: i32,
    pub guardian_of_forest_map_visitor: i32,
    pub guardian_of_anolis_visitor: i32,
    pub rosalia_black: i32,
    pub force_join_rosalia_black: i32,
    pub red_hunter_visitor2: i32,
    pub npc1: i32,
    pub npc2: i32,
    pub npc3: i32,
    pub npc4: i32,
    pub battle_royal: i32,
    pub npc5: i32,
    pub npc6: i32,
    pub npc7: i32,
    pub npc8: i32,
    pub npc9: i32,
    pub npc10: i32,
    pub npc11: i32,
    pub npc12: i32,
    pub npc13: i32,
    pub npc14: i32,
    pub npc15: i32,
    pub npc16: i32,
    pub force_join_black_b: i32,
    pub normal_white_npc: i32,
    pub force_join_black_npc: i32,
    pub force_join_black_b_npc: i32,
    pub force_join_black_c_npc: i32,
    pub pad2: [u8; 28],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NetworkParam {
    pub sign_vertical_offset: f32,
    pub max_sign_pos_correction_range: f32,
    pub summon_timeout_time: f32,
    pub pad: [u8; 4],
    pub sign_puddle_active_message_interval_sec: f32,
    pub key_guide_height: f32,
    pub reload_sign_interval_time1: f32,
    pub reload_sign_interval_time2: f32,
    pub reload_sign_total_count: u32,
    pub reload_sign_cell_count: u32,
    pub update_sign_interval_time: f32,
    pub basic_exclusive_range: f32,
    pub basic_exclusive_height: f32,
    pub preview_chr_waiting_time: f32,
    pub sign_visible_range: f32,
    pub cell_group_horizontal_range: u32,
    pub cell_group_top_range: u32,
    pub cell_group_bottom_range: u32,
    pub min_white_phantom_limit_time_scale: f32,
    pub min_small_phantom_limit_time_scale: f32,
    pub white_keyword_limit_time_scale: f32,
    pub small_keyword_limit_time_scale: f32,
    pub black_keyword_limit_time_scale: f32,
    pub dragon_keyword_limit_time_scale: f32,
    pub sing_get_max: u32,
    pub sign_download_span: f32,
    pub sign_update_span: f32,
    pub sign_pad: [u8; 4],
    pub max_break_in_target_list_count: u32,
    pub break_in_request_interval_time_sec: f32,
    pub break_in_request_time_out_sec: f32,
    pub pad_0: [u8; 4],
    pub key_guide_range: f32,
    pub key_guide_height_1: f32,
    pub reload_sign_total_count_2: u32,
    pub reload_new_sign_cell_count: u32,
    pub reload_random_sign_cell_count: u32,
    pub max_sign_total_count: u32,
    pub max_sign_cell_count: u32,
    pub basic_exclusive_range_3: f32,
    pub basic_exclusive_height_4: f32,
    pub sign_visible_range_5: f32,
    pub max_write_sign_count: u32,
    pub max_read_sign_count: u32,
    pub reload_sign_interval_time: f32,
    pub cell_group_horizontal_range_6: u32,
    pub cell_group_top_range_7: u32,
    pub cell_group_bottom_range_8: u32,
    pub life_time: u32,
    pub download_span: f32,
    pub download_evaluation_span: f32,
    pub pad_9: [u8; 4],
    pub deading_ghost_start_pos_threshold: f32,
    pub key_guide_height_10: f32,
    pub key_guide_range_player: f32,
    pub key_guide_height_player: f32,
    pub reload_sign_total_count_11: u32,
    pub reload_sign_cell_count_12: u32,
    pub max_sign_total_count_13: u32,
    pub max_sign_cell_count_14: u32,
    pub reload_sign_interval_time_15: f32,
    pub sign_visible_range_16: f32,
    pub basic_exclusive_range_17: f32,
    pub basic_exclusive_height_18: f32,
    pub cell_group_horizontal_range_19: u32,
    pub cell_group_top_range_20: u32,
    pub cell_group_bottom_range_21: u32,
    pub life_time_22: u32,
    pub record_deading_ghost_total_time: f32,
    pub record_deading_ghost_min_time: f32,
    pub download_span_23: f32,
    pub statue_creatable_distance: f32,
    pub reload_ghost_total_count: u32,
    pub reload_ghost_cell_count: u32,
    pub max_ghost_total_count: u32,
    pub distance_of_begin_record_versus: f32,
    pub distance_of_end_record_versus: f32,
    pub update_wander_ghost_interval_time: f32,
    pub update_versus_ghost_interval_time: f32,
    pub record_wandering_ghost_time: f32,
    pub record_wandering_ghost_min_time: f32,
    pub update_bonfire_ghost_interval_time: f32,
    pub replay_ghost_range_on_view: f32,
    pub replay_ghost_range_out_view: f32,
    pub replay_bonfire_ghost_time: f32,
    pub min_bonfire_ghost_valid_range: f32,
    pub max_bonfire_ghost_valid_range: f32,
    pub min_replay_interval_time: f32,
    pub max_replay_interval_time: f32,
    pub reload_ghost_interval_time: f32,
    pub cell_group_horizontal_range_24: u32,
    pub cell_group_top_range_25: u32,
    pub replay_bonfire_phantom_param_id_for_codename: i32,
    pub replay_bonfire_mode_range: f32,
    pub replay_bonfire_phantom_param_id: i32,
    pub ghostpad: [u8; 4],
    pub reload_visit_list_cool_time: f32,
    pub max_coop_blue_summon_count: u32,
    pub max_bell_guard_summon_count: u32,
    pub max_visit_list_count: u32,
    pub reload_search_coop_blue_min: f32,
    pub reload_search_coop_blue_max: f32,
    pub reload_search_bell_guard_min: f32,
    pub reload_search_bell_guard_max: f32,
    pub reload_search_rat_king_min: f32,
    pub reload_search_rat_king_max: f32,
    pub visitpad00: [u8; 8],
    pub srtt_max_limit: f32,
    pub srtt_mean_limit: f32,
    pub srtt_mean_deviation_limit: f32,
    pub dark_phantom_limit_boost_time: f32,
    pub dark_phantom_limit_boost_scale: f32,
    pub multiplay_disable_life_time: f32,
    pub abyss_multiplay_limit: u8,
    pub phantom_warp_minimum_time: u8,
    pub phantom_return_delay_time: u8,
    pub terminate_timeout_time: u8,
    pub penalty_point_lan_disconnect: u16,
    pub penalty_point_signout: u16,
    pub penalty_point_reboot: u16,
    pub penalty_point_begin_penalize: u16,
    pub penalty_forgive_item_limit_time: f32,
    pub all_area_search_rate_coop_blue: u8,
    pub all_area_search_rate_vs_blue: u8,
    pub all_area_search_rate_bell_guard: u8,
    pub blood_message_eval_heal_rate: u8,
    pub small_gold_success_host_reward_id: u32,
    pub door_invalid_play_area_extents: f32,
    pub sign_display_max: u8,
    pub blood_stain_display_max: u8,
    pub blood_message_display_max: u8,
    pub pad00: [u8; 9],
    pub pad10: [u8; 32],
    pub summon_message_interval: f32,
    pub host_register_update_time: f32,
    pub host_time_out_time: f32,
    pub guest_update_time: f32,
    pub guest_player_no_time_out_time: f32,
    pub host_player_no_time_out_time: f32,
    pub request_search_quick_match_limit: u32,
    pub avatar_match_search_max: u32,
    pub battle_royal_match_search_min: u32,
    pub battle_royal_match_search_max: u32,
    pub pad11: [u8; 8],
    pub visitor_list_max: u32,
    pub visitor_time_out_time: f32,
    pub download_span_26: f32,
    pub visitor_guest_request_message_interval_sec: f32,
    pub wander_ghost_interval_life_time: f32,
    pub pad13: [u8; 12],
    pub yellow_monk_time_out_time: f32,
    pub yellow_monk_download_span: f32,
    pub yellow_monk_overall_flow_time_out_time: f32,
    pub pad14: [u8; 4],
    pub pad14_27: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NpcAiActionParam {
    pub move_dir: u8,
    pub key1: u8,
    pub key2: u8,
    pub key3: u8,
    pub b_move_dir_hold: u8,
    pub b_key_hold1: u8,
    pub b_key_hold2: u8,
    pub b_key_hold3: u8,
    pub gesture_id: i32,
    pub b_life_end_success: u8,
    pub pad1: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NpcAiBehaviorProbabilityParam {
    pub param000: i16,
    pub param001: i16,
    pub param002: i16,
    pub param003: i16,
    pub param004: i16,
    pub param005: i16,
    pub param006: i16,
    pub param007: i16,
    pub param008: i16,
    pub param009: i16,
    pub param010: i16,
    pub param011: i16,
    pub param012: i16,
    pub param013: i16,
    pub param014: i16,
    pub param015: i16,
    pub param016: i16,
    pub param017: i16,
    pub param018: i16,
    pub param019: i16,
    pub param020: i16,
    pub param021: i16,
    pub param022: i16,
    pub param023: i16,
    pub param024: i16,
    pub param025: i16,
    pub param026: i16,
    pub param027: i16,
    pub param028: i16,
    pub param029: i16,
    pub param030: i16,
    pub param031: i16,
    pub param032: i16,
    pub param033: i16,
    pub param034: i16,
    pub param035: i16,
    pub param036: i16,
    pub param037: i16,
    pub param038: i16,
    pub param039: i16,
    pub param040: i16,
    pub param041: i16,
    pub param042: i16,
    pub param043: i16,
    pub param044: i16,
    pub param045: i16,
    pub param046: i16,
    pub param047: i16,
    pub param048: i16,
    pub param049: i16,
    pub param050: i16,
    pub param051: i16,
    pub param052: i16,
    pub param053: i16,
    pub param054: i16,
    pub param055: i16,
    pub param056: i16,
    pub param057: i16,
    pub param058: i16,
    pub param059: i16,
    pub param060: i16,
    pub param061: i16,
    pub param062: i16,
    pub param063: i16,
    pub param064: i16,
    pub param065: i16,
    pub param066: i16,
    pub param067: i16,
    pub param068: i16,
    pub param069: i16,
    pub param070: i16,
    pub param071: i16,
    pub param072: i16,
    pub param073: i16,
    pub param074: i16,
    pub param075: i16,
    pub param076: i16,
    pub param077: i16,
    pub param078: i16,
    pub param079: i16,
    pub param080: i16,
    pub param081: i16,
    pub param082: i16,
    pub param083: i16,
    pub param084: i16,
    pub param085: i16,
    pub param086: i16,
    pub param087: i16,
    pub param088: i16,
    pub param089: i16,
    pub param090: i16,
    pub param091: i16,
    pub param092: i16,
    pub param093: i16,
    pub param094: i16,
    pub param095: i16,
    pub param096: i16,
    pub param097: i16,
    pub param098: i16,
    pub param099: i16,
    pub param100: i16,
    pub param101: i16,
    pub param102: i16,
    pub param103: i16,
    pub param104: i16,
    pub param105: i16,
    pub param106: i16,
    pub param107: i16,
    pub param108: i16,
    pub param109: i16,
    pub param110: i16,
    pub param111: i16,
    pub param112: i16,
    pub param113: i16,
    pub param114: i16,
    pub param115: i16,
    pub param116: i16,
    pub param117: i16,
    pub param118: i16,
    pub param119: i16,
    pub param120: i16,
    pub param121: i16,
    pub param122: i16,
    pub param123: i16,
    pub param124: i16,
    pub param125: i16,
    pub param126: i16,
    pub param127: i16,
    pub param128: i16,
    pub param129: i16,
    pub param130: i16,
    pub param131: i16,
    pub param132: i16,
    pub param133: i16,
    pub param134: i16,
    pub param135: i16,
    pub param136: i16,
    pub param137: i16,
    pub param138: i16,
    pub param139: i16,
    pub param140: i16,
    pub param141: i16,
    pub param142: i16,
    pub param143: i16,
    pub param144: i16,
    pub param145: i16,
    pub param146: i16,
    pub param147: i16,
    pub param148: i16,
    pub param149: i16,
    pub param150: i16,
    pub param151: i16,
    pub param152: i16,
    pub param153: i16,
    pub param154: i16,
    pub param155: i16,
    pub param156: i16,
    pub param157: i16,
    pub param158: i16,
    pub param159: i16,
    pub param160: i16,
    pub param161: i16,
    pub param162: i16,
    pub param163: i16,
    pub param164: i16,
    pub param165: i16,
    pub param166: i16,
    pub param167: i16,
    pub param168: i16,
    pub param169: i16,
    pub param170: i16,
    pub param171: i16,
    pub param172: i16,
    pub param173: i16,
    pub param174: i16,
    pub param175: i16,
    pub param176: i16,
    pub param177: i16,
    pub param178: i16,
    pub param179: i16,
    pub param180: i16,
    pub param181: i16,
    pub param182: i16,
    pub param183: i16,
    pub param184: i16,
    pub param185: i16,
    pub param186: i16,
    pub param187: i16,
    pub param188: i16,
    pub param189: i16,
    pub param190: i16,
    pub param191: i16,
    pub param192: i16,
    pub param193: i16,
    pub param194: i16,
    pub param195: i16,
    pub param196: i16,
    pub param197: i16,
    pub param198: i16,
    pub param199: i16,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NpcParam {
    pub disable_param_reserve2: [u8; 3],
    pub behavior_variation_id: i32,
    pub resist_correct_id_poison: i32,
    pub name_id: i32,
    pub turn_vellocity: f32,
    pub hit_height: f32,
    pub hit_radius: f32,
    pub weight: u32,
    pub hit_yoffset: f32,
    pub hp: u32,
    pub mp: u32,
    pub get_soul: u32,
    pub item_lot_id_enemy: i32,
    pub item_lot_id_map: i32,
    pub max_ankle_roll_angle: f32,
    pub chr_hit_group_and_navimesh: u8,
    pub face_icon_id: u8,
    pub deactivate_dist: i16,
    pub chr_activate_condition_param_id: u32,
    pub foot_ik_error_height_limit: f32,
    pub humanity_lot_id: i32,
    pub sp_effect_id0: i32,
    pub sp_effect_id1: i32,
    pub sp_effect_id2: i32,
    pub sp_effect_id3: i32,
    pub sp_effect_id4: i32,
    pub sp_effect_id5: i32,
    pub sp_effect_id6: i32,
    pub sp_effect_id7: i32,
    pub game_clear_sp_effect_id: i32,
    pub phys_guard_cut_rate: f32,
    pub mag_guard_cut_rate: f32,
    pub fire_guard_cut_rate: f32,
    pub thun_guard_cut_rate: f32,
    pub anim_id_offset: i32,
    pub lock_gaze_point0: i16,
    pub lock_gaze_point1: i16,
    pub lock_gaze_point2: i16,
    pub lock_gaze_point3: i16,
    pub lock_gaze_point4: i16,
    pub lock_gaze_point5: i16,
    pub network_warp_dist: f32,
    pub dbg_behavior_r1: i32,
    pub dbg_behavior_l1: i32,
    pub dbg_behavior_r2: i32,
    pub dbg_behavior_l2: i32,
    pub dbg_behavior_rl: i32,
    pub dbg_behavior_rr: i32,
    pub dbg_behavior_rd: i32,
    pub dbg_behavior_ru: i32,
    pub dbg_behavior_ll: i32,
    pub dbg_behavior_lr: i32,
    pub dbg_behavior_ld: i32,
    pub dbg_behavior_lu: i32,
    pub anim_id_offset2: i32,
    pub parts_damage_rate1: f32,
    pub parts_damage_rate2: f32,
    pub parts_damage_rate3: f32,
    pub parts_damage_rate4: f32,
    pub parts_damage_rate5: f32,
    pub parts_damage_rate6: f32,
    pub parts_damage_rate7: f32,
    pub parts_damage_rate8: f32,
    pub weak_parts_damage_rate: f32,
    pub super_armor_recover_correction: f32,
    pub super_armor_brake_knockback_dist: f32,
    pub stamina: u16,
    pub stamina_recover_base_vel: u16,
    pub def_phys: u16,
    pub def_slash: i16,
    pub def_blow: i16,
    pub def_thrust: i16,
    pub def_mag: u16,
    pub def_fire: u16,
    pub def_thunder: u16,
    pub def_flick_power: u16,
    pub resist_poison: u16,
    pub resist_desease: u16,
    pub resist_blood: u16,
    pub resist_curse: u16,
    pub ghost_model_id: i16,
    pub normal_change_resouce_id: i16,
    pub guard_angle: i16,
    pub slash_guard_cut_rate: i16,
    pub blow_guard_cut_rate: i16,
    pub thrust_guard_cut_rate: i16,
    pub lock_gaze_point6: i16,
    pub normal_change_tex_chr_id: i16,
    pub drop_type: u16,
    pub knockback_rate: u8,
    pub knockback_param_id: u8,
    pub fall_damage_dump: u8,
    pub stamina_guard_def: u8,
    pub resist_sleep: u16,
    pub resist_madness: u16,
    pub sleep_guard_resist: i8,
    pub madness_guard_resist: i8,
    pub lock_gaze_point7: i16,
    pub mp_recover_base_vel: u8,
    pub flick_damage_cut_rate: u8,
    pub default_lod_param_id: i8,
    pub draw_type: i8,
    pub npc_type: u8,
    pub team_type: u8,
    pub move_type: u8,
    pub lock_dist: u8,
    pub material_se_weak1: u16,
    pub material_sfx_weak1: u16,
    pub parts_damage_type: u8,
    pub vow_type: u8,
    pub guard_level: i8,
    pub burn_sfx_type: u8,
    pub poison_guard_resist: i8,
    pub disease_guard_resist: i8,
    pub blood_guard_resist: i8,
    pub curse_guard_resist: i8,
    pub parry_attack: u8,
    pub parry_defence: u8,
    pub sfx_size: u8,
    pub push_out_cam_region_radius: u8,
    pub hit_stop_type: u8,
    pub ladder_end_chk_offset_top: u8,
    pub ladder_end_chk_offset_low: u8,
    #[bitflag(disableParam_NT, 0)]
    #[bitflag(disableParamReserve1, 1)]
    #[bitflag(useRagdollCamHit, 2)]
    #[bitflag(disableClothRigidHit, 3)]
    #[bitflag(useUndulationAddAnimFB, 4)]
    #[bitflag(isWeakA, 5)]
    #[bitflag(isGhost, 6)]
    #[bitflag(isNoDamageMotion, 7)]
    pub bitfield0: u8,
    #[bitflag(isUnduration, 0)]
    #[bitflag(isChangeWanderGhost, 1)]
    #[bitflag(modelDispMask0, 2)]
    #[bitflag(modelDispMask1, 3)]
    #[bitflag(modelDispMask2, 4)]
    #[bitflag(modelDispMask3, 5)]
    #[bitflag(modelDispMask4, 6)]
    #[bitflag(modelDispMask5, 7)]
    pub bitfield1: u8,
    #[bitflag(modelDispMask6, 0)]
    #[bitflag(modelDispMask7, 1)]
    #[bitflag(modelDispMask8, 2)]
    #[bitflag(modelDispMask9, 3)]
    #[bitflag(modelDispMask10, 4)]
    #[bitflag(modelDispMask11, 5)]
    #[bitflag(modelDispMask12, 6)]
    #[bitflag(modelDispMask13, 7)]
    pub bitfield2: u8,
    #[bitflag(modelDispMask14, 0)]
    #[bitflag(modelDispMask15, 1)]
    #[bitflag(isEnableNeckTurn, 2)]
    #[bitflag(disableRespawn, 3)]
    #[bitflag(isMoveAnimWait, 4)]
    #[bitflag(isCrowd, 5)]
    #[bitflag(isWeakB, 6)]
    #[bitflag(isWeakC, 7)]
    pub bitfield3: u8,
    #[bitflag(isWeakD, 0)]
    #[bitflag(doesAlwaysUseSpecialTurn, 1)]
    #[bitflag(isRideAtkTarget, 2)]
    #[bitflag(isEnableStepDispInterpolate, 3)]
    #[bitflag(isStealthTarget, 4)]
    #[bitflag(disableInitializeDead, 5)]
    #[bitflag(isHitRumble, 6)]
    #[bitflag(isSmoothTurn, 7)]
    pub bitfield4: u8,
    #[bitflag(isWeakE, 0)]
    #[bitflag(isWeakF, 1)]
    #[bitflag(modelDispMask16, 2)]
    #[bitflag(modelDispMask17, 3)]
    #[bitflag(modelDispMask18, 4)]
    #[bitflag(modelDispMask19, 5)]
    #[bitflag(modelDispMask20, 6)]
    #[bitflag(modelDispMask21, 7)]
    pub bitfield5: u8,
    #[bitflag(modelDispMask22, 0)]
    #[bitflag(modelDispMask23, 1)]
    #[bitflag(modelDispMask24, 2)]
    #[bitflag(modelDispMask25, 3)]
    #[bitflag(modelDispMask26, 4)]
    #[bitflag(modelDispMask27, 5)]
    #[bitflag(modelDispMask28, 6)]
    #[bitflag(modelDispMask29, 7)]
    pub bitfield6: u8,
    pub item_search_radius: f32,
    pub chr_hit_height: f32,
    pub chr_hit_radius: f32,
    pub special_turn_type: u8,
    #[bitflag(modelDispMask30, 0)]
    #[bitflag(modelDispMask31, 1)]
    #[bitflag(isSoulGetByBoss, 2)]
    #[bitflag(isBulletOwner_byObject, 3)]
    #[bitflag(isUseLowHitFootIk, 4)]
    #[bitflag(isCalculatePvPDamage, 5)]
    #[bitflag(isHostSyncChr, 6)]
    #[bitflag(isSkipWeakDamageAnim, 7)]
    pub bitfield7: u8,
    pub def_dark: u16,
    pub threat_lv: u32,
    pub special_turn_distance_threshold: f32,
    pub auto_foot_effect_sfx_id: i32,
    pub material_se1: u16,
    pub material_sfx1: u16,
    pub material_se_weak2: u16,
    pub material_sfx_weak2: u16,
    pub material_se2: u16,
    pub material_sfx2: u16,
    pub sp_effect_id8: i32,
    pub sp_effect_id9: i32,
    pub sp_effect_id10: i32,
    pub sp_effect_id11: i32,
    pub sp_effect_id12: i32,
    pub sp_effect_id13: i32,
    pub sp_effect_id14: i32,
    pub sp_effect_id15: i32,
    pub auto_foot_effect_decal_base_id1: i32,
    pub toughness: u32,
    pub toughness_recover_correction: f32,
    pub neutral_damage_cut_rate: f32,
    pub slash_damage_cut_rate: f32,
    pub blow_damage_cut_rate: f32,
    pub thrust_damage_cut_rate: f32,
    pub magic_damage_cut_rate: f32,
    pub fire_damage_cut_rate: f32,
    pub thunder_damage_cut_rate: f32,
    pub dark_damage_cut_rate: f32,
    pub dark_guard_cut_rate: f32,
    pub cloth_update_offset: i8,
    pub npc_player_weight_type: u8,
    pub normal_change_model_id: i16,
    pub normal_change_anim_chr_id: i16,
    pub paint_render_target_size: u16,
    pub resist_correct_id_disease: i32,
    pub phantom_shader_id: i32,
    pub multi_play_correction_param_id: i32,
    pub max_ankle_pitch_angle: f32,
    pub resist_freeze: u16,
    pub freeze_guard_resist: i8,
    pub pad1: [u8; 1],
    pub lock_camera_param_id: i32,
    pub sp_effect_id16: i32,
    pub sp_effect_id17: i32,
    pub sp_effect_id18: i32,
    pub sp_effect_id19: i32,
    pub sp_effect_id20: i32,
    pub sp_effect_id21: i32,
    pub sp_effect_id22: i32,
    pub sp_effect_id23: i32,
    pub sp_effect_id24: i32,
    pub sp_effect_id25: i32,
    pub sp_effect_id26: i32,
    pub sp_effect_id27: i32,
    pub sp_effect_id28: i32,
    pub sp_effect_id29: i32,
    pub sp_effect_id30: i32,
    pub sp_effect_id31: i32,
    pub disable_lock_on_ang: f32,
    pub cloth_off_lod_level: i8,
    #[bitflag(isKeepHitOnRide, 0)]
    #[bitflag(isSpCollide, 1)]
    #[bitflag(isUseFootIKNormalByUnduration, 2)]
    #[bitflag(attachHitInitializeDead, 3)]
    #[bitflag(excludeGroupRewardCheck, 4)]
    #[bitflag(enableAILockDmyPoly_212, 5)]
    #[bitflag(enableAILockDmyPoly_213, 6)]
    #[bitflag(enableAILockDmyPoly_214, 7)]
    pub bitfield8: u8,
    pub estus_flask_recovery_param_id: i16,
    pub role_name_id: i32,
    pub estus_flask_lot_point: u16,
    pub hp_estus_flask_lot_point: u16,
    pub mp_estus_flask_lot_point: u16,
    pub estus_flask_recovery_failed_lot_point_add: u16,
    pub hp_estus_flask_recovery_failed_lot_point_add: u16,
    pub mp_estus_flask_recovery_failed_lot_point_add: u16,
    pub wander_ghost_phantom_id: i32,
    pub hearing_head_size: f32,
    pub sound_bank_id: i16,
    pub forward_undulation_limit: u8,
    pub side_undulation_limit: u8,
    pub deactive_move_speed: f32,
    pub deactive_move_dist: f32,
    pub enable_sound_obj_dist: f32,
    pub undulation_correct_gain: f32,
    pub auto_foot_effect_decal_base_id2: i16,
    pub auto_foot_effect_decal_base_id3: i16,
    pub retarget_reference_chr_id: i16,
    pub sfx_res_bank_id: i16,
    pub update_activate_priolity: f32,
    pub chr_navimesh_flag_alive: u8,
    pub chr_navimesh_flag_dead: u8,
    pub pad7: [u8; 1],
    pub wheel_rot_type: u8,
    pub wheel_rot_radius: f32,
    pub retarget_move_rate: f32,
    pub ladder_warp_offset: f32,
    pub load_asset_id: i32,
    pub overlap_camera_dmypoly_id: i32,
    pub resident_material_ex_param_id00: i32,
    pub resident_material_ex_param_id01: i32,
    pub resident_material_ex_param_id02: i32,
    pub resident_material_ex_param_id03: i32,
    pub resident_material_ex_param_id04: i32,
    pub sleep_collector_item_lot_id_enemy: i32,
    pub sleep_collector_item_lot_id_map: i32,
    pub foot_ik_error_on_gain: f32,
    pub foot_ik_error_off_gain: f32,
    pub sound_add_bank_id: i16,
    pub material_variation_value: u8,
    pub material_variation_value_weak: u8,
    pub super_armor_durability: f32,
    pub sa_recovery_rate: f32,
    pub sa_guard_cut_rate: f32,
    pub resist_correct_id_blood: i32,
    pub resist_correct_id_curse: i32,
    pub resist_correct_id_freeze: i32,
    pub resist_correct_id_sleep: i32,
    pub resist_correct_id_madness: i32,
    pub chr_dead_tutorial_flag_id: u32,
    pub step_disp_interpolate_time: f32,
    pub step_disp_interpolate_trigger_value: f32,
    pub lock_score_offset: f32,
    pub pad12: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct NpcThinkParam {
    pub disable_param_reserve2: [u8; 3],
    pub logic_id: i32,
    pub battle_goal_id: i32,
    pub search_eye_dist: u16,
    pub search_eye_ang_y: u8,
    pub sp_effect_id_ranged_attack: i32,
    pub search_target_lv1_forget_time: f32,
    pub search_target_lv2_forget_time: f32,
    pub back_home_life_on_hit_ene_wal: f32,
    pub sight_target_forget_time: f32,
    pub id_attack_cannot_move: i32,
    pub ear_dist: f32,
    pub call_help_action_anim_id: i32,
    pub call_help_call_action_id: i32,
    pub eye_dist: u16,
    pub is_guard_act: u8,
    pub pad6: [u8; 1],
    pub ear_soundcut_dist: u16,
    pub nose_dist: u16,
    pub max_backhome_dist: u16,
    pub backhome_dist: u16,
    pub backhome_battle_dist: u16,
    pub non_battle_act_life: u16,
    pub back_home_look_target_time: u16,
    pub back_home_look_target_dist: u16,
    pub sound_target_forget_time: f32,
    pub battle_start_dist: u16,
    pub call_help_my_peer_id: u16,
    pub call_help_call_peer_id: u16,
    pub target_sys_dmg_effect_rate: u16,
    pub team_attack_effectivity: u8,
    pub eye_ang_x: u8,
    pub eye_ang_y: u8,
    pub disable_dark: u8,
    pub caravan_role: u8,
    pub call_help_call_valid_min_dist_target: u8,
    pub call_help_call_valid_range: u8,
    pub call_help_forget_time_by_arrival: u8,
    pub call_help_min_wait_time: u8,
    pub call_help_max_wait_time: u8,
    pub goal_action_to_caution: u8,
    pub ear_listen_level: u8,
    pub call_help_reply_behavior_type: u8,
    pub disable_path_move: u8,
    pub skip_arrival_visible_check: u8,
    pub think_attr_do_admirer: u8,
    #[bitflag(disableParam_NT, 0)]
    #[bitflag(disableParamReserve1, 1)]
    #[bitflag(isNoAvoidHugeEnemy, 2)]
    #[bitflag(enableWeaponOnOff, 3)]
    #[bitflag(targetAILockDmyPoly, 4)]
    #[bitflag(pad8, 5)]
    #[bitflag(enableNaviFlg_Edge, 6)]
    #[bitflag(enableNaviFlg_LargeSpace, 7)]
    pub bitfield0: u8,
    pub enable_navi_flg_reserve1: [u8; 3],
    pub search_threshold_lv0to_lv1: i32,
    pub search_threshold_lv1to_lv2: i32,
    pub platoon_reply_time: f32,
    pub platoon_reply_add_random_time: f32,
    pub search_eye_ang_x: u8,
    pub is_update_battle_sight: u8,
    pub battle_eye_update_dist: u16,
    pub battle_eye_update_ang_x: u8,
    pub battle_eye_update_ang_y: u8,
    pub pad4: [u8; 16],
    pub eye_back_offset_dist: u16,
    pub eye_begin_dist: u16,
    pub act_type_on_failed_path: u8,
    pub goal_action_to_caution_important: u8,
    pub shift_anime_id_ranged_attack: i32,
    pub act_type_on_non_btl_failed_path: u8,
    pub is_buddy_ai: u8,
    pub goal_action_to_search_lv1: u8,
    pub goal_action_to_search_lv2: u8,
    pub enable_jump_move: u8,
    pub disable_local_steering: u8,
    pub goal_action_to_disappear: u8,
    pub change_state_action_to_normal: u8,
    pub memory_target_forget_time: f32,
    pub ranged_attack_id: i32,
    pub use_fall_on_normal_caution: u8,
    pub use_fall_on_search_battle: u8,
    pub enable_jump_move_on_battle: u8,
    pub back_to_home_stuck_act: u8,
    pub pad3: [u8; 4],
    pub sound_behavior_id01: i32,
    pub sound_behavior_id02: i32,
    pub sound_behavior_id03: i32,
    pub sound_behavior_id04: i32,
    pub sound_behavior_id05: i32,
    pub sound_behavior_id06: i32,
    pub sound_behavior_id07: i32,
    pub sound_behavior_id08: i32,
    pub weapon_off_special_effect_id: i32,
    pub weapon_on_special_effect_id: i32,
    pub weapon_off_anim_id: i32,
    pub weapon_on_anim_id: i32,
    pub surprise_anim_id: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ObjActParam {
    pub action_enable_msg_id: i32,
    pub action_failed_msg_id: i32,
    pub sp_qualified_pass_event_flag: u32,
    pub player_anim_id: u32,
    pub chr_anim_id: u32,
    pub valid_dist: u16,
    pub sp_qualified_id: u16,
    pub sp_qualified_id2: u16,
    pub obj_dummy_id: u8,
    pub is_event_kick_sync: u8,
    pub obj_anim_id: u32,
    pub valid_player_angle: u8,
    pub sp_qualified_type: u8,
    pub sp_qualified_type2: u8,
    pub valid_obj_angle: u8,
    pub chr_sorb_type: u8,
    pub event_kick_timing: u8,
    pub pad1: [u8; 2],
    pub action_button_param_id: i32,
    pub enable_treasure_delay_sec: f32,
    pub pre_action_sfx_dmypoly_id: i32,
    pub pre_action_sfx_id: i32,
    pub pad2: [u8; 40],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ObjectMaterialSfxParam {
    pub sfx_id_00: u32,
    pub sfx_id_01: u32,
    pub sfx_id_02: u32,
    pub sfx_id_03: u32,
    pub sfx_id_04: u32,
    pub sfx_id_05: u32,
    pub sfx_id_06: u32,
    pub sfx_id_07: u32,
    pub sfx_id_08: u32,
    pub sfx_id_09: u32,
    pub sfx_id_10: u32,
    pub sfx_id_11: u32,
    pub sfx_id_12: u32,
    pub sfx_id_13: u32,
    pub sfx_id_14: u32,
    pub sfx_id_15: u32,
    pub sfx_id_16: u32,
    pub sfx_id_17: u32,
    pub sfx_id_18: u32,
    pub sfx_id_19: u32,
    pub sfx_id_20: u32,
    pub sfx_id_21: u32,
    pub sfx_id_22: u32,
    pub sfx_id_23: u32,
    pub sfx_id_24: u32,
    pub sfx_id_25: u32,
    pub sfx_id_26: u32,
    pub sfx_id_27: u32,
    pub sfx_id_28: u32,
    pub sfx_id_29: u32,
    pub sfx_id_30: u32,
    pub sfx_id_31: u32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ObjectParam {
    pub hp: i16,
    pub defense: u16,
    pub ext_ref_tex_id: i16,
    pub material_id: i16,
    pub anim_break_id_max: u8,
    #[bitflag(isCamHit, 0)]
    #[bitflag(isBreakByPlayerCollide, 1)]
    #[bitflag(isAnimBreak, 2)]
    #[bitflag(isPenetrationBulletHit, 3)]
    #[bitflag(isChrHit, 4)]
    #[bitflag(isAttackBacklash, 5)]
    #[bitflag(isDisableBreakForFirstAppear, 6)]
    #[bitflag(isLadder, 7)]
    pub bitfield0: u8,
    #[bitflag(isAnimPauseOnRemoPlay, 0)]
    #[bitflag(isDamageNoHit, 1)]
    #[bitflag(isMoveObj, 2)]
    #[bitflag(isRopeBridge, 3)]
    #[bitflag(isAddRigidImpulse_ByDamage, 4)]
    #[bitflag(isBreak_ByChrRide, 5)]
    #[bitflag(isBurn, 6)]
    #[bitflag(isBreakByEnemyCollide, 7)]
    pub bitfield1: u8,
    pub default_lod_param_id: i8,
    pub break_sfx_id: i32,
    pub break_sfx_cp_id: i32,
    pub break_bullet_behavior_id: i32,
    pub break_bullet_cp_id: i32,
    pub break_fall_height: u8,
    pub wind_effect_type_0: u8,
    pub wind_effect_type_1: u8,
    pub cam_avoid_type: u8,
    pub wind_effect_rate_0: f32,
    pub wind_effect_rate_1: f32,
    pub break_stop_time: f32,
    pub burn_time: f32,
    pub burn_braek_rate: f32,
    pub burn_sfx_id: i32,
    pub burn_sfx_id_1: i32,
    pub burn_sfx_id_2: i32,
    pub burn_sfx_id_3: i32,
    pub burn_bullet_behavior_id: i32,
    pub burn_bullet_behavior_id_1: i32,
    pub burn_bullet_behavior_id_2: i32,
    pub burn_bullet_behavior_id_3: i32,
    pub burn_bullet_interval: u16,
    pub navimesh_flag: u8,
    pub collision_type: u8,
    pub burn_bullet_delay_time: f32,
    pub burn_sfx_delay_time_min: f32,
    pub burn_sfx_delay_time_min_1: f32,
    pub burn_sfx_delay_time_min_2: f32,
    pub burn_sfx_delay_time_min_3: f32,
    pub burn_sfx_delay_time_max: f32,
    pub burn_sfx_delay_time_max_1: f32,
    pub burn_sfx_delay_time_max_2: f32,
    pub burn_sfx_delay_time_max_3: f32,
    pub break_ai_sound_id: i32,
    pub fragment_invisible_wait_time: f32,
    pub fragment_invisible_time: f32,
    pub pad_3: [u8; 16],
    pub rigid_penetration_scale_soft: f32,
    pub rigid_penetration_scale_normal: f32,
    pub rigid_penetration_scale_hard: f32,
    pub land_touch_sfx_id: i32,
    pub pad_4: [u8; 1],
    pub paint_decal_target_texture_size: u16,
    pub life_time_for_dc: f32,
    pub cloth_update_dist: f32,
    pub contact_se_id: i32,
    pub break_landing_sfx_id: i32,
    pub waypoint_dummy_poly_id_0: i32,
    pub waypoint_param_id_0: i32,
    pub sound_bank_id: i32,
    pub ref_draw_param_id: i32,
    pub auto_create_dynamic_offset_height: f32,
    pub reserved0: i32,
    pub sound_break_seid: i32,
    pub pad_5: [u8; 40],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct PartsDrawParam {
    pub lv01_border_dist: f32,
    pub lv01_play_dist: f32,
    pub lv12_border_dist: f32,
    pub lv12_play_dist: f32,
    pub lv23_border_dist: f32,
    pub lv23_play_dist: f32,
    pub lv34_border_dist: f32,
    pub lv34_play_dist: f32,
    pub lv45_border_dist: f32,
    pub lv45_play_dist: f32,
    pub tex_lv01_border_dist: f32,
    pub tex_lv01_play_dist: f32,
    pub draw_dist: f32,
    pub draw_fade_range: f32,
    pub shadow_draw_dist: f32,
    pub shadow_fade_range: f32,
    pub motion_blur_border_dist: f32,
    pub is_point_light_shadow_src: i8,
    pub is_dir_light_shadow_src: i8,
    pub is_shadow_dst: i8,
    pub is_shadow_only: i8,
    pub draw_by_reflect_cam: i8,
    pub draw_only_reflect_cam: i8,
    pub include_lod_map_lv: i8,
    pub is_no_far_clip_draw: u8,
    pub lod_type: u8,
    pub shadow_draw_lod_offset: i8,
    pub is_trace_camera_xz: u8,
    pub is_skydome_draw_phase: u8,
    pub distant_view_model_border_dist: f32,
    pub distant_view_model_play_dist: f32,
    pub limted_activate_border_dist_for_grid: f32,
    pub limted_activate_play_dist_for_grid: f32,
    pub z_sort_offset_for_no_far_clip_draw: f32,
    pub shadow_draw_alpha_test_dist: f32,
    pub foward_draw_envmap_blend_type: u8,
    pub l_bdraw_dist_scale_param_id: u8,
    pub resereve: [u8; 34],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct PerformanceCheckParam {
    pub work_tag: u8,
    pub category_tag: u8,
    pub compare_type: u8,
    pub dummy1: [u8; 1],
    pub compare_value: f32,
    pub dummy2: [u8; 8],
    pub user_tag: [u16; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct PhantomParam {
    pub edge_color_a: f32,
    pub front_color_a: f32,
    pub diff_mul_color_a: f32,
    pub spec_mul_color_a: f32,
    pub light_color_a: f32,
    pub edge_color_r: u8,
    pub edge_color_g: u8,
    pub edge_color_b: u8,
    pub front_color_r: u8,
    pub front_color_g: u8,
    pub front_color_b: u8,
    pub diff_mul_color_r: u8,
    pub diff_mul_color_g: u8,
    pub diff_mul_color_b: u8,
    pub spec_mul_color_r: u8,
    pub spec_mul_color_g: u8,
    pub spec_mul_color_b: u8,
    pub light_color_r: u8,
    pub light_color_g: u8,
    pub light_color_b: u8,
    pub reserve: [u8; 1],
    pub alpha: f32,
    pub blend_rate: f32,
    pub blend_type: u8,
    pub is_edge_subtract: u8,
    pub is_front_subtract: u8,
    pub is_no2_pass: u8,
    pub edge_power: f32,
    pub glow_scale: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct PlayerCommonParam {
    pub player_foot_effect_by_sfx: i32,
    pub snipe_mode_draw_alpha_fade_time: f32,
    pub toughness_recover_correction: f32,
    pub base_magic_slot_size: u8,
    pub base_acc_slot_num: u8,
    pub reserved02: [u8; 2],
    pub anime_id_drop_item_pick: i32,
    pub resist_recover_point_sleep_player: f32,
    pub flare_override_homing_angle: i32,
    pub flare_override_homing_stop_range: f32,
    pub anime_id_sleep_collector_item_pick: i32,
    pub unlock_event_flag_base_id_for_wep_attr: u32,
    pub system_enchant_big_rune: i32,
    pub low_status_atk_pow_down: f32,
    pub low_status_consume_stamina_rate: f32,
    pub low_status_atk_guard_break: i16,
    pub guard_status_correct_max_status_val: i16,
    pub unlock_event_flag_step_num_for_wep_attr: u16,
    pub retribution_magic_damage_count_num: u16,
    pub retribution_magic_damage_count_remain_time: u16,
    pub retribution_magic_burst_dmypoly_id: u16,
    pub retribution_magic_burst_magic_param_id: i32,
    pub chr_aim_cam_ride_offset_height: f32,
    pub reserved23: [u8; 4],
    pub arrow_case_wep_bind_dmypoly_id: i32,
    pub bolt_pouch_wep_bind_dmypoly_id: i32,
    pub estus_flask_allocate_rate: f32,
    pub reserved38: [u8; 2],
    pub kick_acceptance_deg: u8,
    pub npc_player_analog_weight_rate_light: u8,
    pub npc_player_analog_weight_rate_normal: u8,
    pub npc_player_analog_weight_rate_heavy: u8,
    pub npc_player_analog_weight_rate_weight_over: u8,
    pub npc_player_analog_weight_rate_super_light: u8,
    pub reserved45: [u8; 4],
    pub clear_count_correct_base_sp_effect_id: i32,
    pub arrow_bolt_model_id_offset: i32,
    pub arrow_bolt_remaining_num_model_mask_threshold1: i8,
    pub arrow_bolt_remaining_num_model_mask_threshold2: i8,
    pub reserved27: [u8; 2],
    pub resist_recover_point_poision_player: f32,
    pub resist_recover_point_desease_player: f32,
    pub resist_recover_point_blood_player: f32,
    pub resist_recover_point_curse_player: f32,
    pub resist_recover_point_freeze_player: f32,
    pub resist_recover_point_poision_enemy: f32,
    pub resist_recover_point_desease_enemy: f32,
    pub resist_recover_point_blood_enemy: f32,
    pub resist_recover_point_curse_enemy: f32,
    pub resist_recover_point_freeze_enemy: f32,
    pub request_time_left_both_hand: f32,
    pub resist_recover_point_madness_player: f32,
    pub anime_id_material_item_pick: i32,
    pub hp_estus_flask_allocate_rate_for_yellow_monk: f32,
    pub hp_estus_flask_allocate_offset_for_yellow_monk: i32,
    pub mp_estus_flask_allocate_rate_for_yellow_monk: f32,
    pub mp_estus_flask_allocate_offset_for_yellow_monk: i32,
    pub resist_recover_point_sleep_enemy: f32,
    pub resist_recover_point_madness_enemy: f32,
    pub resist_curse_item_id: i32,
    pub resist_curse_item_max_num: u8,
    pub reserved_123: [u8; 3],
    pub resist_curse_item_sp_effect_base_id: i32,
    pub resist_curse_item_lot_param_id_map: i32,
    pub reserved41: [u8; 52],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct PlayRegionParam {
    pub disable_param_reserve2: [u8; 3],
    pub match_area_id: i32,
    pub multi_play_start_limit_event_flag_id: u32,
    pub other_disable_distance: f32,
    pub pc_position_save_limit_event_flag_id: u32,
    pub boss_area_id: u32,
    pub cult_npc_white_ghost_entity_id_by_free: i16,
    pub b_map_guradian_region: u8,
    #[bitflag(disableParam_NT, 0)]
    #[bitflag(disableParamReserve1, 1)]
    #[bitflag(bYellowCostumeRegion, 2)]
    #[bitflag(multiPlayStartLimitEventFlagId_targetFlagState, 3)]
    #[bitflag(breakInLimitEventFlagId_1_targetFlagState, 4)]
    #[bitflag(whiteSignLimitEventFlagId_1_targetFlagState, 5)]
    #[bitflag(redSignLimitEventFlagId_1_targetFlagState, 6)]
    #[bitflag(breakInLimitEventFlagId_2_targetFlagState, 7)]
    pub bitfield0: u8,
    pub warp_item_use_permit_bonfire_id_1: u32,
    pub warp_item_use_permit_bonfire_id_2: u32,
    pub warp_item_use_permit_bonfire_id_3: u32,
    pub warp_item_use_permit_bonfire_id_4: u32,
    pub warp_item_use_permit_bonfire_id_5: u32,
    pub warp_item_prohibition_event_flag_id_1: u32,
    pub warp_item_prohibition_event_flag_id_2: u32,
    pub warp_item_prohibition_event_flag_id_3: u32,
    pub warp_item_prohibition_event_flag_id_4: u32,
    pub warp_item_prohibition_event_flag_id_5: u32,
    #[bitflag(breakInLimitEventFlagId_3_targetFlagState, 0)]
    #[bitflag(whiteSignLimitEventFlagId_2_targetFlagState, 1)]
    #[bitflag(enableBloodstain, 2)]
    #[bitflag(enableBloodMessage, 3)]
    #[bitflag(enableGhost, 4)]
    #[bitflag(dispMask00, 5)]
    #[bitflag(dispMask01, 6)]
    #[bitflag(whiteSignLimitEventFlagId_3_targetFlagState, 7)]
    pub bitfield1: u8,
    pub pad2: [u8; 2],
    pub multi_play_hashost_limit_event_flag_id: u32,
    pub other_max_distance: f32,
    pub sign_puddle_open_event_flag_id: u32,
    pub area_no: u8,
    pub grid_xno: u8,
    pub grid_zno: u8,
    pub pad4: [u8; 1],
    pub pos_x: f32,
    pub pos_y: f32,
    pub pos_z: f32,
    pub break_in_limit_event_flag_id_1: u32,
    pub white_sign_limit_event_flag_id_1: u32,
    pub match_area_sign_create_limit_event_flag_id: u32,
    pub sign_aim_id_1: u32,
    pub sign_aim_id_2: u32,
    pub sign_aim_id_3: u32,
    pub sign_aim_id_4: u32,
    pub sign_aim_id_5: u32,
    pub sign_aim_id_6: u32,
    pub sign_aim_id_7: u32,
    pub sign_aim_id_8: u32,
    pub red_sign_limit_event_flag_id_1: u32,
    pub break_in_limit_event_flag_id_2: u32,
    pub break_in_limit_event_flag_id_3: u32,
    pub white_sign_limit_event_flag_id_2: u32,
    pub white_sign_limit_event_flag_id_3: u32,
    pub red_sign_limit_event_flag_id_2: u32,
    pub red_sign_limit_event_flag_id_3: u32,
    pub boss_id_1: u32,
    pub boss_id_2: u32,
    pub boss_id_3: u32,
    pub boss_id_4: u32,
    pub boss_id_5: u32,
    pub boss_id_6: u32,
    pub boss_id_7: u32,
    pub boss_id_8: u32,
    pub boss_id_9: u32,
    pub boss_id_10: u32,
    pub boss_id_11: u32,
    pub boss_id_12: u32,
    pub boss_id_13: u32,
    pub boss_id_14: u32,
    pub boss_id_15: u32,
    pub boss_id_16: u32,
    pub map_menu_unlock_event_id: u32,
    pub pad5: [u8; 32],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct PostureControlParam_Gender {
    pub a000_right_elbow_io: i16,
    pub a000_left_elbow_io: i16,
    pub a000_both_legs_io: i16,
    pub a002_right_elbow_io: i16,
    pub a002_left_elbow_io: i16,
    pub a002_both_legs_io: i16,
    pub a003_right_elbow_io: i16,
    pub a003_left_elbow_io: i16,
    pub a003_both_legs_io: i16,
    pub a010_right_elbow_io: i16,
    pub a010_left_elbow_io: i16,
    pub a010_both_legs_io: i16,
    pub a012_right_elbow_io: i16,
    pub a012_left_elbow_io: i16,
    pub a012_both_legs_io: i16,
    pub a013_right_elbow_io: i16,
    pub a013_left_elbow_io: i16,
    pub a013_both_legs_io: i16,
    pub a014_right_elbow_io: i16,
    pub a014_left_elbow_io: i16,
    pub a014_both_legs_io: i16,
    pub a015_right_elbow_io: i16,
    pub a015_left_elbow_io: i16,
    pub a015_both_legs_io: i16,
    pub a016_right_elbow_io: i16,
    pub a016_left_elbow_io: i16,
    pub a016_both_legs_io: i16,
    pub pad: [u8; 10],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct PostureControlParam_Pro {
    pub a000_right_arm_io: i16,
    pub a000_right_arm_fb: i16,
    pub a000_left_arm_io: i16,
    pub a000_left_arm_fb: i16,
    pub a002_right_arm_io: i16,
    pub a002_right_arm_fb: i16,
    pub a002_left_arm_io: i16,
    pub a002_left_arm_fb: i16,
    pub a003_right_arm_io: i16,
    pub a003_right_arm_fb: i16,
    pub a003_left_arm_io: i16,
    pub a003_left_arm_fb: i16,
    pub a010_right_arm_io: i16,
    pub a010_right_arm_fb: i16,
    pub a010_left_arm_io: i16,
    pub a010_left_arm_fb: i16,
    pub a012_right_arm_io: i16,
    pub a012_right_arm_fb: i16,
    pub a012_left_arm_io: i16,
    pub a012_left_arm_fb: i16,
    pub a013_right_arm_io: i16,
    pub a013_right_arm_fb: i16,
    pub a013_left_arm_io: i16,
    pub a013_left_arm_fb: i16,
    pub a014_right_arm_io: i16,
    pub a014_right_arm_fb: i16,
    pub a014_left_arm_io: i16,
    pub a014_left_arm_fb: i16,
    pub a015_right_arm_io: i16,
    pub a015_right_arm_fb: i16,
    pub a015_left_arm_io: i16,
    pub a015_left_arm_fb: i16,
    pub a016_right_arm_io: i16,
    pub a016_right_arm_fb: i16,
    pub a016_left_arm_io: i16,
    pub a016_left_arm_fb: i16,
    pub pad: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct PostureControlParam_WepLeft {
    pub a000_left_arm_fb: i16,
    pub a000_left_wrist_fb: i16,
    pub a000_left_wrist_io: i16,
    pub a002_left_arm_fb: i16,
    pub a002_left_wrist_fb: i16,
    pub a002_left_wrist_io: i16,
    pub a003_left_arm_fb: i16,
    pub a003_left_wrist_fb: i16,
    pub a003_left_wrist_io: i16,
    pub pad: [u8; 14],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct PostureControlParam_WepRight {
    pub a000_right_arm_fb: i16,
    pub a000_right_wrist_fb: i16,
    pub a000_right_wrist_io: i16,
    pub a000_left_arm_fb: i16,
    pub a000_left_wrist_fb: i16,
    pub a000_left_wrist_io: i16,
    pub a002_right_arm_fb: i16,
    pub a002_right_wrist_fb: i16,
    pub a002_right_wrist_io: i16,
    pub a002_left_arm_fb: i16,
    pub a002_left_wrist_fb: i16,
    pub a002_left_wrist_io: i16,
    pub a003_right_arm_fb: i16,
    pub a003_right_wrist_fb: i16,
    pub a003_right_wrist_io: i16,
    pub a003_left_arm_fb: i16,
    pub a003_left_wrist_fb: i16,
    pub a003_left_wrist_io: i16,
    pub a010_right_arm_fb: i16,
    pub a010_right_wrist_fb: i16,
    pub a010_right_wrist_io: i16,
    pub a010_left_arm_fb: i16,
    pub a010_left_wrist_fb: i16,
    pub a010_left_wrist_io: i16,
    pub a012_right_arm_fb: i16,
    pub a012_right_wrist_fb: i16,
    pub a012_right_wrist_io: i16,
    pub a012_left_arm_fb: i16,
    pub a012_left_wrist_fb: i16,
    pub a012_left_wrist_io: i16,
    pub a013_right_arm_fb: i16,
    pub a013_right_wrist_fb: i16,
    pub a013_right_wrist_io: i16,
    pub a013_left_arm_fb: i16,
    pub a013_left_wrist_fb: i16,
    pub a013_left_wrist_io: i16,
    pub a014_right_arm_fb: i16,
    pub a014_right_wrist_fb: i16,
    pub a014_right_wrist_io: i16,
    pub a014_left_arm_fb: i16,
    pub a014_left_wrist_fb: i16,
    pub a014_left_wrist_io: i16,
    pub a015_right_arm_fb: i16,
    pub a015_right_wrist_fb: i16,
    pub a015_right_wrist_io: i16,
    pub a015_left_arm_fb: i16,
    pub a015_left_wrist_fb: i16,
    pub a015_left_wrist_io: i16,
    pub a016_right_arm_fb: i16,
    pub a016_right_wrist_fb: i16,
    pub a016_right_wrist_io: i16,
    pub a016_left_arm_fb: i16,
    pub a016_left_wrist_fb: i16,
    pub a016_left_wrist_io: i16,
    pub pad: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct RandomAppearEditParam {
    pub appear_num: u32,
    pub param_id1: i32,
    pub rate1: u32,
    pub param_id2: i32,
    pub rate2: u32,
    pub param_id3: i32,
    pub rate3: u32,
    pub param_id4: i32,
    pub rate4: u32,
    pub param_id5: i32,
    pub rate5: u32,
    pub param_id6: i32,
    pub rate6: u32,
    pub param_id7: i32,
    pub rate7: u32,
    pub param_id8: i32,
    pub rate8: u32,
    pub param_id9: i32,
    pub rate9: u32,
    pub param_id10: i32,
    pub rate10: u32,
    pub param_id11: i32,
    pub rate11: u32,
    pub param_id12: i32,
    pub rate12: u32,
    pub param_id13: i32,
    pub rate13: u32,
    pub param_id14: i32,
    pub rate14: u32,
    pub param_id15: i32,
    pub rate15: u32,
    pub param_id16: i32,
    pub rate16: u32,
    pub param_id17: i32,
    pub rate17: u32,
    pub param_id18: i32,
    pub rate18: u32,
    pub param_id19: i32,
    pub rate19: u32,
    pub param_id20: i32,
    pub rate20: u32,
    pub param_id21: i32,
    pub rate21: u32,
    pub param_id22: i32,
    pub rate22: u32,
    pub param_id23: i32,
    pub rate23: u32,
    pub param_id24: i32,
    pub rate24: u32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct RandomAppearParam {
    #[bitflag(slot0, 0)]
    #[bitflag(slot1, 1)]
    #[bitflag(slot2, 2)]
    #[bitflag(slot3, 3)]
    #[bitflag(slot4, 4)]
    #[bitflag(slot5, 5)]
    #[bitflag(slot6, 6)]
    #[bitflag(slot7, 7)]
    pub bitfield0: u8,
    #[bitflag(slot8, 0)]
    #[bitflag(slot9, 1)]
    #[bitflag(slot10, 2)]
    #[bitflag(slot11, 3)]
    #[bitflag(slot12, 4)]
    #[bitflag(slot13, 5)]
    #[bitflag(slot14, 6)]
    #[bitflag(slot15, 7)]
    pub bitfield1: u8,
    #[bitflag(slot16, 0)]
    #[bitflag(slot17, 1)]
    #[bitflag(slot18, 2)]
    #[bitflag(slot19, 3)]
    #[bitflag(slot20, 4)]
    #[bitflag(slot21, 5)]
    #[bitflag(slot22, 6)]
    #[bitflag(slot23, 7)]
    pub bitfield2: u8,
    #[bitflag(slot24, 0)]
    #[bitflag(slot25, 1)]
    #[bitflag(slot26, 2)]
    #[bitflag(slot27, 3)]
    #[bitflag(slot28, 4)]
    #[bitflag(slot29, 5)]
    #[bitflag(slot30, 6)]
    #[bitflag(slot31, 7)]
    pub bitfield3: u8,
    #[bitflag(slot32, 0)]
    #[bitflag(slot33, 1)]
    #[bitflag(slot34, 2)]
    #[bitflag(slot35, 3)]
    #[bitflag(slot36, 4)]
    #[bitflag(slot37, 5)]
    #[bitflag(slot38, 6)]
    #[bitflag(slot39, 7)]
    pub bitfield4: u8,
    #[bitflag(slot40, 0)]
    #[bitflag(slot41, 1)]
    #[bitflag(slot42, 2)]
    #[bitflag(slot43, 3)]
    #[bitflag(slot44, 4)]
    #[bitflag(slot45, 5)]
    #[bitflag(slot46, 6)]
    #[bitflag(slot47, 7)]
    pub bitfield5: u8,
    #[bitflag(slot48, 0)]
    #[bitflag(slot49, 1)]
    #[bitflag(slot50, 2)]
    #[bitflag(slot51, 3)]
    #[bitflag(slot52, 4)]
    #[bitflag(slot53, 5)]
    #[bitflag(slot54, 6)]
    #[bitflag(slot55, 7)]
    pub bitfield6: u8,
    #[bitflag(slot56, 0)]
    #[bitflag(slot57, 1)]
    #[bitflag(slot58, 2)]
    #[bitflag(slot59, 3)]
    #[bitflag(slot60, 4)]
    #[bitflag(slot61, 5)]
    #[bitflag(slot62, 6)]
    #[bitflag(slot63, 7)]
    pub bitfield7: u8,
    #[bitflag(slot64, 0)]
    #[bitflag(slot65, 1)]
    #[bitflag(slot66, 2)]
    #[bitflag(slot67, 3)]
    #[bitflag(slot68, 4)]
    #[bitflag(slot69, 5)]
    #[bitflag(slot70, 6)]
    #[bitflag(slot71, 7)]
    pub bitfield8: u8,
    #[bitflag(slot72, 0)]
    #[bitflag(slot73, 1)]
    #[bitflag(slot74, 2)]
    #[bitflag(slot75, 3)]
    #[bitflag(slot76, 4)]
    #[bitflag(slot77, 5)]
    #[bitflag(slot78, 6)]
    #[bitflag(slot79, 7)]
    pub bitfield9: u8,
    #[bitflag(slot80, 0)]
    #[bitflag(slot81, 1)]
    #[bitflag(slot82, 2)]
    #[bitflag(slot83, 3)]
    #[bitflag(slot84, 4)]
    #[bitflag(slot85, 5)]
    #[bitflag(slot86, 6)]
    #[bitflag(slot87, 7)]
    pub bitfield10: u8,
    #[bitflag(slot88, 0)]
    #[bitflag(slot89, 1)]
    #[bitflag(slot90, 2)]
    #[bitflag(slot91, 3)]
    #[bitflag(slot92, 4)]
    #[bitflag(slot93, 5)]
    #[bitflag(slot94, 6)]
    #[bitflag(slot95, 7)]
    pub bitfield11: u8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ReinforceParamProtector {
    pub physics_def_rate: f32,
    pub magic_def_rate: f32,
    pub fire_def_rate: f32,
    pub thunder_def_rate: f32,
    pub slash_def_rate: f32,
    pub blow_def_rate: f32,
    pub thrust_def_rate: f32,
    pub resist_poison_rate: f32,
    pub resist_disease_rate: f32,
    pub resist_blood_rate: f32,
    pub resist_curse_rate: f32,
    pub resident_sp_effect_id1: u8,
    pub resident_sp_effect_id2: u8,
    pub resident_sp_effect_id3: u8,
    pub material_set_id: u8,
    pub dark_def_rate: f32,
    pub resist_freeze_rate: f32,
    pub resist_sleep_rate: f32,
    pub resist_madness_rate: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ReinforceParamWeapon {
    pub physics_atk_rate: f32,
    pub magic_atk_rate: f32,
    pub fire_atk_rate: f32,
    pub thunder_atk_rate: f32,
    pub stamina_atk_rate: f32,
    pub sa_weapon_atk_rate: f32,
    pub sa_durability_rate: f32,
    pub correct_strength_rate: f32,
    pub correct_agility_rate: f32,
    pub correct_magic_rate: f32,
    pub correct_faith_rate: f32,
    pub physics_guard_cut_rate: f32,
    pub magic_guard_cut_rate: f32,
    pub fire_guard_cut_rate: f32,
    pub thunder_guard_cut_rate: f32,
    pub poison_guard_resist_rate: f32,
    pub disease_guard_resist_rate: f32,
    pub blood_guard_resist_rate: f32,
    pub curse_guard_resist_rate: f32,
    pub stamina_guard_def_rate: f32,
    pub sp_effect_id1: u8,
    pub sp_effect_id2: u8,
    pub sp_effect_id3: u8,
    pub resident_sp_effect_id1: u8,
    pub resident_sp_effect_id2: u8,
    pub resident_sp_effect_id3: u8,
    pub material_set_id: u8,
    pub max_reinforce_level: u8,
    pub dark_atk_rate: f32,
    pub dark_guard_cut_rate: f32,
    pub correct_luck_rate: f32,
    pub freeze_guard_def_rate: f32,
    pub reinforce_price_rate: f32,
    pub base_change_price_rate: f32,
    pub enable_gem_rank: i8,
    pub pad2: [u8; 3],
    pub sleep_guard_def_rate: f32,
    pub madness_guard_def_rate: f32,
    pub base_atk_rate: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ResistCorrectParam {
    pub add_point1: f32,
    pub add_point2: f32,
    pub add_point3: f32,
    pub add_point4: f32,
    pub add_point5: f32,
    pub add_rate1: f32,
    pub add_rate2: f32,
    pub add_rate3: f32,
    pub add_rate4: f32,
    pub add_rate5: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ReverbAuxSendBusParam {
    pub reverb_aux_send_bus_name: [u8; 32],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct RideParam {
    pub atk_chr_id: u32,
    pub def_chr_id: u32,
    pub ride_cam_param_id: i32,
    pub atk_chr_anim_id: u32,
    pub def_chr_anim_id: u32,
    pub def_adjust_dmy_id: i32,
    pub def_check_dmy_id: i32,
    pub diff_ang_my_to_def: f32,
    pub dist: f32,
    pub upper_yrange: f32,
    pub lower_yrange: f32,
    pub diff_ang_min: f32,
    pub diff_ang_max: f32,
    pub pad: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct RoleParam {
    pub team_type: u8,
    pub pad10: [u8; 3],
    pub phantom_param_id: i32,
    pub sp_effect_id0: i32,
    pub sp_effect_id1: i32,
    pub sp_effect_id2: i32,
    pub sp_effect_id3: i32,
    pub sp_effect_id4: i32,
    pub sp_effect_id5: i32,
    pub sp_effect_id6: i32,
    pub sp_effect_id7: i32,
    pub sp_effect_id8: i32,
    pub sp_effect_id9: i32,
    pub sos_sign_sfx_id: i32,
    pub my_sos_sign_sfx_id: i32,
    pub summon_start_anim_id: i32,
    pub itemlot_param_id: i32,
    pub voice_chat_group: u8,
    pub role_name_color: u8,
    pub pad1: [u8; 2],
    pub role_name_id: i32,
    pub threat_lv: u32,
    pub phantom_param_id_vow_rank1: i32,
    pub phantom_param_id_vow_rank2: i32,
    pub phantom_param_id_vow_rank3: i32,
    pub sp_effect_id_vow_rank0: i32,
    pub sp_effect_id_vow_rank1: i32,
    pub sp_effect_id_vow_rank2: i32,
    pub sp_effect_id_vow_rank3: i32,
    pub sign_phantom_id: i32,
    pub non_player_summon_start_anim_id: i32,
    pub pad2: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct RollingObjLotParam {
    pub disable_param_reserve2: [u8; 3],
    pub asset_id_0: i32,
    pub asset_id_1: i32,
    pub asset_id_2: i32,
    pub asset_id_3: i32,
    pub asset_id_4: i32,
    pub asset_id_5: i32,
    pub asset_id_6: i32,
    pub asset_id_7: i32,
    pub create_weight_0: u8,
    pub create_weight_1: u8,
    pub create_weight_2: u8,
    pub create_weight_3: u8,
    pub create_weight_4: u8,
    pub create_weight_5: u8,
    pub create_weight_6: u8,
    pub create_weight_7: u8,
    pub reserve_0: [u8; 20],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct RuntimeBoneControlParam {
    pub chr_id: u32,
    pub ctrl_type: u8,
    pub pad: [u8; 11],
    pub apply_bone: [u8; 32],
    pub target_bone1: [u8; 32],
    pub target_bone2: [u8; 32],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SeActivationRangeParam {
    pub activate_range: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SeMaterialConvertParam {
    pub se_material_id: u8,
    pub pad: [u8; 3],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SfxBlockResShareParam {
    pub share_block_rs_map_uid_val: u32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ShopLineupParam {
    pub equip_id: i32,
    pub value: i32,
    pub mtrl_id: i32,
    pub event_flag_for_stock: u32,
    pub event_flag_for_release: u32,
    pub sell_quantity: i16,
    pub pad3: [u8; 1],
    pub equip_type: u8,
    pub cost_type: u8,
    pub pad1: [u8; 1],
    pub set_num: u16,
    pub value_add: i32,
    pub value_magnification: f32,
    pub icon_id: i32,
    pub name_msg_id: i32,
    pub menu_title_msg_id: i32,
    pub menu_icon_id: i16,
    pub pad2: [u8; 2],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SignPuddleParam {
    pub disable_param_reserve2: [u8; 3],
    pub match_area_id: i32,
    pub pad1: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SoundAssetSoundObjEnableDistParam {
    pub sound_obj_enable_dist: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SoundAutoEnvSoundGroupParam {
    pub sound_no: i32,
    pub expand_range: f32,
    pub follow_speed: f32,
    pub follow_rate: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SoundAutoReverbEvaluationDistParam {
    pub no_hit_dist: f32,
    pub is_collect_no_hit_point: u8,
    pub is_collect_outdoor_point: u8,
    pub is_collect_floor_point: u8,
    pub dist_val_calc_type: u8,
    pub enable_life_time: f32,
    pub max_dist_record_num: u32,
    pub ignore_dist_num_for_max: u32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SoundAutoReverbSelectParam {
    pub reverb_type: u32,
    pub area_no: i32,
    pub indoor_outdoor: i8,
    pub use_dist_no_a: i8,
    pub use_dist_no_b: i8,
    pub pad0: [u8; 1],
    pub dist_min_a: f32,
    pub dist_max_a: f32,
    pub dist_min_b: f32,
    pub dist_max_b: f32,
    pub no_hit_num_min: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SoundChrPhysicsSeParam {
    pub disable_param_reserve2: [u8; 3],
    pub contact_land_se_id: i32,
    pub contact_land_add_se_id: i32,
    pub contact_land_play_num: i32,
    pub is_enable_play_count_per_rigid: u8,
    pub pad: [u8; 3],
    pub contact_land_min_impuse: f32,
    pub contact_land_min_speed: f32,
    pub contact_player_se_id: i32,
    pub contact_player_min_impuse: f32,
    pub contact_player_min_speed: f32,
    pub contact_check_rigid_idx0: i8,
    pub contact_check_rigid_idx1: i8,
    pub contact_check_rigid_idx2: i8,
    pub contact_check_rigid_idx3: i8,
    pub contact_check_rigid_idx4: i8,
    pub contact_check_rigid_idx5: i8,
    pub contact_check_rigid_idx6: i8,
    pub contact_check_rigid_idx7: i8,
    pub contact_check_rigid_idx8: i8,
    pub contact_check_rigid_idx9: i8,
    pub contact_check_rigid_idx10: i8,
    pub contact_check_rigid_idx11: i8,
    pub contact_check_rigid_idx12: i8,
    pub contact_check_rigid_idx13: i8,
    pub contact_check_rigid_idx14: i8,
    pub contact_check_rigid_idx15: i8,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SoundCommonIngameParam {
    pub param_key_str: [u8; 32],
    pub param_value_str: [u8; 32],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SoundCommonSystemParam {
    pub param_key_str: [u8; 32],
    pub param_value_str: [u8; 32],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SoundCutsceneParam {
    pub disable_param_reserve2: [u8; 3],
    pub reverb_type: u8,
    pub pad0: [u8; 3],
    pub bgm_behavior_type_on_start: i16,
    pub one_shot_bgm_behavior_on_start: i16,
    pub post_play_se_id: i32,
    pub post_play_se_id_for_skip: i32,
    pub enter_map_mute_stop_time_on_draw_cutscene: f32,
    pub reserved: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SpeedtreeModel {
    pub min_fade_leaf: f32,
    pub min_fade_frond: f32,
    pub min_fade_branch: f32,
    pub min_translucency_leaf: f32,
    pub max_translucency_leaf: f32,
    pub min_translucency_frond: f32,
    pub max_translucency_frond: f32,
    pub min_translucency_branch: f32,
    pub max_translucency_branch: f32,
    pub billboard_back_specular_weaken_param: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SpEffect {
    pub icon_id: i32,
    pub condition_hp: f32,
    pub effect_endurance: f32,
    pub motion_interval: f32,
    pub max_hp_rate: f32,
    pub max_mp_rate: f32,
    pub max_stamina_rate: f32,
    pub slash_damage_cut_rate: f32,
    pub blow_damage_cut_rate: f32,
    pub thrust_damage_cut_rate: f32,
    pub neutral_damage_cut_rate: f32,
    pub magic_damage_cut_rate: f32,
    pub fire_damage_cut_rate: f32,
    pub thunder_damage_cut_rate: f32,
    pub physics_attack_rate: f32,
    pub magic_attack_rate: f32,
    pub fire_attack_rate: f32,
    pub thunder_attack_rate: f32,
    pub physics_attack_power_rate: f32,
    pub magic_attack_power_rate: f32,
    pub fire_attack_power_rate: f32,
    pub thunder_attack_power_rate: f32,
    pub physics_attack_power: i32,
    pub magic_attack_power: i32,
    pub fire_attack_power: i32,
    pub thunder_attack_power: i32,
    pub physics_diffence_rate: f32,
    pub magic_diffence_rate: f32,
    pub fire_diffence_rate: f32,
    pub thunder_diffence_rate: f32,
    pub physics_diffence: i32,
    pub magic_diffence: i32,
    pub fire_diffence: i32,
    pub thunder_diffence: i32,
    pub no_guard_damage_rate: f32,
    pub vital_spot_change_rate: f32,
    pub normal_spot_change_rate: f32,
    pub look_at_target_pos_offset: f32,
    pub behavior_id: i32,
    pub change_hp_rate: f32,
    pub change_hp_point: i32,
    pub change_mp_rate: f32,
    pub change_mp_point: i32,
    pub mp_recover_change_speed: i32,
    pub change_stamina_rate: f32,
    pub change_stamina_point: i32,
    pub stamina_recover_change_speed: i32,
    pub magic_effect_time_change: f32,
    pub inside_durability: i32,
    pub max_durability: i32,
    pub stamina_attack_rate: f32,
    pub poizon_attack_power: i32,
    pub disease_attack_power: i32,
    pub blood_attack_power: i32,
    pub curse_attack_power: i32,
    pub fall_damage_rate: f32,
    pub soul_rate: f32,
    pub equip_weight_change_rate: f32,
    pub all_item_weight_change_rate: f32,
    pub soul: i32,
    pub anim_id_offset: i32,
    pub have_soul_rate: f32,
    pub target_priority: f32,
    pub sight_search_enemy_rate: f32,
    pub hearing_search_enemy_rate: f32,
    pub grabity_rate: f32,
    pub regist_poizon_change_rate: f32,
    pub regist_disease_change_rate: f32,
    pub regist_blood_change_rate: f32,
    pub regist_curse_change_rate: f32,
    pub soul_steal_rate: f32,
    pub life_reduction_rate: f32,
    pub hp_recover_rate: f32,
    pub replace_sp_effect_id: i32,
    pub cycle_occurrence_sp_effect_id: i32,
    pub atk_occurrence_sp_effect_id: i32,
    pub guard_def_flick_power_rate: f32,
    pub guard_stamina_cut_rate: f32,
    pub ray_cast_passed_time: i16,
    pub magic_sub_category_change1: u8,
    pub magic_sub_category_change2: u8,
    pub bow_dist_rate: i16,
    pub sp_category: u16,
    pub category_priority: u8,
    pub save_category: i8,
    pub change_magic_slot: u8,
    pub change_miracle_slot: u8,
    pub hero_point_damage: i8,
    pub def_flick_power: u8,
    pub flick_damage_cut_rate: u8,
    pub blood_damage_rate: u8,
    pub dmg_lv_none: i8,
    pub dmg_lv_s: i8,
    pub dmg_lv_m: i8,
    pub dmg_lv_l: i8,
    pub dmg_lv_blow_m: i8,
    pub dmg_lv_push: i8,
    pub dmg_lv_strike: i8,
    pub dmg_lv_blow_s: i8,
    pub dmg_lv_min: i8,
    pub dmg_lv_uppercut: i8,
    pub dmg_lv_blow_ll: i8,
    pub dmg_lv_breath: i8,
    pub atk_attribute: u8,
    pub sp_attribute: u8,
    pub state_info: u16,
    pub wep_param_change: u8,
    pub move_type: u8,
    pub life_reduction_type: u16,
    pub throw_condition: u8,
    pub add_behavior_judge_id_condition: i8,
    pub freeze_damage_rate: u8,
    #[bitflag(effectTargetSelf, 0)]
    #[bitflag(effectTargetFriend, 1)]
    #[bitflag(effectTargetEnemy, 2)]
    #[bitflag(effectTargetPlayer, 3)]
    #[bitflag(effectTargetAI, 4)]
    #[bitflag(effectTargetLive, 5)]
    #[bitflag(effectTargetGhost, 6)]
    #[bitflag(disableSleep, 7)]
    pub bitfield0: u8,
    #[bitflag(disableMadness, 0)]
    #[bitflag(effectTargetAttacker, 1)]
    #[bitflag(dispIconNonactive, 2)]
    #[bitflag(regainGaugeDamage, 3)]
    #[bitflag(bAdjustMagicAblity, 4)]
    #[bitflag(bAdjustFaithAblity, 5)]
    #[bitflag(bGameClearBonus, 6)]
    #[bitflag(magParamChange, 7)]
    pub bitfield1: u8,
    #[bitflag(miracleParamChange, 0)]
    #[bitflag(clearSoul, 1)]
    #[bitflag(requestSOS, 2)]
    #[bitflag(requestBlackSOS, 3)]
    #[bitflag(requestForceJoinBlackSOS, 4)]
    #[bitflag(requestKickSession, 5)]
    #[bitflag(requestLeaveSession, 6)]
    #[bitflag(requestNpcInveda, 7)]
    pub bitfield2: u8,
    #[bitflag(noDead, 0)]
    #[bitflag(bCurrHPIndependeMaxHP, 1)]
    #[bitflag(corrosionIgnore, 2)]
    #[bitflag(sightSearchCutIgnore, 3)]
    #[bitflag(hearingSearchCutIgnore, 4)]
    #[bitflag(antiMagicIgnore, 5)]
    #[bitflag(fakeTargetIgnore, 6)]
    #[bitflag(fakeTargetIgnoreUndead, 7)]
    pub bitfield3: u8,
    #[bitflag(fakeTargetIgnoreAnimal, 0)]
    #[bitflag(grabityIgnore, 1)]
    #[bitflag(disablePoison, 2)]
    #[bitflag(disableDisease, 3)]
    #[bitflag(disableBlood, 4)]
    #[bitflag(disableCurse, 5)]
    #[bitflag(enableCharm, 6)]
    #[bitflag(enableLifeTime, 7)]
    pub bitfield4: u8,
    #[bitflag(bAdjustStrengthAblity, 0)]
    #[bitflag(bAdjustAgilityAblity, 1)]
    #[bitflag(eraseOnBonfireRecover, 2)]
    #[bitflag(throwAttackParamChange, 3)]
    #[bitflag(requestLeaveColiseumSession, 4)]
    #[bitflag(isExtendSpEffectLife, 5)]
    #[bitflag(hasTarget, 6)]
    #[bitflag(replanningOnFire, 7)]
    pub bitfield5: u8,
    #[bitflag(vowType0, 0)]
    #[bitflag(vowType1, 1)]
    #[bitflag(vowType2, 2)]
    #[bitflag(vowType3, 3)]
    #[bitflag(vowType4, 4)]
    #[bitflag(vowType5, 5)]
    #[bitflag(vowType6, 6)]
    #[bitflag(vowType7, 7)]
    pub bitfield6: u8,
    #[bitflag(vowType8, 0)]
    #[bitflag(vowType9, 1)]
    #[bitflag(vowType10, 2)]
    #[bitflag(vowType11, 3)]
    #[bitflag(vowType12, 4)]
    #[bitflag(vowType13, 5)]
    #[bitflag(vowType14, 6)]
    #[bitflag(vowType15, 7)]
    pub bitfield7: u8,
    pub rep_atk_dmg_lv: i8,
    pub sight_search_rate: f32,
    #[bitflag(effectTargetOpposeTarget, 0)]
    #[bitflag(effectTargetFriendlyTarget, 1)]
    #[bitflag(effectTargetSelfTarget, 2)]
    #[bitflag(effectTargetPcHorse, 3)]
    #[bitflag(effectTargetPcDeceased, 4)]
    #[bitflag(isContractSpEffectLife, 5)]
    #[bitflag(isWaitModeDelete, 6)]
    #[bitflag(isIgnoreNoDamage, 7)]
    pub bitfield8: u8,
    pub change_team_type: i8,
    pub dmypoly_id: i16,
    pub vfx_id: i32,
    pub accumu_over_fire_id: i32,
    pub accumu_over_val: i32,
    pub accumu_under_fire_id: i32,
    pub accumu_under_val: i32,
    pub accumu_val: i32,
    pub eye_ang_x: u8,
    pub eye_ang_y: u8,
    pub add_deceased_lv: i16,
    pub vfx_id1: i32,
    pub vfx_id2: i32,
    pub vfx_id3: i32,
    pub vfx_id4: i32,
    pub vfx_id5: i32,
    pub vfx_id6: i32,
    pub vfx_id7: i32,
    pub freeze_attack_power: i32,
    pub appear_ai_sound_id: i32,
    pub add_foot_effect_sfx_id: i16,
    pub dexterity_cancel_system_only_add_dexterity: i8,
    pub team_offense_effectivity: i8,
    pub toughness_damage_cut_rate: f32,
    pub weak_dmg_rate_a: f32,
    pub weak_dmg_rate_b: f32,
    pub weak_dmg_rate_c: f32,
    pub weak_dmg_rate_d: f32,
    pub weak_dmg_rate_e: f32,
    pub weak_dmg_rate_f: f32,
    pub dark_damage_cut_rate: f32,
    pub dark_diffence_rate: f32,
    pub dark_diffence: i32,
    pub dark_attack_rate: f32,
    pub dark_attack_power_rate: f32,
    pub dark_attack_power: i32,
    pub anti_dark_sight_radius: f32,
    pub anti_dark_sight_dmypoly_id: i32,
    pub condition_hp_rate: f32,
    pub consume_stamina_rate: f32,
    pub item_drop_rate: f32,
    pub change_poison_resist_point: i32,
    pub change_disease_resist_point: i32,
    pub change_blood_resist_point: i32,
    pub change_curse_resist_point: i32,
    pub change_freeze_resist_point: i32,
    pub slash_attack_rate: f32,
    pub blow_attack_rate: f32,
    pub thrust_attack_rate: f32,
    pub neutral_attack_rate: f32,
    pub slash_attack_power_rate: f32,
    pub blow_attack_power_rate: f32,
    pub thrust_attack_power_rate: f32,
    pub neutral_attack_power_rate: f32,
    pub slash_attack_power: i32,
    pub blow_attack_power: i32,
    pub thrust_attack_power: i32,
    pub neutral_attack_power: i32,
    pub change_strength_point: i32,
    pub change_agility_point: i32,
    pub change_magic_point: i32,
    pub change_faith_point: i32,
    pub change_luck_point: i32,
    pub recover_arts_point_str: i8,
    pub recover_arts_point_dex: i8,
    pub recover_arts_point_magic: i8,
    pub recover_arts_point_miracle: i8,
    pub madness_damage_rate: u8,
    #[bitflag(isUseStatusAilmentAtkPowerCorrect, 0)]
    #[bitflag(isUseAtkParamAtkPowerCorrect, 1)]
    #[bitflag(dontDeleteOnDead, 2)]
    #[bitflag(disableFreeze, 3)]
    #[bitflag(isDisableNetSync, 4)]
    #[bitflag(shamanParamChange, 5)]
    #[bitflag(isStopSearchedNotify, 6)]
    #[bitflag(isCheckAboveShadowTest, 7)]
    pub bitfield9: u8,
    pub add_behavior_judge_id_add: u16,
    pub sa_receive_damage_rate: f32,
    pub def_player_dmg_correct_rate_physics: f32,
    pub def_player_dmg_correct_rate_magic: f32,
    pub def_player_dmg_correct_rate_fire: f32,
    pub def_player_dmg_correct_rate_thunder: f32,
    pub def_player_dmg_correct_rate_dark: f32,
    pub def_enemy_dmg_correct_rate_physics: f32,
    pub def_enemy_dmg_correct_rate_magic: f32,
    pub def_enemy_dmg_correct_rate_fire: f32,
    pub def_enemy_dmg_correct_rate_thunder: f32,
    pub def_enemy_dmg_correct_rate_dark: f32,
    pub def_obj_dmg_correct_rate: f32,
    pub atk_player_dmg_correct_rate_physics: f32,
    pub atk_player_dmg_correct_rate_magic: f32,
    pub atk_player_dmg_correct_rate_fire: f32,
    pub atk_player_dmg_correct_rate_thunder: f32,
    pub atk_player_dmg_correct_rate_dark: f32,
    pub atk_enemy_dmg_correct_rate_physics: f32,
    pub atk_enemy_dmg_correct_rate_magic: f32,
    pub atk_enemy_dmg_correct_rate_fire: f32,
    pub atk_enemy_dmg_correct_rate_thunder: f32,
    pub atk_enemy_dmg_correct_rate_dark: f32,
    pub regist_freeze_change_rate: f32,
    pub invocation_conditions_state_change1: u16,
    pub invocation_conditions_state_change2: u16,
    pub invocation_conditions_state_change3: u16,
    pub hearing_ai_sound_level: i16,
    pub chr_proxy_height_rate: f32,
    pub add_aware_point_correct_value_for_me: f32,
    pub add_aware_point_correct_value_for_target: f32,
    pub sight_search_enemy_add: f32,
    pub sight_search_add: f32,
    pub hearing_search_add: f32,
    pub hearing_search_rate: f32,
    pub hearing_search_enemy_add: f32,
    pub value_magnification: f32,
    pub arts_consumption_rate: f32,
    pub magic_consumption_rate: f32,
    pub shaman_consumption_rate: f32,
    pub miracle_consumption_rate: f32,
    pub change_hp_estus_flask_rate: i32,
    pub change_hp_estus_flask_point: i32,
    pub change_mp_estus_flask_rate: i32,
    pub change_mp_estus_flask_point: i32,
    pub change_hp_estus_flask_correct_rate: f32,
    pub change_mp_estus_flask_correct_rate: f32,
    pub apply_id_on_get_soul: i32,
    pub extend_life_rate: f32,
    pub contract_life_rate: f32,
    pub def_object_attack_power_rate: f32,
    pub effect_end_delete_decal_group_id: i16,
    pub add_life_force_status: i8,
    pub add_willpower_status: i8,
    pub add_endure_status: i8,
    pub add_vitality_status: i8,
    pub add_strength_status: i8,
    pub add_dexterity_status: i8,
    pub add_magic_status: i8,
    pub add_faith_status: i8,
    pub add_luck_status: i8,
    pub delete_criteria_damage: u8,
    pub magic_sub_category_change3: u8,
    pub sp_attribute_variation_value: u8,
    pub atk_flick_power: u8,
    pub wet_condition_depth: u8,
    pub change_sa_recovery_velocity: f32,
    pub regain_rate: f32,
    pub sa_attack_power_rate: f32,
    pub sleep_attack_power: i32,
    pub madness_attack_power: i32,
    pub regist_sleep_change_rate: f32,
    pub regist_madness_change_rate: f32,
    pub change_sleep_resist_point: i32,
    pub change_madness_resist_point: i32,
    pub sleep_damage_rate: u8,
    pub apply_parts_group: u8,
    pub pad2: [u8; 1],
    pub change_super_armor_point: f32,
    pub change_sa_point: f32,
    pub huge_enemy_pickup_height_overwrite: f32,
    pub poison_def_damage_rate: f32,
    pub disease_def_damage_rate: f32,
    pub blood_def_damage_rate: f32,
    pub curse_def_damage_rate: f32,
    pub freeze_def_damage_rate: f32,
    pub sleep_def_damage_rate: f32,
    pub madness_def_damage_rate: f32,
    pub overwrite_max_backhome_dist: u16,
    pub overwrite_backhome_dist: u16,
    pub overwrite_backhome_battle_dist: u16,
    pub overwrite_back_home_look_target_dist: u16,
    pub goods_consumption_rate: f32,
    pub pad3: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SpEffectSetParam {
    pub sp_effect_id1: i32,
    pub sp_effect_id2: i32,
    pub sp_effect_id3: i32,
    pub sp_effect_id4: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SpEffectVfx {
    pub midst_sfx_id: i32,
    pub midst_se_id: i32,
    pub init_sfx_id: i32,
    pub init_se_id: i32,
    pub finish_sfx_id: i32,
    pub finish_se_id: i32,
    pub camouflage_begin_dist: f32,
    pub camouflage_end_dist: f32,
    pub transform_protector_id: i32,
    pub midst_dmy_id: i16,
    pub init_dmy_id: i16,
    pub finish_dmy_id: i16,
    pub effect_type: u8,
    pub soul_param_id_for_wep_enchant: u8,
    pub play_category: u8,
    pub play_priority: u8,
    #[bitflag(existEffectForLarge, 0)]
    #[bitflag(existEffectForSoul, 1)]
    #[bitflag(effectInvisibleAtCamouflage, 2)]
    #[bitflag(useCamouflage, 3)]
    #[bitflag(invisibleAtFriendCamouflage, 4)]
    #[bitflag(isHideFootEffect_forCamouflage, 5)]
    #[bitflag(halfCamouflage, 6)]
    #[bitflag(isFullBodyTransformProtectorId, 7)]
    pub bitfield0: u8,
    #[bitflag(isInvisibleWeapon, 0)]
    #[bitflag(isSilence, 1)]
    #[bitflag(isMidstFullbody, 2)]
    #[bitflag(isInitFullbody, 3)]
    #[bitflag(isFinishFullbody, 4)]
    #[bitflag(isVisibleDeadChr, 5)]
    #[bitflag(isUseOffsetEnchantSfxSize, 6)]
    #[bitflag(pad_1, 7)]
    pub bitfield1: u8,
    pub decal_id1: i32,
    pub decal_id2: i32,
    pub foot_effect_priority: u8,
    pub foot_effect_offset: u8,
    pub trace_sfx_id_offset_type: u8,
    pub force_deceased_type: u8,
    pub enchant_start_dmy_id_0: i32,
    pub enchant_end_dmy_id_0: i32,
    pub enchant_start_dmy_id_1: i32,
    pub enchant_end_dmy_id_1: i32,
    pub enchant_start_dmy_id_2: i32,
    pub enchant_end_dmy_id_2: i32,
    pub enchant_start_dmy_id_3: i32,
    pub enchant_end_dmy_id_3: i32,
    pub enchant_start_dmy_id_4: i32,
    pub enchant_end_dmy_id_4: i32,
    pub enchant_start_dmy_id_5: i32,
    pub enchant_end_dmy_id_5: i32,
    pub enchant_start_dmy_id_6: i32,
    pub enchant_end_dmy_id_6: i32,
    pub enchant_start_dmy_id_7: i32,
    pub enchant_end_dmy_id_7: i32,
    pub sfx_id_offset_type: u8,
    pub phantom_param_overwrite_type: u8,
    pub camouflage_min_alpha: u8,
    pub wet_aspect_type: u8,
    pub phantom_param_overwrite_id: i32,
    pub material_param_id: i32,
    pub material_param_init_value: f32,
    pub material_param_target_value: f32,
    pub material_param_fade_time: f32,
    pub foot_decal_material_offset_overwrite_id: i16,
    pub pad: [u8; 14],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct SwordArtsParam {
    pub disable_param_reserve2: [u8; 3],
    pub sword_arts_type: u8,
    pub arts_speed_type: u8,
    pub ref_status: i8,
    pub use_point_l1: i8,
    pub use_point_l2: i8,
    pub use_point_r1: i8,
    pub use_point_r2: i8,
    pub text_id: i32,
    pub use_magic_point_l1: i16,
    pub use_magic_point_l2: i16,
    pub use_magic_point_r1: i16,
    pub use_magic_point_r2: i16,
    pub shield_icon_type: i8,
    pub pad: [u8; 1],
    pub icon_id: u16,
    pub ai_usage_id: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct TalkParam {
    pub disable_param_reserve2: [u8; 3],
    pub msg_id: i32,
    pub voice_id: i32,
    pub sp_effect_id0: i32,
    pub motion_id0: i32,
    pub sp_effect_id1: i32,
    pub motion_id1: i32,
    pub return_pos: i32,
    pub reaction_id: i32,
    pub event_id: i32,
    pub msg_id_female: i32,
    pub voice_id_female: i32,
    pub lip_sync_start: i16,
    pub lip_sync_time: i16,
    pub pad2: [u8; 4],
    pub timeout: f32,
    pub talk_animation_id: i32,
    pub pad1: [u8; 31],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ThrowDirectionSfxParam {
    pub sfx_id_00: i32,
    pub sfx_id_01: i32,
    pub sfx_id_02: i32,
    pub sfx_id_03: i32,
    pub sfx_id_04: i32,
    pub sfx_id_05: i32,
    pub sfx_id_06: i32,
    pub sfx_id_07: i32,
    pub sfx_id_08: i32,
    pub sfx_id_09: i32,
    pub sfx_id_10: i32,
    pub sfx_id_11: i32,
    pub sfx_id_12: i32,
    pub sfx_id_13: i32,
    pub sfx_id_14: i32,
    pub sfx_id_15: i32,
    pub sfx_id_16: i32,
    pub sfx_id_17: i32,
    pub sfx_id_18: i32,
    pub sfx_id_19: i32,
    pub sfx_id_20: i32,
    pub sfx_id_21: i32,
    pub sfx_id_22: i32,
    pub sfx_id_23: i32,
    pub sfx_id_24: i32,
    pub sfx_id_25: i32,
    pub sfx_id_26: i32,
    pub sfx_id_27: i32,
    pub sfx_id_28: i32,
    pub sfx_id_29: i32,
    pub sfx_id_30: i32,
    pub pad1: [u8; 20],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ThrowParam {
    pub atk_chr_id: i32,
    pub def_chr_id: i32,
    pub dist: f32,
    pub diff_ang_min: f32,
    pub diff_ang_max: f32,
    pub upper_yrange: f32,
    pub lower_yrange: f32,
    pub diff_ang_my_to_def: f32,
    pub throw_type_id: i32,
    pub atk_anim_id: i32,
    pub def_anim_id: i32,
    pub esc_hp: u16,
    pub self_esc_cycle_time: u16,
    pub sphere_cast_radius_rate_top: u16,
    pub sphere_cast_radius_rate_low: u16,
    pub pad_type: u8,
    pub atk_enable_state: u8,
    pub throw_following_type: u8,
    pub pad2: [u8; 1],
    pub throw_type: u8,
    pub self_esc_cycle_cnt: u8,
    pub dmy_has_chr_dir_type: u8,
    pub atk_sorb_dmy_id: i16,
    pub def_sorb_dmy_id: i16,
    pub dist_start: f32,
    pub diff_ang_min_start: f32,
    pub diff_ang_max_start: f32,
    pub upper_yrange_start: f32,
    pub lower_yrange_start: f32,
    pub diff_ang_my_to_def_start: f32,
    pub judge_range_base_pos_dmy_id1: i32,
    pub judge_range_base_pos_dmy_id2: i32,
    pub adsrob_model_pos_interpolation_time: f32,
    pub throw_following_end_easing_time: f32,
    pub pad1: [u8; 24],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct ToughnessParam {
    pub correction_rate: f32,
    pub min_toughness: u16,
    pub is_non_effective_correction_for_min: u8,
    pub pad2: [u8; 1],
    pub sp_effect_id: i32,
    pub pro_correction_rate: f32,
    pub pad1: [u8; 16],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct TutorialParam {
    pub disable_param_reserve2: [u8; 3],
    pub menu_type: u8,
    pub trigger_type: u8,
    pub repeat_type: u8,
    pub pad1: [u8; 1],
    pub image_id: u16,
    pub pad2: [u8; 2],
    pub unlock_event_flag_id: u32,
    pub text_id: i32,
    pub display_min_time: f32,
    pub display_time: f32,
    pub pad3: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WaypointParam {
    pub attribute1: i16,
    pub attribute2: i16,
    pub attribute3: i16,
    pub attribute4: i16,
    pub padding4: [u8; 8],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WeatherAssetCreateParam {
    pub asset_id: u32,
    pub slot_no: u32,
    pub create_condition_type: u8,
    pub padding0: [u8; 3],
    pub transition_src_weather: i16,
    pub transition_dst_weather: i16,
    pub elapsed_time_checkweather: i16,
    pub padding1: [u8; 2],
    pub elapsed_time: f32,
    pub create_delay_time: f32,
    pub create_probability: u32,
    pub life_time: f32,
    pub fade_time: f32,
    pub enable_create_time_min: f32,
    pub enable_create_time_max: f32,
    pub create_point0: i16,
    pub create_point1: i16,
    pub create_point2: i16,
    pub create_point3: i16,
    pub create_asset_limit_id0: i8,
    pub create_asset_limit_id1: i8,
    pub create_asset_limit_id2: i8,
    pub create_asset_limit_id3: i8,
    pub reserved2: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WeatherAssetReplaceParam {
    pub map_id: u32,
    pub transition_src_weather: i16,
    pub padding0: [u8; 2],
    pub is_fire_ash: u8,
    pub padding1: [u8; 3],
    pub reserved2: u32,
    pub asset_id0: i32,
    pub asset_id1: i32,
    pub asset_id2: i32,
    pub asset_id3: i32,
    pub asset_id4: i32,
    pub asset_id5: i32,
    pub asset_id6: i32,
    pub asset_id7: i32,
    pub reserved0: [u8; 8],
    pub create_asset_limit_id0: i8,
    pub create_asset_limit_id1: i8,
    pub create_asset_limit_id2: i8,
    pub create_asset_limit_id3: i8,
    pub reserved1: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WeatherLotParam {
    pub disable_param_reserve2: [u8; 3],
    pub weather_type0: i16,
    pub weather_type1: i16,
    pub weather_type2: i16,
    pub weather_type3: i16,
    pub weather_type4: i16,
    pub weather_type5: i16,
    pub weather_type6: i16,
    pub weather_type7: i16,
    pub weather_type8: i16,
    pub weather_type9: i16,
    pub weather_type10: i16,
    pub weather_type11: i16,
    pub weather_type12: i16,
    pub weather_type13: i16,
    pub weather_type14: i16,
    pub weather_type15: i16,
    pub lottery_weight0: u16,
    pub lottery_weight1: u16,
    pub lottery_weight2: u16,
    pub lottery_weight3: u16,
    pub lottery_weight4: u16,
    pub lottery_weight5: u16,
    pub lottery_weight6: u16,
    pub lottery_weight7: u16,
    pub lottery_weight8: u16,
    pub lottery_weight9: u16,
    pub lottery_weight10: u16,
    pub lottery_weight11: u16,
    pub lottery_weight12: u16,
    pub lottery_weight13: u16,
    pub lottery_weight14: u16,
    pub lottery_weight15: u16,
    pub timezone_limit: u8,
    pub timezone_start_hour: u8,
    pub timezone_start_minute: u8,
    pub timezone_end_hour: u8,
    pub timezone_end_minute: u8,
    pub reserve: [u8; 9],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WeatherLotTexParam {
    pub disable_param_reserve2: [u8; 3],
    pub src_r: u8,
    pub src_g: u8,
    pub src_b: u8,
    pub pad1: [u8; 1],
    pub weather_log_id: i32,
    pub pad2: [u8; 4],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WeatherParam {
    pub sfx_id: i32,
    pub wind_sfx_id: i32,
    pub ground_hit_sfx_id: i32,
    pub sound_id: i32,
    pub wet_time: f32,
    pub gparam_id: u32,
    pub next_lot_ingame_seconds_min: u32,
    pub next_lot_ingame_seconds_max: u32,
    pub wet_sp_effect_id00: i32,
    pub wet_sp_effect_id01: i32,
    pub wet_sp_effect_id02: i32,
    pub wet_sp_effect_id03: i32,
    pub wet_sp_effect_id04: i32,
    pub sfx_id_inoor: i32,
    pub sfx_id_outdoor: i32,
    pub ai_sight_rate: f32,
    pub dist_view_weather_gparam_override_weight: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WepAbsorpPosParam {
    pub disable_param_reserve2: [u8; 3],
    pub hang_pos_type: u8,
    pub is_skeleton_bind: u8,
    pub pad0: [u8; 2],
    pub right_0: i16,
    pub left_0: i16,
    pub both_0: i16,
    pub left_hang_0: i16,
    pub right_hang_0: i16,
    pub right_1: i16,
    pub left_1: i16,
    pub both_1: i16,
    pub left_hang_1: i16,
    pub right_hang_1: i16,
    pub right_2: i16,
    pub left_2: i16,
    pub both_2: i16,
    pub left_hang_2: i16,
    pub right_hang_2: i16,
    pub right_3: i16,
    pub left_3: i16,
    pub both_3: i16,
    pub left_hang_3: i16,
    pub right_hang_3: i16,
    pub wep_invisible_type_0: u8,
    pub wep_invisible_type_1: u8,
    pub wep_invisible_type_2: u8,
    pub wep_invisible_type_3: u8,
    pub left_both_0: i16,
    pub left_both_1: i16,
    pub left_both_2: i16,
    pub left_both_3: i16,
    pub disp_pos_type_right_0: u8,
    pub disp_pos_type_left_0: u8,
    pub disp_pos_type_right_both_0: u8,
    pub disp_pos_type_left_both_0: u8,
    pub disp_pos_type_right_hang_0: u8,
    pub disp_pos_type_left_hang_0: u8,
    pub disp_pos_type_right_1: u8,
    pub disp_pos_type_left_1: u8,
    pub disp_pos_type_right_both_1: u8,
    pub disp_pos_type_left_both_1: u8,
    pub disp_pos_type_right_hang_1: u8,
    pub disp_pos_type_left_hang_1: u8,
    pub disp_pos_type_right_2: u8,
    pub disp_pos_type_left_2: u8,
    pub disp_pos_type_right_both_2: u8,
    pub disp_pos_type_left_both_2: u8,
    pub disp_pos_type_right_hang_2: u8,
    pub disp_pos_type_left_hang_2: u8,
    pub disp_pos_type_right_3: u8,
    pub disp_pos_type_left_3: u8,
    pub disp_pos_type_right_both_3: u8,
    pub disp_pos_type_left_both_3: u8,
    pub disp_pos_type_right_hang_3: u8,
    pub disp_pos_type_left_hang_3: u8,
    pub reserve: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WetAspectParam {
    pub base_color_r: u8,
    pub base_color_g: u8,
    pub base_color_b: u8,
    pub reserve_0: [u8; 1],
    pub base_color_a: f32,
    pub metallic: u8,
    pub reserve_1: [u8; 1],
    pub reserve_2: [u8; 1],
    pub reserve_3: [u8; 1],
    pub metallic_rate: f32,
    pub shininess_rate: f32,
    pub shininess: u8,
    pub reserve_4: [u8; 11],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WhiteSignCoolTimeParam {
    pub limitation_time_normal: f32,
    pub limitation_time_normal_dried_finger: f32,
    pub limitation_time_guardian: f32,
    pub limitation_time_guardian_dried_finger: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WorldMapLegacyConvParam {
    pub disable_param_reserve2: [u8; 3],
    pub src_area_no: u8,
    pub src_grid_xno: u8,
    pub src_grid_zno: u8,
    pub pad1: [u8; 1],
    pub src_pos_x: f32,
    pub src_pos_y: f32,
    pub src_pos_z: f32,
    pub dst_area_no: u8,
    pub dst_grid_xno: u8,
    pub dst_grid_zno: u8,
    pub pad2: [u8; 1],
    pub dst_pos_x: f32,
    pub dst_pos_y: f32,
    pub dst_pos_z: f32,
    pub pad4: [u8; 11],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WorldMapPieceParam {
    pub disable_param_reserve2: [u8; 3],
    pub open_event_flag_id: u32,
    pub open_travel_area_left: f32,
    pub open_travel_area_right: f32,
    pub open_travel_area_top: f32,
    pub open_travel_area_bottom: f32,
    pub acquisition_event_flag_id: u32,
    pub acquisition_event_scale: f32,
    pub acquisition_event_center_x: f32,
    pub acquisition_event_center_y: f32,
    pub acquisition_event_res_scale: f32,
    pub acquisition_event_res_offset_x: f32,
    pub acquisition_event_res_offset_y: f32,
    pub pad: [u8; 12],
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WorldMapPlaceNameParam {
    pub disable_param_reserve2: [u8; 3],
    pub world_map_piece_id: i32,
    pub text_id: i32,
    pub pad1: [u8; 4],
    pub area_no: u8,
    pub grid_xno: u8,
    pub grid_zno: u8,
    pub pad2: [u8; 1],
    pub pos_x: f32,
    pub pos_y: f32,
    pub pos_z: f32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WorldMapPointParam {
    pub disable_param_reserve2: [u8; 3],
    pub event_flag_id: u32,
    pub dist_view_event_flag_id: u32,
    pub icon_id: u16,
    pub bgm_place_type: i16,
    pub area_no_for_dist_view_mark: u8,
    pub grid_xno_for_dist_view_mark: u8,
    pub grid_zno_for_dist_view_mark: u8,
    pub cleared_event_flag_id: u32,
    #[bitflag(disableParam_NT, 0)]
    #[bitflag(disableParamReserve1, 1)]
    #[bitflag(isAreaIcon, 2)]
    #[bitflag(isOverrideDistViewMarkPos, 3)]
    #[bitflag(isEnableNoText, 4)]
    #[bitflag(pad3, 5)]
    #[bitflag(dispMask00, 6)]
    #[bitflag(dispMask01, 7)]
    pub bitfield0: u8,
    pub pad2: [u8; 1],
    pub dist_view_icon_id: u16,
    pub angle: f32,
    pub area_no: u8,
    pub grid_xno: u8,
    pub grid_zno: u8,
    pub pad: [u8; 1],
    pub pos_x: f32,
    pub pos_y: f32,
    pub pos_z: f32,
    pub text_id1: i32,
    pub text_enable_flag_id1: u32,
    pub text_disable_flag_id1: u32,
    pub text_id2: i32,
    pub text_enable_flag_id2: u32,
    pub text_disable_flag_id2: u32,
    pub text_id3: i32,
    pub text_enable_flag_id3: u32,
    pub text_disable_flag_id3: u32,
    pub text_id4: i32,
    pub text_enable_flag_id4: u32,
    pub text_disable_flag_id4: u32,
    pub text_id5: i32,
    pub text_enable_flag_id5: u32,
    pub text_disable_flag_id5: u32,
    pub text_id6: i32,
    pub text_enable_flag_id6: u32,
    pub text_disable_flag_id6: u32,
    pub text_id7: i32,
    pub text_enable_flag_id7: u32,
    pub text_disable_flag_id7: u32,
    pub text_id8: i32,
    pub text_enable_flag_id8: u32,
    pub text_disable_flag_id8: u32,
    pub text_type1: u8,
    pub text_type2: u8,
    pub text_type3: u8,
    pub text_type4: u8,
    pub text_type5: u8,
    pub text_type6: u8,
    pub text_type7: u8,
    pub text_type8: u8,
    pub dist_view_id: i32,
    pub pos_x_for_dist_view_mark: f32,
    pub pos_y_for_dist_view_mark: f32,
    pub pos_z_for_dist_view_mark: f32,
    pub dist_view_id1: i32,
    pub dist_view_id2: i32,
    pub dist_view_id3: i32,
    pub disp_min_zoom_step: u8,
    pub select_min_zoom_step: u8,
    pub entry_fetype: u8,
    pub pad4: [u8; 9],
    pub unk_c0: i32,
    pub unk_c4: i32,
    pub unk_c8: i32,
    pub unk_cc: i32,
    pub unk_d0: i32,
    pub unk_d4: i32,
    pub unk_d8: i32,
    pub unk_dc: i32,
    pub unk_e0: i32,
    pub unk_e4: i32,
    pub unk_e8: i32,
    pub unk_ec: i32,
    pub unk_f0: i32,
    pub unk_f4: i32,
    pub unk_f8: i32,
    pub unk_fc: i32,
}

#[derive(ParamStruct, Debug)]
#[repr(C)]
pub struct WwiseValueToStrConvertParamFormat {
    pub disable_param_reserve2: [u8; 3],
    pub param_str: [u8; 32],
}
